[{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others‚Äô private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement [INSERT CONTACT METHOD]. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired Mozilla‚Äôs code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contribution Guidelines","title":"Contribution Guidelines","text":"üôè Thank taking time contribute! input deeply valued, whether issue, pull request, even feedback, regardless size, content scope.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/CONTRIBUTING.html","id":"table-of-contents","dir":"","previous_headings":"","what":"Table of contents","title":"Contribution Guidelines","text":"üë∂ Getting started üìî Code Conduct üóÉ License üìú Issues üö© Pull requests üíª Coding guidelines üèÜ Recognition model ‚ùì Questions","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/CONTRIBUTING.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting started","title":"Contribution Guidelines","text":"Please refer project documentation brief introduction. Please also see articles within project documentation additional information.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contribution Guidelines","text":"Code Conduct governs project. Participants contributors expected follow rules outlined therein.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/CONTRIBUTING.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Contribution Guidelines","text":"contributions covered project‚Äôs license.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/CONTRIBUTING.html","id":"issues","dir":"","previous_headings":"","what":"Issues","title":"Contribution Guidelines","text":"use GitHub track issues, feature requests, bugs. submitting new issue, please check issue already reported. issue already exists, please upvote existing issue üëç. new feature requests, please elaborate context benefit feature users, developers, relevant personas.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/CONTRIBUTING.html","id":"github-flow","dir":"","previous_headings":"Pull requests","what":"GitHub Flow","title":"Contribution Guidelines","text":"repository uses GitHub Flow model collaboration. submit pull request: Create branch Please see branch naming convention . don‚Äôt write access repository, please fork . Make changes Make sure code passes checks imposed GitHub Actions well documented well tested unit tests sufficiently covering changes introduced Create pull request (PR) pull request description, please link relevant issue (), provide detailed description change, include assumptions. Address review comments, Post approval Merge PR write access. Otherwise, reviewer merge PR behalf. Pat back Congratulations! üéâ now official contributor project! grateful contribution.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/CONTRIBUTING.html","id":"branch-naming-convention","dir":"","previous_headings":"Pull requests","what":"Branch naming convention","title":"Contribution Guidelines","text":"Suppose changes related current issue current project; please name branch follows: <issue_id>_<short_description>. Please use underscore (_) delimiter word separation. example, 420_fix_ui_bug suitable branch name change resolving UI-related bug reported issue number 420 current project. change affects multiple repositories, please name branches follows: <issue_id>_<issue_repo>_<short description>. example, 69_awesomeproject_fix_spelling_error reference issue 69 reported project awesomeproject aims resolve one spelling errors multiple (likely related) repositories.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/CONTRIBUTING.html","id":"monorepo-and-stageddependencies","dir":"","previous_headings":"Pull requests","what":"monorepo and staged.dependencies","title":"Contribution Guidelines","text":"Sometimes might need change upstream dependent package(s) able submit meaningful change. using staged.dependencies functionality simulate monorepo behavior. dependency configuration already specified project‚Äôs staged_dependencies.yaml file. need name feature branches appropriately. exception branch naming convention described . Please refer staged.dependencies package documentation details.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/CONTRIBUTING.html","id":"coding-guidelines","dir":"","previous_headings":"","what":"Coding guidelines","title":"Contribution Guidelines","text":"repository follows unified processes standards adopted maintainers ensure software development carried consistently within teams cohesively across repositories.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/CONTRIBUTING.html","id":"style-guide","dir":"","previous_headings":"Coding guidelines","what":"Style guide","title":"Contribution Guidelines","text":"repository follows standard tidyverse style guide uses lintr lint checks. Customized lint configurations available repository‚Äôs .lintr file.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/CONTRIBUTING.html","id":"dependency-management","dir":"","previous_headings":"Coding guidelines","what":"Dependency management","title":"Contribution Guidelines","text":"Lightweight right weight. repository follows tinyverse recommedations limiting dependencies minimum.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/CONTRIBUTING.html","id":"dependency-version-management","dir":"","previous_headings":"Coding guidelines","what":"Dependency version management","title":"Contribution Guidelines","text":"code compatible (!) historical versions given dependenct package, required specify minimal version DESCRIPTION file. particular: development version requires (imports) development version another package - required put abc (>= 1.2.3.9000).","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/CONTRIBUTING.html","id":"r--package-versions","dir":"","previous_headings":"Coding guidelines > Recommended development environment & tools","what":"R & package versions","title":"Contribution Guidelines","text":"continuously test packages newest R version along recent dependencies CRAN BioConductor. recommend working environment also set way. can find details R version packages used R CMD check GitHub Action execution log - step prints R sessionInfo(). discover bugs older R versions older set dependencies, please create relevant bug reports.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/CONTRIBUTING.html","id":"pre-commit","dir":"","previous_headings":"Coding guidelines > Recommended development environment & tools","what":"pre-commit","title":"Contribution Guidelines","text":"highly recommend use pre-commit tool combined R hooks pre-commit execute checks committing pushing changes. Pre-commit hooks already available repository‚Äôs .pre-commit-config.yaml file.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/CONTRIBUTING.html","id":"recognition-model","dir":"","previous_headings":"","what":"Recognition model","title":"Contribution Guidelines","text":"mentioned previously, contributions deeply valued appreciated. contribution data available part repository insights, recognize significant contribution hence add contributor package authors list, following rules enforced: Minimum 5% lines code authored* (determined git blame query) top 5 contributors terms number commits lines added lines removed* *Excluding auto-generated code, including limited roxygen comments renv.lock files. package maintainer also reserves right adjust criteria recognize contributions.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/CONTRIBUTING.html","id":"questions","dir":"","previous_headings":"","what":"Questions","title":"Contribution Guidelines","text":"questions regarding contribution guidelines, please contact package/repository maintainer.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/SECURITY.html","id":"reporting-security-issues","dir":"","previous_headings":"","what":"Reporting Security Issues","title":"Security Policy","text":"believe found security vulnerability repositories organization, please report us coordinated disclosure. Please report security vulnerabilities public GitHub issues, discussions, pull requests. Instead, please send email vulnerability.management[@]roche.com. Please include much information listed can help us better understand resolve issue: type issue (e.g., buffer overflow, SQL injection, cross-site scripting) Full paths source file(s) related manifestation issue location affected source code (tag/branch/commit direct URL) special configuration required reproduce issue Step--step instructions reproduce issue Proof--concept exploit code (possible) Impact issue, including attacker might exploit issue information help us triage report quickly.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/SECURITY.html","id":"data-security-standards-dss","dir":"","previous_headings":"","what":"Data Security Standards (DSS)","title":"Security Policy","text":"Please make sure reporting issues form bug, feature, pull request, sensitive information PII, PHI, PCI completely removed text attachments, including pictures videos.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/articles/decorate-module-output.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Decorate Module Output","text":"outputs produced teal modules, like graphs tables, created module developer look certain way. hard design output satisfy every possible user, form output considered default value can customized. describe concept decoration, enabling app developer tailor outputs specific requirements without rewriting original module code. decoration process build upon transformation procedures, introduced teal. transformators meant edit module‚Äôs input, decorators meant adjust module‚Äôs output. distinguish difference, modules teal.modules.general 2 separate parameters: transformators decorators. get complete understanding refer following vignettes: Transforming input data vignette. Transforming module output vignette.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/articles/decorate-module-output.html","id":"outputs-that-can-be-decorated","dir":"Articles","previous_headings":"","what":"Outputs that can be decorated","title":"Decorate Module Output","text":"important note output objects given module can decorated. module function documentation‚Äôs Decorating Module section information. can also refer table shown know module outputs can decorated. Also, note five different types objects can decorated: ElementaryTable ggplot grob datatables trellis Tip: general tip trying decorate output module copy reproducible code running separate R session quickly iterate decoration want.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/articles/decorate-module-output.html","id":"decorating-elementarytable","dir":"Articles","previous_headings":"","what":"Decorating ElementaryTable","title":"Decorate Module Output","text":"‚Äôs example showcase can edit output class ElementaryTable. rtables modifiers like rtables::insert_rrow can applied modify object.","code":"library(teal.modules.general)  data <- teal_data(join_keys = default_cdisc_join_keys[c(\"ADSL\", \"ADRS\")]) data <- within(data, {   require(nestcolor)   ADSL <- rADSL })  insert_rrow_decorator <- function(default_caption = \"I am a good new row\") {   teal_transform_module(     label = \"New row\",     ui = function(id) {       shiny::textInput(shiny::NS(id, \"new_row\"), \"New row\", value = default_caption)     },     server = function(id, data) {       moduleServer(id, function(input, output, session) {         reactive({           data() |>             within(               {                 table <- rtables::insert_rrow(table, rtables::rrow(new_row))               },               new_row = input$new_row             )         })       })     }   ) }  app <- init(   data = data,   modules = modules(     tm_t_crosstable(       label = \"Cross Table\",       x = data_extract_spec(         dataname = \"ADSL\",         select = select_spec(           choices = variable_choices(data[[\"ADSL\"]], subset = function(data) {             idx <- !vapply(data, inherits, logical(1), c(\"Date\", \"POSIXct\", \"POSIXlt\"))             names(data)[idx]           }),           selected = \"COUNTRY\",           multiple = TRUE,           ordered = TRUE         )       ),       y = data_extract_spec(         dataname = \"ADSL\",         select = select_spec(           choices = variable_choices(data[[\"ADSL\"]], subset = function(data) {             idx <- vapply(data, is.factor, logical(1))             names(data)[idx]           }),           selected = \"SEX\"         )       ),       decorators = list(         table = insert_rrow_decorator()       )     )   ) )  if (interactive()) {   shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/articles/decorate-module-output.html","id":"decorating-ggplot","dir":"Articles","previous_headings":"","what":"Decorating ggplot","title":"Decorate Module Output","text":"‚Äôs example showcase can edit output class ggplot. can extend using ggplot2 functions.","code":"library(teal.modules.general)  data <- teal_data(join_keys = default_cdisc_join_keys[c(\"ADSL\", \"ADRS\")]) data <- within(data, {   require(nestcolor)   ADSL <- rADSL })  ggplot_caption_decorator <- function(default_caption = \"I am a good decorator\") {   teal_transform_module(     label = \"Caption\",     ui = function(id) {       shiny::textInput(shiny::NS(id, \"footnote\"), \"Footnote\", value = default_caption)     },     server = function(id, data) {       moduleServer(id, function(input, output, session) {         reactive({           data() |>             within(               {                 plot <- plot + ggplot2::labs(caption = footnote)               },               footnote = input$footnote             )         })       })     }   ) }  app <- init(   data = data,   modules = modules(     tm_a_regression(       label = \"Regression\",       response = data_extract_spec(         dataname = \"ADSL\",         select = select_spec(           label = \"Select variable:\",           choices = \"BMRKR1\",           selected = \"BMRKR1\",           multiple = FALSE,           fixed = TRUE         )       ),       regressor = data_extract_spec(         dataname = \"ADSL\",         select = select_spec(           label = \"Select variables:\",           choices = variable_choices(data[[\"ADSL\"]], c(\"AGE\", \"SEX\", \"RACE\")),           selected = \"AGE\",           multiple = TRUE,           fixed = FALSE         )       ),       decorators = list(         plot = ggplot_caption_decorator(\"I am a Regression\")       )     )   ) )  if (interactive()) {   shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/articles/decorate-module-output.html","id":"decorating-grob","dir":"Articles","previous_headings":"","what":"Decorating grob","title":"Decorate Module Output","text":"‚Äôs example showcase can edit output class grob. can extend using grid gridExtra functions.","code":"library(teal.modules.general)  data <- teal_data(join_keys = default_cdisc_join_keys[c(\"ADSL\", \"ADRS\")]) data <- within(data, {   ADSL <- rADSL })  grob_caption_decorator <- function(default_caption = \"I am a good decorator\") {   teal_transform_module(     label = \"Caption\",     ui = function(id) {       shiny::textInput(shiny::NS(id, \"footnote\"), \"Footnote\", value = default_caption)     },     server = function(id, data) {       moduleServer(id, function(input, output, session) {         reactive({           data() |>             within(               {                 footnote_grob <- grid::textGrob(                   footnote,                   x = 0, hjust = 0,                   gp = grid::gpar(fontsize = 10, fontface = \"italic\", col = \"gray50\")                 )                 plot <- gridExtra::arrangeGrob(                   plot,                   footnote_grob,                   ncol = 1,                   heights = grid::unit.c(                     grid::unit(1, \"npc\") - grid::unit(1, \"lines\"), grid::unit(1, \"lines\")                   )                 )               },               footnote = input$footnote             )         })       })     }   ) }  app <- init(   data = data,   modules = modules(     tm_g_association(       ref = data_extract_spec(         dataname = \"ADSL\",         select = select_spec(           choices = variable_choices(             data[[\"ADSL\"]],             c(\"SEX\", \"RACE\", \"COUNTRY\", \"ARM\", \"STRATA1\", \"STRATA2\", \"ITTFL\", \"BMRKR2\")           ),           selected = \"RACE\"         )       ),       vars = data_extract_spec(         dataname = \"ADSL\",         select = select_spec(           choices = variable_choices(             data[[\"ADSL\"]],             c(\"SEX\", \"RACE\", \"COUNTRY\", \"ARM\", \"STRATA1\", \"STRATA2\", \"ITTFL\", \"BMRKR2\")           ),           selected = \"BMRKR2\",           multiple = TRUE         )       ),       decorators = list(         plot = grob_caption_decorator(\"I am a Association\")       )     )   ) )  if (interactive()) {   shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/articles/decorate-module-output.html","id":"decorating-datatables","dir":"Articles","previous_headings":"","what":"Decorating datatables","title":"Decorate Module Output","text":"‚Äôs example showcase can edit output class datatables. Please refer helper functions DT package learn extending datatables objects.","code":"library(teal.modules.general)  data <- teal_data(join_keys = default_cdisc_join_keys[c(\"ADSL\", \"ADRS\")]) data <- within(data, {   require(nestcolor)   ADSL <- rADSL }) fact_vars_adsl <- names(Filter(isTRUE, sapply(data[[\"ADSL\"]], is.factor))) vars <- choices_selected(variable_choices(data[[\"ADSL\"]], fact_vars_adsl))  dt_table_decorator <- function(color1 = \"pink\", color2 = \"lightblue\") {   teal_transform_module(     label = \"Table color\",     ui = function(id) {       selectInput(         NS(id, \"color\"),         \"Table Color\",         choices = c(\"white\", color1, color2),         selected = \"Default\"       )     },     server = function(id, data) {       moduleServer(id, function(input, output, session) {         reactive({           data() |> within(             {               summary_table <- DT::formatStyle(                 summary_table,                 columns = attr(summary_table$x, \"colnames\")[-1],                 target = \"row\",                 backgroundColor = color               )             },             color = input$color           )         })       })     }   ) }  app <- init(   data = data,   modules = modules(     tm_g_distribution(       dist_var = data_extract_spec(         dataname = \"ADSL\",         select = select_spec(           choices = variable_choices(data[[\"ADSL\"]], c(\"AGE\", \"BMRKR1\")),           selected = \"BMRKR1\",           multiple = FALSE,           fixed = FALSE         )       ),       strata_var = data_extract_spec(         dataname = \"ADSL\",         filter = filter_spec(           vars = vars,           multiple = TRUE         )       ),       group_var = data_extract_spec(         dataname = \"ADSL\",         filter = filter_spec(           vars = vars,           multiple = TRUE         )       ),       decorators = list(         summary_table = dt_table_decorator()       )     )   ) ) ## Initializing tm_g_distribution if (interactive()) {   shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/articles/decorate-module-output.html","id":"decorating-trellis","dir":"Articles","previous_headings":"","what":"Decorating trellis","title":"Decorate Module Output","text":"‚Äôs example showcase can edit output class trellis. rtables modifiers like rtables::insert_rrow can applied modify object.","code":"library(teal.modules.general)  data <- teal_data(join_keys = default_cdisc_join_keys[c(\"ADSL\", \"ADRS\")]) data <- within(data, {   require(nestcolor)   ADSL <- rADSL   ADRS <- rADRS })  trellis_subtitle_decorator <- function(default_caption = \"I am a good decorator\") {   teal_transform_module(     label = \"Caption\",     ui = function(id) shiny::textInput(shiny::NS(id, \"footnote\"), \"Footnote\", value = default_caption),     server = function(id, data) {       moduleServer(id, function(input, output, session) {         reactive({           data() |>             within(               {                 plot <- update(plot, sub = footnote)               },               footnote = input$footnote             )         })       })     }   ) }  app <- init(   data = data,   modules = modules(     tm_g_scatterplotmatrix(       label = \"Scatterplot matrix\",       variables = list(         data_extract_spec(           dataname = \"ADSL\",           select = select_spec(             choices = variable_choices(data[[\"ADSL\"]]),             selected = c(\"AGE\", \"RACE\", \"SEX\"),             multiple = TRUE,             ordered = TRUE           )         ),         data_extract_spec(           dataname = \"ADRS\",           filter = filter_spec(             label = \"Select endpoints:\",             vars = c(\"PARAMCD\", \"AVISIT\"),             choices = value_choices(data[[\"ADRS\"]], c(\"PARAMCD\", \"AVISIT\"), c(\"PARAM\", \"AVISIT\")),             selected = \"INVET - END OF INDUCTION\",             multiple = TRUE           ),           select = select_spec(             choices = variable_choices(data[[\"ADRS\"]]),             selected = c(\"AGE\", \"AVAL\", \"ADY\"),             multiple = TRUE,             ordered = TRUE           )         )       ),       decorators = list(         plot = trellis_subtitle_decorator(\"I am a Scatterplot matrix\")       )     )   ) )  if (interactive()) {   shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/articles/teal-modules-general.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Getting started with teal.modules.general","text":"teal extends shiny framework, enabling creation interactive GUI applications using R. shiny, tealfacilitate development extensive applications combining small, decoupled modules. teal.modules.general package consist collection modules essential developing teal applications. ‚Äúgeneral‚Äù sense intended functions modules fundamental. contrasts specialized focus clinical data found teal.modules.clinical package. modules teal.modules.general can used conjunction modules teal.modules.clinical / shiny modules build large teal / shiny app. concepts presented require knowledge core features teal, specifically launch teal application pass data . Therefore, highly recommended refer README file introductory vignette teal package. See also teal.modules.clinical‚Äôs README.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/articles/teal-modules-general.html","id":"main-features","dir":"Articles","previous_headings":"","what":"Main features","title":"Getting started with teal.modules.general","text":"five areas data science teal.modules.general provides tools solutions (modules) : viewing data tabular formats visualizing data plots graphs viewing data files directory examining missing extreme values data performing data analysis See package functions / modules.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/articles/teal-modules-general.html","id":"example-application","dir":"Articles","previous_headings":"","what":"Example application","title":"Getting started with teal.modules.general","text":"simple application featuring tm_variable_browser() module:","code":"# load libraries library(teal.modules.general) library(teal.widgets) library(sparkline)  # teal_data object data <- teal_data() data <- within(data, {   ADSL <- teal.data::rADSL   ADTTE <- teal.data::rADTTE }) join_keys(data) <- default_cdisc_join_keys[names(data)]  # tm_variable_browser module tm_variable_browser_module <- tm_variable_browser(   label = \"Variable browser\",   ggplot2_args = ggplot2_args(     labs = list(subtitle = \"Plot generated by Variable Browser Module\")   ) )  # initialize the app app <- init(   data = data,   modules = modules(tm_variable_browser_module) )  shinyApp(app$ui, app$server)"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/articles/teal-modules-general.html","id":"try-it-out-in-shinylive","dir":"Articles","previous_headings":"","what":"Try it out in Shinylive","title":"Getting started with teal.modules.general","text":"Open Shinylive Let‚Äôs break app pieces: 1: Load necessary libraries data. 2: Construct teal_data object containing serve source data teal app. teal_data encapsulates data app, also houses code required create data maintain reproducibility. , create empty teal_data object evaluate code produce data within teal_data object, code data stored together. Following , set datanames join_keys. 3: Initialize teal application specified data modules, case, module: tm_variable_browser, datasets:ADSL ADTTE. shiny::shinyApp() use ui server component initialize teal app. teal app, data modules decoupled. app : app developer specified data assigned data argument. app developer specified module assigned modules argument. init function took arguments returned list containing ui server object, can demonstrated running:","code":"library(teal.modules.general) library(teal.widgets) data <- teal_data() data <- within(data, {   ADSL <- teal.data::rADSL   ADTTE <- teal.data::rADTTE }) join_keys(data) <- default_cdisc_join_keys[names(data)] tm_variable_browser_module <- tm_variable_browser(   # module name to display in the GUI   label = \"Variable browser\",   # this argument takes a set of arguments to pass to ggplot2.   # the arguments must have the same names as its ggplot2 counterpart, e.g. `subtitle`   ggplot2_args = ggplot2_args(     labs = list(subtitle = \"Plot generated by Variable Browser Module\")   ) )  app <- init(   data = data,   modules = modules(tm_variable_browser_module) )  if (interactive()) {   shinyApp(app$ui, app$server) } class(app) ## [1] \"teal_app\" \"list\" names(app) ## [1] \"ui\"     \"server\""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/articles/using-association-plot.html","id":"teal-application-to-use-association-plot-with-various-datasets-types","dir":"Articles","previous_headings":"","what":"teal application to use association plot with various datasets types","title":"Using association plot","text":"vignette guide four parts create teal application using various types datasets using association plot module tm_g_association(): Load libraries Create data sets Create app variable Run app","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/articles/using-association-plot.html","id":"load-libraries","dir":"Articles","previous_headings":"teal application to use association plot with various datasets types","what":"1 - Load libraries","title":"Using association plot","text":"","code":"library(teal.modules.general) # used to create the app library(dplyr) # used to modify data sets"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/articles/using-association-plot.html","id":"create-data-sets","dir":"Articles","previous_headings":"teal application to use association plot with various datasets types","what":"2 - Create data sets","title":"Using association plot","text":"Inside app 4 datasets used ADSL wide data set subject data ADRS long data set response data subjects different time points study ADTTE long data set time event data ADLB long data set lab measurements subject","code":"data <- teal_data() data <- within(data, {   ADSL <- teal.data::rADSL %>%     mutate(TRTDUR = round(as.numeric(TRTEDTM - TRTSDTM), 1))   ADRS <- teal.data::rADRS   ADTTE <- teal.data::rADTTE   ADLB <- teal.data::rADLB %>%     mutate(CHGC = as.factor(case_when(       CHG < 1 ~ \"N\",       CHG > 1 ~ \"P\",       TRUE ~ \"-\"     ))) }) join_keys(data) <- default_cdisc_join_keys[names(data)]"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/articles/using-association-plot.html","id":"create-an-app-variable","dir":"Articles","previous_headings":"teal application to use association plot with various datasets types","what":"3 - Create an app variable","title":"Using association plot","text":"important section. use teal::init() function create app. data handed using teal.data::teal_data(). app constructed multiple calls tm_g_association() using different combinations data sets.","code":"# configuration for a single wide dataset mod1 <- tm_g_association(   label = \"Single wide dataset\",   ref = data_extract_spec(     dataname = \"ADSL\",     select = select_spec(       label = \"Select variable:\",       choices = variable_choices(data[[\"ADSL\"]]),       selected = \"AGE\",       fixed = FALSE     )   ),   vars = data_extract_spec(     dataname = \"ADSL\",     select = select_spec(       label = \"Select variables:\",       choices = variable_choices(data[[\"ADSL\"]]),       selected = \"BMRKR1\",       multiple = TRUE,       fixed = FALSE     )   ) )  # configuration for two wide datasets mod2 <- tm_g_association(   label = \"Two wide datasets\",   ref = data_extract_spec(     dataname = \"ADSL\",     select = select_spec(       label = \"Select variable:\",       choices = variable_choices(data[[\"ADSL\"]], c(\"AGE\", \"SEX\", \"STRATA1\", \"RACE\")),       selected = \"STRATA1\",       multiple = FALSE,       fixed = FALSE     )   ),   vars = data_extract_spec(     dataname = \"ADSL\",     select = select_spec(       label = \"Select variables:\",       choices = variable_choices(data[[\"ADSL\"]], c(\"AGE\", \"SEX\", \"RACE\", \"COUNTRY\")),       selected = c(\"AGE\", \"COUNTRY\", \"RACE\"),       multiple = TRUE,       fixed = FALSE     )   ) )  # configuration for multiple long datasets mod3 <- tm_g_association(   label = \"Multiple different long datasets\",   ref = data_extract_spec(     dataname = \"ADTTE\",     select = select_spec(       label = \"Select variables:\",       choices = variable_choices(data[[\"ADTTE\"]]),       selected = \"AVAL\",       multiple = FALSE,       fixed = FALSE     ),     filter = filter_spec(       label = \"Select endpoint:\",       vars = \"PARAMCD\",       choices = value_choices(data[[\"ADTTE\"]], \"PARAMCD\", \"PARAM\"),       selected = c(\"PFS\", \"EFS\"),       multiple = TRUE     )   ),   vars = data_extract_spec(     dataname = \"ADRS\",     reshape = TRUE,     select = select_spec(       label = \"Select variable:\",       choices = variable_choices(data[[\"ADRS\"]], c(\"AVALC\", \"BMRKR1\", \"BMRKR2\", \"ARM\")),       selected = \"AVALC\",       multiple = TRUE,       fixed = FALSE     ),     filter = list(       filter_spec(         label = \"Select endpoints:\",         vars = \"PARAMCD\",         choices = value_choices(data[[\"ADRS\"]], \"PARAMCD\", \"PARAM\"),         selected = \"BESRSPI\",         multiple = TRUE       ),       filter_spec(         label = \"Select endpoints:\",         vars = \"AVISIT\",         choices = levels(data[[\"ADRS\"]]$AVISIT),         selected = \"SCREENING\",         multiple = TRUE       )     )   ) )  # configuration for wide and long datasets mod4 <- tm_g_association(   label = \"Wide and long datasets\",   ref = data_extract_spec(     dataname = \"ADRS\",     select = select_spec(       choices = variable_choices(data[[\"ADRS\"]], c(\"AVAL\", \"AVALC\")),       selected = \"AVALC\",       multiple = FALSE,       fixed = FALSE,       label = \"Selected variable:\"     ),     filter = list(       filter_spec(         vars = \"PARAMCD\",         choices = value_choices(data[[\"ADRS\"]], \"PARAMCD\", \"PARAM\"),         selected = levels(data[[\"ADRS\"]]$PARAMCD),         multiple = TRUE,         label = \"Select response\"       ),       filter_spec(         vars = \"AVISIT\",         choices = levels(data[[\"ADRS\"]]$AVISIT),         selected = levels(data[[\"ADRS\"]]$AVISIT),         multiple = TRUE,         label = \"Select visit:\"       )     )   ),   vars = data_extract_spec(     dataname = \"ADSL\",     select = select_spec(       choices = variable_choices(data[[\"ADSL\"]], c(\"SEX\", \"AGE\", \"RACE\", \"COUNTRY\", \"BMRKR1\", \"STRATA1\", \"ARM\")),       selected = \"AGE\",       multiple = TRUE,       fixed = FALSE,       label = \"Select variable:\"     )   ) )  # configuration for the same long dataset (same subsets) mod5 <- tm_g_association(   label = \"Same long datasets (same subsets)\",   ref = data_extract_spec(     dataname = \"ADRS\",     select = select_spec(       choices = variable_choices(data[[\"ADRS\"]]),       selected = \"AVALC\",       multiple = FALSE,       fixed = FALSE,       label = \"Select variable:\"     )   ),   vars = data_extract_spec(     dataname = \"ADRS\",     select = select_spec(       choices = variable_choices(data[[\"ADRS\"]]),       selected = \"PARAMCD\",       multiple = TRUE,       fixed = FALSE,       label = \"Select variable:\"     )   ) )  # configuration for the same long dataset (different subsets) mod6 <- tm_g_association(   label = \"Same long datasets (different subsets)\",   ref = data_extract_spec(     dataname = \"ADLB\",     filter = list(       filter_spec(         vars = \"PARAMCD\",         choices = value_choices(data[[\"ADLB\"]], \"PARAMCD\", \"PARAM\"),         selected = levels(data[[\"ADLB\"]]$PARAMCD)[1],         multiple = FALSE,         label = \"Select lab:\"       ),       filter_spec(         vars = \"AVISIT\",         choices = levels(data[[\"ADLB\"]]$AVISIT),         selected = levels(data[[\"ADLB\"]]$AVISIT)[1],         multiple = FALSE,         label = \"Select visit:\"       )     ),     select = select_spec(       choices = variable_choices(data[[\"ADLB\"]], c(\"AVAL\", \"CHG2\", \"PCHG2\")),       selected = \"AVAL\",       multiple = FALSE     )   ),   vars = data_extract_spec(     dataname = \"ADLB\",     filter = list(       filter_spec(         vars = \"PARAMCD\",         choices = value_choices(data[[\"ADLB\"]], \"PARAMCD\", \"PARAM\"),         selected = levels(data[[\"ADLB\"]]$PARAMCD)[1],         multiple = FALSE,         label = \"Select labs:\"       ),       filter_spec(         vars = \"AVISIT\",         choices = levels(data[[\"ADLB\"]]$AVISIT),         selected = levels(data[[\"ADLB\"]]$AVISIT)[1],         multiple = FALSE,         label = \"Select visit:\"       )     ),     select = select_spec(       choices = variable_choices(data[[\"ADLB\"]]),       selected = \"STRATA1\",       multiple = TRUE     )   ) )  # initialize the app app <- init(   data = data,   modules = modules(     # tm_g_association ----     modules(       label = \"Association plot\",       mod1,       mod2,       mod3,       mod4,       mod5,       mod6     )   ) )"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/articles/using-association-plot.html","id":"run-the-app","dir":"Articles","previous_headings":"teal application to use association plot with various datasets types","what":"4 - Run the app","title":"Using association plot","text":"simple shiny::shinyApp() call let run app. Note app displayed running code inside R session.","code":"shinyApp(app$ui, app$server, options = list(height = 1024, width = 1024))"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/articles/using-association-plot.html","id":"try-it-out-in-shinylive","dir":"Articles","previous_headings":"teal application to use association plot with various datasets types","what":"5 - Try it out in Shinylive","title":"Using association plot","text":"Open Shinylive","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/articles/using-bivariate-plot.html","id":"teal-application-to-use-bivariate-plot-with-various-datasets-types","dir":"Articles","previous_headings":"","what":"teal application to use bivariate plot with various datasets types","title":"Using bivariate plot","text":"vignette guide four parts create teal application using various types datasets using bivariate plot module tm_g_bivariate(): Load libraries Create data sets Create app variable Run app","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/articles/using-bivariate-plot.html","id":"load-libraries","dir":"Articles","previous_headings":"teal application to use bivariate plot with various datasets types","what":"1 - Load libraries","title":"Using bivariate plot","text":"","code":"library(teal.modules.general) # used to create the app library(dplyr) # used to modify data sets"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/articles/using-bivariate-plot.html","id":"create-data-sets","dir":"Articles","previous_headings":"teal application to use bivariate plot with various datasets types","what":"2 - Create data sets","title":"Using bivariate plot","text":"Inside app 4 datasets used ADSL wide data set subject data ADRS long data set response data subjects different time points study ADTTE long data set time event data ADLB long data set lab measurements subject","code":"data <- teal_data() data <- within(data, {   ADSL <- teal.data::rADSL %>%     mutate(TRTDUR = round(as.numeric(TRTEDTM - TRTSDTM), 1))   ADRS <- teal.data::rADRS   ADTTE <- teal.data::rADTTE   ADLB <- teal.data::rADLB %>%     mutate(CHGC = as.factor(case_when(       CHG < 1 ~ \"N\",       CHG > 1 ~ \"P\",       TRUE ~ \"-\"     ))) }) join_keys(data) <- default_cdisc_join_keys[names(data)]"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/articles/using-bivariate-plot.html","id":"create-an-app-variable","dir":"Articles","previous_headings":"teal application to use bivariate plot with various datasets types","what":"3 - Create an app variable","title":"Using bivariate plot","text":"important section. use teal::init() function create app. data handed using teal.data::teal_data(). app constructed multiple calls tm_g_bivariate() using different combinations data sets.","code":"# configuration for the single wide dataset mod1 <- tm_g_bivariate(   label = \"Single wide dataset\",   x = data_extract_spec(     dataname = \"ADSL\",     select = select_spec(       label = \"Select variable:\",       choices = variable_choices(data[[\"ADSL\"]]),       selected = \"BMRKR1\",       fixed = FALSE     )   ),   y = data_extract_spec(     dataname = \"ADSL\",     select = select_spec(       label = \"Select variable:\",       choices = variable_choices(data[[\"ADSL\"]]),       selected = \"SEX\",       multiple = FALSE,       fixed = FALSE     )   ),   row_facet = data_extract_spec(     dataname = \"ADSL\",     select = select_spec(       label = \"Select variables:\",       choices = variable_choices(data[[\"ADSL\"]]),       selected = NULL,       multiple = FALSE,       fixed = FALSE     )   ),   col_facet = data_extract_spec(     dataname = \"ADSL\",     select = select_spec(       label = \"Select variables:\",       choices = variable_choices(data[[\"ADSL\"]]),       selected = NULL,       multiple = FALSE,       fixed = FALSE     )   ) )  # configuration for the two wide datasets mod2 <- tm_g_bivariate(   label = \"Two wide datasets\",   x = data_extract_spec(     dataname = \"ADSL\",     select = select_spec(       label = \"Select variable:\",       choices = variable_choices(data[[\"ADSL\"]], c(\"BMRKR1\", \"AGE\", \"SEX\", \"STRATA1\", \"RACE\")),       selected = c(\"BMRKR1\"),       multiple = FALSE     )   ),   y = data_extract_spec(     dataname = \"ADSL\",     select = select_spec(       label = \"Select variables:\",       choices = variable_choices(data[[\"ADSL\"]], c(\"COUNTRY\", \"AGE\", \"RACE\")),       selected = \"RACE\",       multiple = FALSE     )   ),   row_facet = data_extract_spec(     dataname = \"ADSL\",     select = select_spec(       label = \"Select variable:\",       choices = variable_choices(data[[\"ADSL\"]]),       selected = NULL,       multiple = FALSE,       fixed = FALSE     )   ),   col_facet = data_extract_spec(     dataname = \"ADSL\",     select = select_spec(       label = \"Select variables:\",       choices = variable_choices(data[[\"ADSL\"]]),       selected = NULL,       multiple = FALSE,       fixed = FALSE     )   ) )  # configuration for the multiple different long datasets mod3 <- tm_g_bivariate(   label = \"Multiple different long datasets\",   x = data_extract_spec(     dataname = \"ADRS\",     filter = filter_spec(       label = \"Select endpoints:\",       vars = c(\"PARAMCD\", \"AVISIT\"),       choices = value_choices(data[[\"ADRS\"]], c(\"PARAMCD\", \"AVISIT\"), c(\"PARAM\", \"AVISIT\")),       selected = \"OVRINV - END OF INDUCTION\",       multiple = TRUE     ),     select = select_spec(       choices = variable_choices(data[[\"ADRS\"]], c(\"AVALC\", \"AVAL\")),       selected = \"AVALC\",       multiple = FALSE     )   ),   y = data_extract_spec(     dataname = \"ADTTE\",     select = select_spec(       label = \"Select variable:\",       choices = variable_choices(data[[\"ADTTE\"]], c(\"AVAL\", \"CNSR\")),       selected = \"AVAL\",       multiple = FALSE,       fixed = FALSE     ),     filter = filter_spec(       label = \"Select endpoint:\",       vars = c(\"PARAMCD\"),       choices = value_choices(data[[\"ADTTE\"]], \"PARAMCD\", \"PARAM\"),       selected = \"OS\",       multiple = FALSE     )   ),   row_facet = data_extract_spec(     dataname = \"ADRS\",     filter = filter_spec(       label = \"Select endpoints:\",       vars = c(\"PARAMCD\", \"AVISIT\"),       choices = value_choices(data[[\"ADRS\"]], c(\"PARAMCD\", \"AVISIT\"), c(\"PARAM\", \"AVISIT\")),       selected = \"OVRINV - SCREENING\",       multiple = TRUE     ),     select = select_spec(       label = \"Select variable:\",       choices = variable_choices(data[[\"ADRS\"]], c(\"SEX\", \"RACE\", \"COUNTRY\", \"ARM\", \"PARAMCD\", \"AVISIT\")),       selected = \"SEX\",       multiple = FALSE,       fixed = FALSE     )   ),   col_facet = data_extract_spec(     dataname = \"ADSL\",     select = select_spec(       label = \"Select variables:\",       choices = variable_choices(data[[\"ADSL\"]], c(\"SEX\", \"RACE\")),       selected = NULL,       multiple = FALSE,       fixed = FALSE     )   ),   color_settings = TRUE,   color = data_extract_spec(     dataname = \"ADSL\",     select = select_spec(       choices = variable_choices(data[[\"ADSL\"]], c(\"SEX\", \"RACE\", \"COUNTRY\")),       selected = NULL,       multiple = FALSE,       fixed = FALSE,       label = \"Select variable:\"     )   ),   fill = data_extract_spec(     dataname = \"ADSL\",     select = select_spec(       choices = variable_choices(data[[\"ADSL\"]], c(\"SEX\", \"RACE\", \"COUNTRY\")),       selected = NULL,       multiple = FALSE,       fixed = FALSE,       label = \"Select variable:\"     )   ),   size = data_extract_spec(     dataname = \"ADSL\",     select = select_spec(       choices = variable_choices(data[[\"ADSL\"]], c(\"AGE\", \"BMRKR1\")),       selected = NULL,       multiple = FALSE,       fixed = FALSE,       label = \"Select variable:\"     )   ),   plot_height = c(600, 200, 2000),   ggtheme = \"gray\" )  # configuration for the wide and long datasets mod4 <- tm_g_bivariate(   label = \"Wide and long datasets\",   x = data_extract_spec(     dataname = \"ADRS\",     filter = list(       filter_spec(         vars = \"PARAMCD\",         choices = value_choices(data[[\"ADRS\"]], \"PARAMCD\", \"PARAM\"),         selected = levels(data[[\"ADRS\"]]$PARAMCD)[1],         multiple = FALSE,         label = \"Select response:\"       ),       filter_spec(         vars = \"AVISIT\",         choices = levels(data[[\"ADRS\"]]$AVISIT),         selected = levels(data[[\"ADRS\"]]$AVISIT)[1],         multiple = FALSE,         label = \"Select visit:\"       )     ),     select = select_spec(       choices = variable_choices(data[[\"ADRS\"]], c(\"AVALC\", \"AVAL\")),       selected = \"AVALC\",       multiple = FALSE,       label = \"Select variable:\"     )   ),   y = data_extract_spec(     dataname = \"ADSL\",     select = select_spec(       choices = variable_choices(data[[\"ADSL\"]], c(\"BMRKR1\", \"SEX\", \"AGE\", \"RACE\", \"COUNTRY\")),       selected = \"BMRKR1\",       multiple = FALSE,       label = \"Select variable:\",       fixed = FALSE     )   ),   row_facet = data_extract_spec(     dataname = \"ADRS\",     select = select_spec(       choices = variable_choices(data[[\"ADRS\"]], c(\"SEX\", \"RACE\", \"ARMCD\", \"PARAMCD\")),       selected = \"SEX\",       multiple = FALSE,       label = \"Select variable:\"     )   ),   col_facet = data_extract_spec(     dataname = \"ADRS\",     select = select_spec(       choices = variable_choices(data[[\"ADRS\"]], c(\"SEX\", \"RACE\", \"ARMCD\", \"PARAMCD\", \"AVISIT\")),       selected = \"ARMCD\",       multiple = FALSE,       fixed = FALSE,       label = \"Select variable:\"     )   ) )  # configuration for the wide and multiple long datasets mod5 <- tm_g_bivariate(   label = \"Wide and multiple long datasets\",   x = data_extract_spec(     dataname = \"ADRS\",     filter = list(       filter_spec(         vars = \"PARAMCD\",         choices = value_choices(data[[\"ADRS\"]], \"PARAMCD\", \"PARAM\"),         selected = levels(data[[\"ADRS\"]]$PARAMCD)[1],         multiple = FALSE,         label = \"Select response:\"       ),       filter_spec(         vars = \"AVISIT\",         choices = levels(data[[\"ADRS\"]]$AVISIT),         selected = levels(data[[\"ADRS\"]]$AVISIT)[1],         multiple = FALSE,         label = \"Select visit:\"       )     ),     select = select_spec(       choices = variable_choices(data[[\"ADRS\"]], c(\"AVALC\", \"AVAL\")),       selected = \"AVALC\",       multiple = FALSE,       label = \"Select variable:\"     )   ),   y = data_extract_spec(     dataname = \"ADSL\",     select = select_spec(       choices = variable_choices(data[[\"ADSL\"]], c(\"BMRKR1\", \"SEX\", \"AGE\", \"RACE\", \"COUNTRY\")),       selected = \"BMRKR1\",       multiple = FALSE,       fixed = FALSE     )   ),   row_facet = data_extract_spec(     dataname = \"ADLB\",     filter = list(       filter_spec(         vars = \"PARAMCD\",         choices = value_choices(data[[\"ADLB\"]], \"PARAMCD\", \"PARAM\"),         selected = levels(data[[\"ADLB\"]]$PARAMCD)[1],         multiple = FALSE,         label = \"Select measurement:\"       ),       filter_spec(         vars = \"AVISIT\",         choices = levels(data[[\"ADLB\"]]$AVISIT),         selected = levels(data[[\"ADLB\"]]$AVISIT)[1],         multiple = FALSE,         label = \"Select visit:\"       )     ),     select = select_spec(       choices = \"ARMCD\",       selected = NULL,       multiple = FALSE,       fixed = FALSE,       label = \"Select variable:\"     )   ),   col_facet = data_extract_spec(     dataname = \"ADSL\",     select = select_spec(       choices = variable_choices(data[[\"ADSL\"]], c(\"SEX\", \"AGE\", \"RACE\", \"COUNTRY\")),       selected = NULL,       multiple = FALSE,       fixed = FALSE,       label = \"Select variable:\"     )   ),   color_settings = TRUE,   color = data_extract_spec(     dataname = \"ADSL\",     select = select_spec(       choices = variable_choices(data[[\"ADSL\"]], c(\"SEX\", \"RACE\", \"COUNTRY\")),       selected = NULL,       multiple = FALSE,       fixed = FALSE,       label = \"Select variable:\"     )   ),   fill = data_extract_spec(     dataname = \"ADSL\",     select = select_spec(       choices = variable_choices(data[[\"ADSL\"]], c(\"SEX\", \"RACE\", \"COUNTRY\")),       selected = NULL,       multiple = FALSE,       fixed = FALSE,       label = \"Select variable:\"     )   ),   size = data_extract_spec(     dataname = \"ADSL\",     select = select_spec(       choices = variable_choices(data[[\"ADSL\"]], c(\"AGE\", \"BMRKR1\")),       selected = NULL,       multiple = FALSE,       fixed = FALSE,       label = \"Select variable:\"     )   ),   plot_height = c(600, 200, 2000),   ggtheme = \"gray\" )  # Configuration for the same long datasets (same subset) mod6 <- tm_g_bivariate(   label = \"Same long datasets (same subset)\",   x = data_extract_spec(     dataname = \"ADRS\",     select = select_spec(       choices = variable_choices(data[[\"ADRS\"]], c(\"AVALC\", \"AVAL\")),       selected = \"AVALC\",       multiple = FALSE,       fixed = FALSE,       label = \"Select variable:\"     )   ),   y = data_extract_spec(     dataname = \"ADRS\",     select = select_spec(       choices = variable_choices(data[[\"ADRS\"]], c(\"SEX\", \"RACE\", \"COUNTRY\", \"ARMCD\", \"BMRKR1\", \"BMRKR2\")),       selected = \"BMRKR1\",       multiple = FALSE,       fixed = FALSE,       label = \"Select variable:\"     )   ),   row_facet = data_extract_spec(     dataname = \"ADRS\",     select = select_spec(       choices = variable_choices(data[[\"ADRS\"]], c(\"AVISIT\", \"PARAMCD\")),       selected = \"PARAMCD\",       multiple = FALSE,       label = \"Select variables:\"     )   ),   col_facet = data_extract_spec(     dataname = \"ADRS\",     select = select_spec(       choices = variable_choices(data[[\"ADRS\"]], c(\"AVISIT\", \"PARAMCD\")),       selected = \"AVISIT\",       multiple = FALSE,       label = \"Select variables:\"     )   ) )  # Configuration for the same datasets (different subsets) mod7 <- tm_g_bivariate(   label = \"Same datasets (different subsets)\",   x = data_extract_spec(     dataname = \"ADLB\",     filter = list(       filter_spec(         vars = \"PARAMCD\",         choices = value_choices(data[[\"ADLB\"]], \"PARAMCD\", \"PARAM\"),         selected = levels(data[[\"ADLB\"]]$PARAMCD)[1],         multiple = FALSE,         label = \"Select lab:\"       ),       filter_spec(         vars = \"AVISIT\",         choices = levels(data[[\"ADLB\"]]$AVISIT),         selected = levels(data[[\"ADLB\"]]$AVISIT)[1],         multiple = FALSE,         label = \"Select visit:\"       )     ),     select = select_spec(       choices = \"AVAL\",       selected = \"AVAL\",       multiple = FALSE,       fixed = TRUE     )   ),   y = data_extract_spec(     dataname = \"ADLB\",     filter = list(       filter_spec(         vars = \"PARAMCD\",         choices = value_choices(data[[\"ADLB\"]], \"PARAMCD\", \"PARAM\"),         selected = levels(data[[\"ADLB\"]]$PARAMCD)[1],         multiple = FALSE,         label = \"Select lab:\"       ),       filter_spec(         vars = \"AVISIT\",         choices = levels(data[[\"ADLB\"]]$AVISIT),         selected = levels(data[[\"ADLB\"]]$AVISIT)[1],         multiple = FALSE,         label = \"Select visit:\"       )     ),     select = select_spec(       choices = \"AVAL\",       selected = \"AVAL\",       multiple = FALSE,       fixed = TRUE     )   ),   use_density = FALSE,   row_facet = data_extract_spec(     dataname = \"ADLB\",     filter = list(       filter_spec(         vars = \"PARAMCD\",         choices = value_choices(data[[\"ADLB\"]], \"PARAMCD\", \"PARAM\"),         selected = levels(data[[\"ADLB\"]]$PARAMCD)[1],         multiple = FALSE,         label = \"Select lab:\"       ),       filter_spec(         vars = \"AVISIT\",         choices = levels(data[[\"ADLB\"]]$AVISIT),         selected = levels(data[[\"ADLB\"]]$AVISIT)[1],         multiple = FALSE,         label = \"Select category:\"       )     ),     select = select_spec(       choices = variable_choices(data[[\"ADLB\"]], c(\"RACE\", \"SEX\", \"ARMCD\", \"ACTARMCD\")),       selected = NULL,       multiple = FALSE,       fixed = FALSE,       label = \"Select variable:\"     )   ),   col_facet = data_extract_spec(     dataname = \"ADLB\",     filter = list(       filter_spec(         vars = \"PARAMCD\",         choices = value_choices(data[[\"ADLB\"]], \"PARAMCD\", \"PARAM\"),         selected = levels(data[[\"ADLB\"]]$PARAMCD)[1],         multiple = FALSE,         label = \"Select lab:\"       ),       filter_spec(         vars = \"AVISIT\",         choices = levels(data[[\"ADLB\"]]$AVISIT),         selected = levels(data[[\"ADLB\"]]$AVISIT)[1],         multiple = FALSE,         label = \"Select category:\"       )     ),     select = select_spec(       choices = variable_choices(data[[\"ADLB\"]], c(\"RACE\", \"SEX\", \"ARMCD\", \"ACTARMCD\")),       selected = \"ARMCD\",       multiple = FALSE,       fixed = FALSE,       label = \"Select variables:\"     )   ),   color_settings = TRUE,   color = data_extract_spec(     dataname = \"ADSL\",     select = select_spec(       choices = variable_choices(data[[\"ADSL\"]], c(\"SEX\", \"RACE\", \"COUNTRY\")),       selected = NULL,       multiple = FALSE,       fixed = FALSE,       label = \"Select variable:\"     )   ),   fill = data_extract_spec(     dataname = \"ADSL\",     select = select_spec(       choices = variable_choices(data[[\"ADSL\"]], c(\"SEX\", \"RACE\", \"COUNTRY\")),       selected = NULL,       multiple = FALSE,       fixed = FALSE,       label = \"Select variable:\"     )   ),   size = data_extract_spec(     dataname = \"ADSL\",     select = select_spec(       choices = variable_choices(data[[\"ADSL\"]], c(\"AGE\", \"BMRKR1\")),       selected = NULL,       multiple = FALSE,       fixed = FALSE,       label = \"Select variable:\"     )   ),   plot_height = c(600, 200, 2000),   ggtheme = \"gray\" )  # initialize the app app <- init(   data = data,   modules = modules(     # tm_g_bivariate ------     modules(       label = \"Bivariate plot\",       mod1,       mod2,       mod3,       mod4,       mod5,       mod6,       mod7     )   ) )"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/articles/using-bivariate-plot.html","id":"run-the-app","dir":"Articles","previous_headings":"teal application to use bivariate plot with various datasets types","what":"4 - Run the app","title":"Using bivariate plot","text":"simple shiny::shinyApp() call let run app. Note app displayed running code inside R session.","code":"shinyApp(app$ui, app$server, options = list(height = 1024, width = 1024))"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/articles/using-bivariate-plot.html","id":"try-it-out-in-shinylive","dir":"Articles","previous_headings":"teal application to use bivariate plot with various datasets types","what":"5 - Try it out in Shinylive","title":"Using bivariate plot","text":"Open Shinylive","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/articles/using-cross-table.html","id":"teal-application-to-use-cross-table-with-various-datasets-types","dir":"Articles","previous_headings":"","what":"teal application to use cross table with various datasets types","title":"Using cross table","text":"vignette guide four parts create teal application using various types datasets using cross table module tm_t_crosstable(): Load libraries Create data sets Create app variable Run app","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/articles/using-cross-table.html","id":"load-libraries","dir":"Articles","previous_headings":"teal application to use cross table with various datasets types","what":"1 - Load libraries","title":"Using cross table","text":"","code":"library(teal.modules.general) # used to create the app library(dplyr) # used to modify data sets library(rtables)"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/articles/using-cross-table.html","id":"create-data-sets","dir":"Articles","previous_headings":"teal application to use cross table with various datasets types","what":"2 - Create data sets","title":"Using cross table","text":"Inside app 2 datasets used ADSL wide data set subject data ADLB long data set lab measurements subject","code":"data <- within(data, {   ADSL <- teal.data::rADSL   ADLB <- teal.data::rADLB %>%     mutate(CHGC = as.factor(case_when(       CHG < 1 ~ \"N\",       CHG > 1 ~ \"P\",       TRUE ~ \"-\"     ))) }) join_keys(data) <- default_cdisc_join_keys[names(data)]"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/articles/using-cross-table.html","id":"create-an-app-variable","dir":"Articles","previous_headings":"teal application to use cross table with various datasets types","what":"3 - Create an app variable","title":"Using cross table","text":"important section. use teal::init() function create app. data handed using teal.data::teal_data(). app constructed multiple calls tm_t_crosstable() using different combinations data sets.","code":"# configuration for the single wide dataset mod1 <- tm_t_crosstable(   label = \"Single wide dataset\",   x = data_extract_spec(     \"ADSL\",     select = select_spec(       label = \"Select variable:\",       choices = variable_choices(data[[\"ADSL\"]]),       selected = names(data[[\"ADSL\"]])[5],       multiple = TRUE,       fixed = FALSE,       ordered = TRUE     )   ),   y = data_extract_spec(     \"ADSL\",     select = select_spec(       label = \"Select variable:\",       choices = variable_choices(data[[\"ADSL\"]]),       selected = names(data[[\"ADSL\"]])[6],       multiple = FALSE,       fixed = FALSE     )   ) )  # configuration for the same long datasets (different subsets) mod2 <- tm_t_crosstable(   label = \"Same long datasets (different subsets)\",   x = data_extract_spec(     dataname = \"ADLB\",     filter = filter_spec(       vars = \"PARAMCD\",       choices = value_choices(data[[\"ADLB\"]], \"PARAMCD\", \"PARAM\"),       selected = levels(data[[\"ADLB\"]]$PARAMCD)[1],       multiple = FALSE     ),     select = select_spec(       choices = variable_choices(data[[\"ADLB\"]]),       selected = \"AVISIT\",       multiple = TRUE,       fixed = FALSE,       ordered = TRUE,       label = \"Select variable:\"     )   ),   y = data_extract_spec(     dataname = \"ADLB\",     filter = filter_spec(       vars = \"PARAMCD\",       choices = value_choices(data[[\"ADLB\"]], \"PARAMCD\", \"PARAM\"),       selected = levels(data[[\"ADLB\"]]$PARAMCD)[1],       multiple = FALSE     ),     select = select_spec(       choices = variable_choices(data[[\"ADLB\"]]),       selected = \"LOQFL\",       multiple = FALSE,       fixed = FALSE,       label = \"Select variable:\"     )   ) )  # initialize the app app <- init(   data = data,   modules = modules(     modules(       label = \"Cross table\",       mod1,       mod2     )   ) )"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/articles/using-cross-table.html","id":"run-the-app","dir":"Articles","previous_headings":"teal application to use cross table with various datasets types","what":"4 - Run the app","title":"Using cross table","text":"simple shiny::shinyApp() call let run app. Note app displayed running code inside R session.","code":"shinyApp(app$ui, app$server, options = list(height = 1024, width = 1024))"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/articles/using-cross-table.html","id":"try-it-out-in-shinylive","dir":"Articles","previous_headings":"teal application to use cross table with various datasets types","what":"5 - Try it out in Shinylive","title":"Using cross table","text":"Open Shinylive","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/articles/using-data-table.html","id":"teal-application-to-display-data-table-with-various-datasets-types","dir":"Articles","previous_headings":"","what":"teal application to display data table with various datasets types","title":"Using data table","text":"vignette guide four parts create teal application using various types datasets using data table module tm_data_table(): Load libraries Create data sets Create app variable Run app","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/articles/using-data-table.html","id":"load-libraries","dir":"Articles","previous_headings":"teal application to display data table with various datasets types","what":"1 - Load libraries","title":"Using data table","text":"","code":"library(teal.modules.general) # used to create the app"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/articles/using-data-table.html","id":"create-data-sets","dir":"Articles","previous_headings":"teal application to display data table with various datasets types","what":"2 - Create data sets","title":"Using data table","text":"Inside app 3 datasets used ADSL wide data set subject data ADTTE long data set time event data ADLB long data set lab measurements subject","code":"data <- teal_data() data <- within(data, {   ADSL <- teal.data::rADSL   ADTTE <- teal.data::rADTTE   ADLB <- teal.data::rADLB }) join_keys(data) <- default_cdisc_join_keys[names(data)]"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/articles/using-data-table.html","id":"create-an-app-variable","dir":"Articles","previous_headings":"teal application to display data table with various datasets types","what":"3 - Create an app variable","title":"Using data table","text":"important section. use teal::init() function create app. data handed using teal.data::teal_data(). app constructed multiple calls tm_data_table() using different combinations data sets.","code":"# configuration for the two-datasets example mod1 <- tm_data_table(   label = \"Two datasets\",   variables_selected = list(     ADSL = c(\"STUDYID\", \"USUBJID\", \"SUBJID\", \"SITEID\", \"AGE\", \"SEX\"),     ADTTE = c(       \"STUDYID\", \"USUBJID\", \"SUBJID\", \"SITEID\",       \"PARAM\", \"PARAMCD\", \"ARM\", \"ARMCD\", \"AVAL\", \"CNSR\"     )   ) )  # configuration for the subsetting or changing order of datasets mod2 <- tm_data_table(   label = \"Datasets order\",   variables_selected = list(     ADSL = c(\"STUDYID\", \"USUBJID\", \"SUBJID\", \"SITEID\", \"AGE\", \"SEX\"),     ADLB = c(       \"STUDYID\", \"USUBJID\", \"SUBJID\", \"SITEID\",       \"PARAM\", \"PARAMCD\", \"AVISIT\", \"AVISITN\", \"AVAL\", \"CHG\"     )   ),   datanames = c(\"ADTTE\", \"ADLB\", \"ADSL\") )  # configuration for the advanced usage of DT options and extensions mod3 <- tm_data_table(   label = \"Advanced DT usage\",   dt_args = list(extensions = c(\"Buttons\", \"ColReorder\", \"FixedHeader\")),   dt_options = list(     searching = FALSE,     pageLength = 30,     lengthMenu = c(5, 15, 25, 50, 100),     scrollX = FALSE,     dom = \"lBrtip\",     buttons = c(\"copy\", \"csv\", \"excel\", \"pdf\", \"print\"),     colReorder = TRUE,     fixedHeader = TRUE   ) )  # initialize the app app <- init(   data = data,   modules = modules(     mod1,     mod2,     mod3   ) )"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/articles/using-data-table.html","id":"run-the-app","dir":"Articles","previous_headings":"teal application to display data table with various datasets types","what":"4 - Run the app","title":"Using data table","text":"simple shiny::shinyApp() call let run app. Note app displayed running code inside R session.","code":"shinyApp(app$ui, app$server, options = list(height = 1024, width = 1024))"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/articles/using-data-table.html","id":"try-it-out-in-shinylive","dir":"Articles","previous_headings":"teal application to display data table with various datasets types","what":"5 - Try it out in Shinylive","title":"Using data table","text":"Open Shinylive","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/articles/using-outliers-module.html","id":"teal-application-to-analyze-and-report-outliers-with-various-datasets-types-","dir":"Articles","previous_headings":"","what":"teal application to analyze and report outliers with various datasets types.","title":"Using outliers module","text":"vignette guide four parts create teal application using various types datasets using outliers module tm_outliers(): Load libraries Create data sets Create app variable Run app","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/articles/using-outliers-module.html","id":"load-libraries","dir":"Articles","previous_headings":"teal application to analyze and report outliers with various datasets types.","what":"1 - Load libraries","title":"Using outliers module","text":"","code":"library(teal.modules.general) # used to create the app library(dplyr) # used to modify data sets"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/articles/using-outliers-module.html","id":"create-data-sets","dir":"Articles","previous_headings":"teal application to analyze and report outliers with various datasets types.","what":"2 - Create data sets","title":"Using outliers module","text":"Inside app 3 datasets used ADSL wide data set subject data ADRS long data set response data subjects different time points study ADLB long data set lab measurements subject","code":"data <- teal_data() data <- within(data, {   ADSL <- teal.data::rADSL   ADRS <- teal.data::rADRS   ADLB <- teal.data::rADLB }) join_keys(data) <- default_cdisc_join_keys[names(data)]"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/articles/using-outliers-module.html","id":"create-an-app-variable","dir":"Articles","previous_headings":"teal application to analyze and report outliers with various datasets types.","what":"3 - Create an app variable","title":"Using outliers module","text":"important section. use teal::init() function create app. data handed using teal.data::teal_data(). app constructed multiple calls tm_outliers() using different combinations data sets.","code":"# configuration for the single wide dataset mod1 <- tm_outliers(   label = \"Single wide dataset\",   outlier_var = data_extract_spec(     dataname = \"ADSL\",     select = select_spec(       label = \"Select variable:\",       choices = variable_choices(data[[\"ADSL\"]], c(\"AGE\", \"BMRKR1\")),       selected = \"AGE\",       fixed = FALSE     )   ),   categorical_var = data_extract_spec(     dataname = \"ADSL\",     select = select_spec(       label = \"Select variables:\",       choices = variable_choices(         data[[\"ADSL\"]],         subset = names(Filter(isTRUE, sapply(data[[\"ADSL\"]], is.factor)))       ),       selected = \"RACE\",       multiple = FALSE,       fixed = FALSE     )   ) )  # configuration for the wide and long datasets mod2 <- tm_outliers(   label = \"Wide and long datasets\",   outlier_var = list(     data_extract_spec(       dataname = \"ADSL\",       select = select_spec(         label = \"Select variable:\",         choices = variable_choices(data[[\"ADSL\"]], c(\"AGE\", \"BMRKR1\")),         selected = \"AGE\",         fixed = FALSE       )     ),     data_extract_spec(       dataname = \"ADLB\",       select = select_spec(         label = \"Select variable:\",         choices = variable_choices(data[[\"ADLB\"]], c(\"AVAL\", \"CHG2\")),         selected = \"AVAL\",         multiple = FALSE,         fixed = FALSE       )     )   ),   categorical_var =     data_extract_spec(       dataname = \"ADSL\",       select = select_spec(         label = \"Select variables:\",         choices = variable_choices(           data[[\"ADSL\"]],           subset = names(Filter(isTRUE, sapply(data[[\"ADSL\"]], is.factor)))         ),         selected = \"RACE\",         multiple = FALSE,         fixed = FALSE       )     ) )  # configuration for the multiple long datasets mod3 <- tm_outliers(   label = \"Multiple long datasets\",   outlier_var = list(     data_extract_spec(       dataname = \"ADRS\",       select = select_spec(         label = \"Select variable:\",         choices = variable_choices(data[[\"ADRS\"]], c(\"ADY\", \"EOSDY\")),         selected = \"ADY\",         fixed = FALSE       )     ),     data_extract_spec(       dataname = \"ADLB\",       select = select_spec(         label = \"Select variable:\",         choices = variable_choices(data[[\"ADLB\"]], c(\"AVAL\", \"CHG2\")),         selected = \"AVAL\",         multiple = FALSE,         fixed = FALSE       )     )   ),   categorical_var = list(     data_extract_spec(       dataname = \"ADRS\",       select = select_spec(         label = \"Select variables:\",         choices = variable_choices(data[[\"ADRS\"]], c(\"ARM\", \"ACTARM\")),         selected = \"ARM\",         multiple = FALSE,         fixed = FALSE       )     ),     data_extract_spec(       dataname = \"ADLB\",       select = select_spec(         label = \"Select variables:\",         choices = variable_choices(           data[[\"ADLB\"]],           subset = names(Filter(isTRUE, sapply(data[[\"ADLB\"]], is.factor)))         ),         selected = \"RACE\",         multiple = FALSE,         fixed = FALSE       )     )   ) )  # initialize the app app <- init(   data = data,   modules = modules(     # tm_outliers ----     modules(       label = \"Outliers module\",       mod1,       mod2,       mod3     )   ) )"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/articles/using-outliers-module.html","id":"run-the-app","dir":"Articles","previous_headings":"teal application to analyze and report outliers with various datasets types.","what":"4 - Run the app","title":"Using outliers module","text":"simple shiny::shinyApp() call let run app. Note app displayed running code inside R session.","code":"shinyApp(app$ui, app$server, options = list(height = 1024, width = 1024))"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/articles/using-outliers-module.html","id":"try-it-out-in-shinylive","dir":"Articles","previous_headings":"teal application to analyze and report outliers with various datasets types.","what":"5 - Try it out in Shinylive","title":"Using outliers module","text":"Open Shinylive","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/articles/using-regression-plots.html","id":"teal-application-to-use-regression-plot-with-various-datasets-types","dir":"Articles","previous_headings":"","what":"teal application to use regression plot with various datasets types","title":"Using regression plots","text":"vignette guide four parts create teal application using various types datasets using regression plot module tm_a_regression(): Load libraries Create data sets Create app variable Run app","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/articles/using-regression-plots.html","id":"load-libraries","dir":"Articles","previous_headings":"teal application to use regression plot with various datasets types","what":"1 - Load libraries","title":"Using regression plots","text":"","code":"library(teal.modules.general) # used to create the app library(dplyr) # used to modify data sets"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/articles/using-regression-plots.html","id":"create-data-sets","dir":"Articles","previous_headings":"teal application to use regression plot with various datasets types","what":"2 - Create data sets","title":"Using regression plots","text":"Inside app 4 datasets used ADSL wide data set subject data ADRS long data set response data subjects different time points study ADTTE long data set time event data ADLB long data set lab measurements subject","code":"data <- teal_data() data <- within(data, {   ADSL <- teal.data::rADSL %>%     mutate(TRTDUR = round(as.numeric(TRTEDTM - TRTSDTM), 1))   ADRS <- teal.data::rADRS   ADTTE <- teal.data::rADTTE   ADLB <- teal.data::rADLB %>%     mutate(CHGC = as.factor(case_when(       CHG < 1 ~ \"N\",       CHG > 1 ~ \"P\",       TRUE ~ \"-\"     ))) }) join_keys(data) <- default_cdisc_join_keys[names(data)]"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/articles/using-regression-plots.html","id":"create-an-app-variable","dir":"Articles","previous_headings":"teal application to use regression plot with various datasets types","what":"3 - Create an app variable","title":"Using regression plots","text":"important section. use teal::init() function create app. data handed using teal.data::teal_data(). app constructed multiple calls tm_a_regression() using different combinations data sets.","code":"# configuration for the single wide dataset mod1 <- tm_a_regression(   label = \"Single wide dataset\",   response = data_extract_spec(     dataname = \"ADSL\",     select = select_spec(       label = \"Select variable:\",       choices = variable_choices(data[[\"ADSL\"]], c(\"BMRKR1\", \"BMRKR2\")),       selected = \"BMRKR1\",       multiple = FALSE,       fixed = FALSE     )   ),   regressor = data_extract_spec(     dataname = \"ADSL\",     select = select_spec(       label = \"Select variables:\",       choices = variable_choices(data[[\"ADSL\"]], c(\"AGE\", \"SEX\", \"RACE\")),       selected = \"AGE\",       multiple = TRUE,       fixed = FALSE     )   ) )  # configuration for the two wide datasets mod2 <- tm_a_regression(   label = \"Two wide datasets\",   default_plot_type = 2,   response = data_extract_spec(     dataname = \"ADSL\",     select = select_spec(       label = \"Select variable:\",       choices = variable_choices(data[[\"ADSL\"]], c(\"BMRKR1\", \"BMRKR2\")),       selected = \"BMRKR1\",       multiple = FALSE,       fixed = FALSE     )   ),   regressor = data_extract_spec(     dataname = \"ADSL\",     select = select_spec(       label = \"Select variables:\",       choices = variable_choices(data[[\"ADSL\"]], c(\"AGE\", \"SEX\", \"RACE\")),       selected = c(\"AGE\", \"RACE\"),       multiple = TRUE,       fixed = FALSE     )   ) )  # configuration for the same long datasets (same subset) mod3 <- tm_a_regression(   label = \"Same long datasets (same subset)\",   default_plot_type = 2,   response = data_extract_spec(     dataname = \"ADTTE\",     select = select_spec(       label = \"Select variable:\",       choices = variable_choices(data[[\"ADTTE\"]], c(\"AVAL\", \"CNSR\")),       selected = \"AVAL\",       multiple = FALSE,       fixed = FALSE     ),     filter = filter_spec(       label = \"Select parameter:\",       vars = \"PARAMCD\",       choices = value_choices(data[[\"ADTTE\"]], \"PARAMCD\", \"PARAM\"),       selected = \"PFS\",       multiple = FALSE     )   ),   regressor = data_extract_spec(     dataname = \"ADTTE\",     select = select_spec(       label = \"Select variable:\",       choices = variable_choices(data[[\"ADTTE\"]], c(\"AGE\", \"CNSR\", \"SEX\")),       selected = c(\"AGE\", \"CNSR\", \"SEX\"),       multiple = TRUE     ),     filter = filter_spec(       label = \"Select parameter:\",       vars = \"PARAMCD\",       choices = value_choices(data[[\"ADTTE\"]], \"PARAMCD\", \"PARAM\"),       selected = \"PFS\",       multiple = FALSE     )   ) )  # configuration for the wide and long datasets mod4 <- tm_a_regression(   label = \"Wide and long datasets\",   response = data_extract_spec(     dataname = \"ADLB\",     filter = list(       filter_spec(         vars = \"PARAMCD\",         choices = value_choices(data[[\"ADLB\"]], \"PARAMCD\", \"PARAM\"),         selected = levels(data[[\"ADLB\"]]$PARAMCD)[2],         multiple = TRUE,         label = \"Select measurement:\"       ),       filter_spec(         vars = \"AVISIT\",         choices = levels(data[[\"ADLB\"]]$AVISIT),         selected = levels(data[[\"ADLB\"]]$AVISIT)[2],         multiple = TRUE,         label = \"Select visit:\"       )     ),     select = select_spec(       label = \"Select variable:\",       choices = \"AVAL\",       selected = \"AVAL\",       multiple = FALSE,       fixed = TRUE     )   ),   regressor = data_extract_spec(     dataname = \"ADSL\",     select = select_spec(       label = \"Select variables:\",       choices = variable_choices(data[[\"ADSL\"]], c(\"BMRKR1\", \"BMRKR2\", \"AGE\")),       selected = \"AGE\",       multiple = TRUE,       fixed = FALSE     )   ) )  # configuration for the same long datasets (different subsets) mod5 <- tm_a_regression(   label = \"Same long datasets (different subsets)\",   default_plot_type = 2,   response = data_extract_spec(     dataname = \"ADLB\",     filter = list(       filter_spec(         vars = \"PARAMCD\",         choices = value_choices(data[[\"ADLB\"]], \"PARAMCD\", \"PARAM\"),         selected = levels(data[[\"ADLB\"]]$PARAMCD)[1],         multiple = TRUE,         label = \"Select lab:\"       ),       filter_spec(         vars = \"AVISIT\",         choices = levels(data[[\"ADLB\"]]$AVISIT),         selected = levels(data[[\"ADLB\"]]$AVISIT)[1],         multiple = TRUE,         label = \"Select visit:\"       )     ),     select = select_spec(       choices = \"AVAL\",       selected = \"AVAL\",       multiple = FALSE,       fixed = TRUE     )   ),   regressor = data_extract_spec(     dataname = \"ADLB\",     filter = list(       filter_spec(         vars = \"PARAMCD\",         choices = value_choices(data[[\"ADLB\"]], \"PARAMCD\", \"PARAM\"),         selected = levels(data[[\"ADLB\"]]$PARAMCD)[1],         multiple = FALSE,         label = \"Select labs:\"       ),       filter_spec(         vars = \"AVISIT\",         choices = levels(data[[\"ADLB\"]]$AVISIT),         selected = levels(data[[\"ADLB\"]]$AVISIT)[1],         multiple = FALSE,         label = \"Select visit:\"       )     ),     select = select_spec(       choices = variable_choices(data[[\"ADLB\"]], c(\"AVAL\", \"AGE\", \"BMRKR1\", \"BMRKR2\", \"SEX\", \"ARM\")),       selected = c(\"AVAL\", \"BMRKR1\"),       multiple = TRUE     )   ) )  # initialize the app app <- init(   data = data,   modules = modules(     modules(       label = \"Regression plots\",       mod1,       mod2,       mod3,       mod4,       mod5     )   ) )"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/articles/using-regression-plots.html","id":"run-the-app","dir":"Articles","previous_headings":"teal application to use regression plot with various datasets types","what":"4 - Run the app","title":"Using regression plots","text":"simple shiny::shinyApp() call let run app. Note app displayed running code inside R session.","code":"shinyApp(app$ui, app$server, options = list(height = 1024, width = 1024))"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/articles/using-regression-plots.html","id":"try-it-out-in-shinylive","dir":"Articles","previous_headings":"teal application to use regression plot with various datasets types","what":"5 - Try it out in Shinylive","title":"Using regression plots","text":"Open Shinylive","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/articles/using-response-plot.html","id":"teal-application-to-use-response-plot-with-various-datasets-types","dir":"Articles","previous_headings":"","what":"teal application to use response plot with various datasets types","title":"Using response plot","text":"vignette guide four parts create teal application using various types datasets using response plot module tm_g_response(): Load libraries Create data sets Create app variable Run app","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/articles/using-response-plot.html","id":"load-libraries","dir":"Articles","previous_headings":"teal application to use response plot with various datasets types","what":"1 - Load libraries","title":"Using response plot","text":"","code":"library(teal.modules.general) # used to create the app library(dplyr) # used to modify data sets"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/articles/using-response-plot.html","id":"create-data-sets","dir":"Articles","previous_headings":"teal application to use response plot with various datasets types","what":"2 - Create data sets","title":"Using response plot","text":"Inside app 4 datasets used ADSL wide data set subject data ADRS long data set response data subjects different time points study ADTTE long data set time event data ADLB long data set lab measurements subject","code":"data <- teal_data() data <- within(data, {   ADSL <- teal.data::rADSL %>%     mutate(TRTDUR = round(as.numeric(TRTEDTM - TRTSDTM), 1))   ADRS <- teal.data::rADRS   ADTTE <- teal.data::rADTTE   ADLB <- teal.data::rADLB %>%     mutate(CHGC = as.factor(case_when(       CHG < 1 ~ \"N\",       CHG > 1 ~ \"P\",       TRUE ~ \"-\"     ))) }) join_keys(data) <- default_cdisc_join_keys[names(data)]"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/articles/using-response-plot.html","id":"create-an-app-variable","dir":"Articles","previous_headings":"teal application to use response plot with various datasets types","what":"3 - Create an app variable","title":"Using response plot","text":"important section. use teal::init() function create app. data handed using teal.data::teal_data(). app constructed multiple calls tm_g_response() using different combinations data sets.","code":"# configuration for the single wide dataset mod1 <- tm_g_response(   label = \"Single wide dataset\",   response = data_extract_spec(     dataname = \"ADSL\",     select = select_spec(       label = \"Select variable:\",       choices = variable_choices(data[[\"ADSL\"]], c(\"BMRKR2\", \"ITTFL\", \"BEP01FL\")),       selected = \"BMRKR2\",       multiple = FALSE,       fixed = FALSE     )   ),   x = data_extract_spec(     dataname = \"ADSL\",     select = select_spec(       label = \"Select variable:\",       choices = variable_choices(data[[\"ADSL\"]], c(\"SEX\", \"RACE\", \"COUNTRY\", \"ARMCD\", \"STRATA1\")),       selected = \"ARMCD\",       multiple = FALSE,       fixed = FALSE     )   ) )  # configuration for the two wide datasets mod2 <- tm_g_response(   label = \"Two wide datasets\",   response = data_extract_spec(     dataname = \"ADSL\",     select = select_spec(       label = \"Select variable:\",       choices = variable_choices(data[[\"ADSL\"]], c(\"BMRKR2\", \"ITTFL\", \"BEP01FL\")),       selected = \"BMRKR2\",       multiple = FALSE     )   ),   x = data_extract_spec(     dataname = \"ADSL\",     select = select_spec(       label = \"Select variable:\",       choices = c(\"SEX\", \"COUNTRY\", \"RACE\", \"STRATA1\", \"ARMCD\"),       selected = \"ARMCD\",       multiple = FALSE     )   ) )  # configuration for the multiple long datasets mod3 <- tm_g_response(   label = \"Multiple long datasets\",   response = data_extract_spec(     dataname = \"ADLB\",     filter = list(       filter_spec(         label = \"Select parameter:\",         vars = \"PARAMCD\",         choices = levels(data[[\"ADLB\"]]$PARAMCD),         selected = levels(data[[\"ADLB\"]]$PARAMCD)[1],         multiple = FALSE       ),       filter_spec(         label = \"Select visit:\",         vars = \"AVISIT\",         choices = levels(data[[\"ADLB\"]]$AVISIT),         selected = levels(data[[\"ADLB\"]]$AVISIT)[1],         multiple = FALSE       )     ),     select = select_spec(       label = \"Select variable:\",       choices = variable_choices(data[[\"ADLB\"]], c(\"BMRKR2\", \"ITTFL\", \"BEP01FL\")),       selected = \"BMRKR2\",       multiple = FALSE     )   ),   x = data_extract_spec(     dataname = \"ADRS\",     filter = list(       filter_spec(         label = \"Select parameter:\",         vars = \"PARAMCD\",         choices = levels(data[[\"ADRS\"]]$PARAMCD),         selected = levels(data[[\"ADRS\"]]$PARAMCD)[3],         multiple = FALSE       ),       filter_spec(         label = \"Select visit:\",         vars = \"AVISIT\",         choices = levels(data[[\"ADRS\"]]$AVISIT),         selected = levels(data[[\"ADRS\"]]$AVISIT)[3],         multiple = FALSE       )     ),     select = select_spec(       choices = c(\"AVALC\", \"ITTFL\", \"BEP01FL\"),       selected = \"AVALC\",       multiple = FALSE,       fixed = TRUE     )   ),   row_facet = data_extract_spec(     dataname = \"ADSL\",     select = select_spec(       label = \"Select variable:\",       choices = \"SEX\",       selected = NULL,       multiple = FALSE     )   ),   col_facet = data_extract_spec(     dataname = \"ADSL\",     select = select_spec(       label = \"Select variable:\",       choices = variable_choices(data[[\"ADSL\"]], c(\"SEX\", \"COUNTRY\")),       selected = NULL,       multiple = FALSE     )   ) )  # configuration for the wide and long dataset mod4 <- tm_g_response(   label = \"Wide and long dataset\",   response = data_extract_spec(     dataname = \"ADLB\",     filter = list(       filter_spec(         vars = \"PARAMCD\",         choices = levels(data[[\"ADLB\"]]$PARAMCD),         selected = levels(data[[\"ADLB\"]]$PARAMCD)[2],         multiple = TRUE,         label = \"Select measurement:\"       ),       filter_spec(         vars = \"AVISIT\",         choices = levels(data[[\"ADLB\"]]$AVISIT),         selected = levels(data[[\"ADLB\"]]$AVISIT)[2],         multiple = TRUE,         label = \"Select visit:\"       )     ),     select = select_spec(       choices = variable_choices(data[[\"ADLB\"]], c(\"BMRKR2\", \"ITTFL\", \"BEP01FL\")),       selected = \"BMRKR2\",       multiple = FALSE,       fixed = FALSE,       label = \"Select variable:\"     )   ),   x = data_extract_spec(     dataname = \"ADSL\",     select = select_spec(       choices = variable_choices(data[[\"ADSL\"]], c(\"ARMCD\", \"BMRKR1\", \"BMRKR2\", \"BEP01FL\")),       selected = \"BMRKR2\",       multiple = FALSE,       fixed = FALSE     )   ) )  # configuration for the same long datasets (same subsets) mod5 <- tm_g_response(   label = \"Same long datasets (same subsets)\",   response = data_extract_spec(     dataname = \"ADRS\",     select = select_spec(       choices = variable_choices(data[[\"ADRS\"]], c(\"BMRKR2\", \"AVALC\", \"BEP01FL\")),       selected = \"AVALC\",       multiple = FALSE,       fixed = TRUE,       label = \"Select variable:\"     )   ),   x = data_extract_spec(     dataname = \"ADRS\",     select = select_spec(       choices = variable_choices(data[[\"ADRS\"]], c(\"AVALC\", \"AGE\", \"SEX\", \"ARMCD\", \"STRATA1\")),       selected = \"ARMCD\",       multiple = FALSE,       fixed = FALSE,       label = \"Select variable:\"     )   ),   row_facet = data_extract_spec(     dataname = \"ADRS\",     select = select_spec(       choices = \"PARAMCD\",       selected = \"PARAMCD\",       multiple = FALSE,       fixed = FALSE,       label = \"Select variable:\"     )   ),   col_facet = data_extract_spec(     dataname = \"ADRS\",     select = select_spec(       choices = \"AVISIT\",       selected = \"AVISIT\",       multiple = FALSE,       fixed = FALSE,       label = \"Select variable:\"     )   ) )  # configuration for the same long datasets (different subsets) mod6 <- tm_g_response(   label = \"Same long datasets (different subsets)\",   response = data_extract_spec(     dataname = \"ADLB\",     filter = filter_spec(       vars = \"PARAMCD\",       choices = levels(data[[\"ADLB\"]]$PARAMCD),       selected = levels(data[[\"ADLB\"]]$PARAMCD)[2],       multiple = FALSE,       label = \"Select lab:\"     ),     select = select_spec(       choices = \"BMRKR2\",       selected = \"BMRKR2\",       multiple = FALSE,       fixed = TRUE     )   ),   x = data_extract_spec(     dataname = \"ADLB\",     filter = filter_spec(       vars = \"PARAMCD\",       choices = levels(data[[\"ADLB\"]]$PARAMCD),       selected = levels(data[[\"ADLB\"]]$PARAMCD)[1],       multiple = FALSE,       label = \"Select lab:\"     ),     select = select_spec(       choices = variable_choices(data[[\"ADLB\"]], c(\"AVISIT\", \"PARAMCD\", \"BEP01FL\")),       selected = \"AVISIT\",       multiple = FALSE,       fixed = TRUE     )   ),   row_facet = data_extract_spec(     dataname = \"ADLB\",     filter = list(       filter_spec(         vars = \"PARAMCD\",         choices = levels(data[[\"ADLB\"]]$PARAMCD),         selected = levels(data[[\"ADLB\"]]$PARAMCD)[1],         multiple = FALSE,         label = \"Select lab:\"       ),       filter_spec(         vars = \"AVISIT\",         choices = levels(data[[\"ADLB\"]]$AVISIT),         selected = levels(data[[\"ADLB\"]]$AVISIT)[1],         multiple = FALSE,         label = \"Select visit:\"       )     ),     select = select_spec(       choices = variable_choices(data[[\"ADLB\"]], c(\"SEX\", \"RACE\", \"ARMCD\")),       selected = NULL,       multiple = FALSE,       fixed = FALSE,       label = \"Select Variable\"     )   ),   col_facet = data_extract_spec(     dataname = \"ADLB\",     filter = list(       filter_spec(         vars = \"PARAMCD\",         choices = levels(data[[\"ADLB\"]]$PARAMCD),         selected = levels(data[[\"ADLB\"]]$PARAMCD)[1],         multiple = FALSE,         label = \"Select lab:\"       ),       filter_spec(         vars = \"AVISIT\",         choices = levels(data[[\"ADLB\"]]$AVISIT),         selected = levels(data[[\"ADLB\"]]$AVISIT)[1],         multiple = FALSE,         label = \"Select visit:\"       )     ),     select = select_spec(       choices = variable_choices(data[[\"ADLB\"]], c(\"SEX\", \"RACE\", \"ARMCD\")),       selected = NULL,       multiple = FALSE,       fixed = FALSE,       label = \"Select variable:\"     )   ) )  # initialize the app app <- init(   data = data,   modules = modules(     modules(       label = \"Response plot\",       mod1,       mod2,       mod3,       mod4,       mod5,       mod6     )   ) )"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/articles/using-response-plot.html","id":"run-the-app","dir":"Articles","previous_headings":"teal application to use response plot with various datasets types","what":"4 - Run the app","title":"Using response plot","text":"simple shiny::shinyApp() call let run app. Note app displayed running code inside R session.","code":"shinyApp(app$ui, app$server, options = list(height = 1024, width = 1024))"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/articles/using-response-plot.html","id":"try-it-out-in-shinylive","dir":"Articles","previous_headings":"teal application to use response plot with various datasets types","what":"5 - Try it out in Shinylive","title":"Using response plot","text":"Open Shinylive","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/articles/using-scatterplot-matrix.html","id":"teal-application-to-use-scatter-plot-matrix-with-various-datasets-types","dir":"Articles","previous_headings":"","what":"teal application to use scatter plot matrix with various datasets types","title":"Using scatterplot matrix","text":"vignette guide four parts create teal application using various types datasets using scatter plot matrix module tm_g_scatterplotmatrix(): Load libraries Create data sets Create app variable Run app","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/articles/using-scatterplot-matrix.html","id":"load-libraries","dir":"Articles","previous_headings":"teal application to use scatter plot matrix with various datasets types","what":"1 - Load libraries","title":"Using scatterplot matrix","text":"","code":"library(teal.modules.general) # used to create the app library(dplyr) # used to modify data sets library(lattice)"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/articles/using-scatterplot-matrix.html","id":"create-data-sets","dir":"Articles","previous_headings":"teal application to use scatter plot matrix with various datasets types","what":"2 - Create data sets","title":"Using scatterplot matrix","text":"Inside app 4 datasets used ADSL wide data set subject data ADRS long data set response data subjects different time points study ADTTE long data set time event data ADLB long data set lab measurements subject","code":"data <- teal_data() data <- within(data, {   ADSL <- teal.data::rADSL %>%     mutate(TRTDUR = round(as.numeric(TRTEDTM - TRTSDTM), 1))   ADRS <- teal.data::rADRS   ADTTE <- teal.data::rADTTE   ADLB <- teal.data::rADLB %>%     mutate(CHGC = as.factor(case_when(       CHG < 1 ~ \"N\",       CHG > 1 ~ \"P\",       TRUE ~ \"-\"     ))) }) join_keys(data) <- default_cdisc_join_keys[names(data)]"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/articles/using-scatterplot-matrix.html","id":"create-an-app-variable","dir":"Articles","previous_headings":"teal application to use scatter plot matrix with various datasets types","what":"3 - Create an app variable","title":"Using scatterplot matrix","text":"important section. use teal::init() function create app. data handed using teal.data::teal_data(). app constructed multiple calls tm_g_scatterplotmatrix() using different combinations data sets.","code":"# configuration for the single wide dataset mod1 <- tm_g_scatterplotmatrix(   label = \"Single wide dataset\",   variables = data_extract_spec(     dataname = \"ADSL\",     select = select_spec(       label = \"Select variables:\",       choices = variable_choices(data[[\"ADSL\"]]),       selected = c(\"AGE\", \"RACE\", \"SEX\", \"BMRKR1\", \"BMRKR2\"),       multiple = TRUE,       fixed = FALSE,       ordered = TRUE     )   ) )  # configuration for the one long datasets mod2 <- tm_g_scatterplotmatrix(   \"One long dataset\",   variables = data_extract_spec(     dataname = \"ADTTE\",     select = select_spec(       choices = variable_choices(data[[\"ADTTE\"]], c(\"AVAL\", \"BMRKR1\", \"BMRKR2\")),       selected = c(\"AVAL\", \"BMRKR1\", \"BMRKR2\"),       multiple = TRUE,       fixed = FALSE,       ordered = TRUE,       label = \"Select variables:\"     )   ) )  # configuration for the two long datasets mod3 <- tm_g_scatterplotmatrix(   label = \"Two long datasets\",   variables = list(     data_extract_spec(       dataname = \"ADRS\",       select = select_spec(         label = \"Select variables:\",         choices = variable_choices(data[[\"ADRS\"]]),         selected = c(\"AVAL\", \"AVALC\"),         multiple = TRUE,         fixed = FALSE,         ordered = TRUE,       ),       filter = filter_spec(         label = \"Select endpoints:\",         vars = c(\"PARAMCD\", \"AVISIT\"),         choices = value_choices(data[[\"ADRS\"]], c(\"PARAMCD\", \"AVISIT\"), c(\"PARAM\", \"AVISIT\")),         selected = \"OVRINV - SCREENING\",         multiple = FALSE       )     ),     data_extract_spec(       dataname = \"ADTTE\",       select = select_spec(         label = \"Select variables:\",         choices = variable_choices(data[[\"ADTTE\"]]),         selected = c(\"AVAL\", \"CNSR\"),         multiple = TRUE,         fixed = FALSE,         ordered = TRUE       ),       filter = filter_spec(         label = \"Select parameters:\",         vars = \"PARAMCD\",         choices = value_choices(data[[\"ADTTE\"]], \"PARAMCD\", \"PARAM\"),         selected = \"OS\",         multiple = TRUE       )     )   ) )  # initialize the app app <- init(   data = data,   modules = modules(     modules(       label = \"Scatterplot matrix\",       mod1,       mod2,       mod3     )   ) )"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/articles/using-scatterplot-matrix.html","id":"run-the-app","dir":"Articles","previous_headings":"teal application to use scatter plot matrix with various datasets types","what":"4 - Run the app","title":"Using scatterplot matrix","text":"simple shiny::shinyApp() call let run app. Note app displayed running code inside R session.","code":"shinyApp(app$ui, app$server, options = list(height = 1024, width = 1024))"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/articles/using-scatterplot-matrix.html","id":"try-it-out-in-shinylive","dir":"Articles","previous_headings":"teal application to use scatter plot matrix with various datasets types","what":"5 - Try it out in Shinylive","title":"Using scatterplot matrix","text":"Open Shinylive","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/articles/using-scatterplot.html","id":"teal-application-to-use-scatter-plot-with-various-datasets-types","dir":"Articles","previous_headings":"","what":"teal application to use scatter plot with various datasets types","title":"Using scatterplot","text":"vignette guide four parts create teal application using various types datasets using scatter plot module tm_g_scatterplot(): Load libraries Create data sets Create app variable Run app","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/articles/using-scatterplot.html","id":"load-libraries","dir":"Articles","previous_headings":"teal application to use scatter plot with various datasets types","what":"1 - Load libraries","title":"Using scatterplot","text":"","code":"library(teal.modules.general) # used to create the app library(dplyr) # used to modify data sets library(ggpmisc) library(ggExtra) library(colourpicker)"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/articles/using-scatterplot.html","id":"create-data-sets","dir":"Articles","previous_headings":"teal application to use scatter plot with various datasets types","what":"2 - Create data sets","title":"Using scatterplot","text":"Inside app 4 datasets used ADSL wide data set subject data ADRS long data set response data subjects different time points study ADTTE long data set time event data ADLB long data set lab measurements subject","code":"data <- teal_data() data <- within(data, {   ADSL <- teal.data::rADSL %>%     mutate(TRTDUR = round(as.numeric(TRTEDTM - TRTSDTM), 1))   ADRS <- teal.data::rADRS   ADTTE <- teal.data::rADTTE   ADLB <- teal.data::rADLB %>%     mutate(CHGC = as.factor(case_when(       CHG < 1 ~ \"N\",       CHG > 1 ~ \"P\",       TRUE ~ \"-\"     ))) }) join_keys(data) <- default_cdisc_join_keys[names(data)]"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/articles/using-scatterplot.html","id":"create-an-app-variable","dir":"Articles","previous_headings":"teal application to use scatter plot with various datasets types","what":"3 - Create an app variable","title":"Using scatterplot","text":"important section. use teal::init() function create app. data handed using teal.data::teal_data(). app constructed multiple calls tm_g_scatterplot() using different combinations data sets.","code":"# configuration for the single wide datasets mod1 <- tm_g_scatterplot(   label = \"Single wide dataset\",   x = data_extract_spec(     dataname = \"ADSL\",     select = select_spec(       label = \"Select variable:\",       choices = variable_choices(data[[\"ADSL\"]], c(\"AGE\", \"BMRKR1\", \"BMRKR2\")),       selected = \"AGE\",       multiple = FALSE,       fixed = FALSE     )   ),   y = data_extract_spec(     dataname = \"ADSL\",     select = select_spec(       label = \"Select variable:\",       choices = variable_choices(data[[\"ADSL\"]], c(\"AGE\", \"BMRKR1\", \"BMRKR2\")),       selected = \"BMRKR1\",       multiple = FALSE,       fixed = FALSE     )   ),   color_by = data_extract_spec(     dataname = \"ADSL\",     select = select_spec(       label = \"Select variables:\",       choices = variable_choices(data[[\"ADSL\"]], c(\"RACE\", \"SEX\")),       selected = NULL,       multiple = TRUE,       fixed = FALSE     )   ) )  # configuration for the two wide datasets mod2 <- tm_g_scatterplot(   label = \"Two wide datasets\",   x = data_extract_spec(     dataname = \"ADSL\",     select = select_spec(       label = \"Select variable:\",       choices = variable_choices(data[[\"ADSL\"]], c(\"BMRKR1\", \"BMRKR2\")),       selected = \"BMRKR1\",       multiple = FALSE,       fixed = FALSE     )   ),   y = data_extract_spec(     dataname = \"ADSL\",     select = select_spec(       label = \"Select variable:\",       choices = variable_choices(data[[\"ADSL\"]], c(\"AGE\", \"SEX\")),       selected = \"AGE\",       multiple = FALSE,       fixed = FALSE     )   ),   color_by = data_extract_spec(     dataname = \"ADSL\",     select = select_spec(       label = \"Select variable:\",       choices = variable_choices(data[[\"ADSL\"]], c(\"COUNTRY\", \"AGE\", \"RACE\")),       selected = \"COUNTRY\",       multiple = FALSE,       fixed = FALSE     )   ) )  # configuration for the different long datasets mod3 <- tm_g_scatterplot(   label = \"Different long datasets\",   x = data_extract_spec(     dataname = \"ADRS\",     select = select_spec(       label = \"Select variable:\",       choices = variable_choices(data[[\"ADRS\"]]),       selected = \"AVAL\",       multiple = FALSE,       fixed = FALSE     ),     filter = filter_spec(       label = \"Select endpoint:\",       vars = c(\"PARAMCD\", \"AVISIT\"),       choices = value_choices(data[[\"ADRS\"]], c(\"PARAMCD\", \"AVISIT\"), c(\"PARAM\", \"AVISIT\")),       selected = \"OVRINV - SCREENING\",       multiple = FALSE     )   ),   y = data_extract_spec(     dataname = \"ADTTE\",     select = select_spec(       label = \"Select variable:\",       choices = variable_choices(data[[\"ADTTE\"]]),       selected = \"AVAL\",       multiple = FALSE,       fixed = FALSE     ),     filter = filter_spec(       label = \"Select parameters:\",       vars = c(\"PARAMCD\"),       choices = value_choices(data[[\"ADTTE\"]], \"PARAMCD\", \"PARAM\"),       selected = \"OS\",       multiple = TRUE     )   ),   color_by = data_extract_spec(     dataname = \"ADSL\",     select = select_spec(       label = \"Select variable:\",       choices = variable_choices(data[[\"ADSL\"]], c(\"AGE\", \"SEX\")),       selected = \"AGE\",       multiple = FALSE,       fixed = FALSE     )   ) )  # configuration for the wide and long datasets mod4 <- tm_g_scatterplot(   label = \"Wide and long datasets\",   x = data_extract_spec(     dataname = \"ADSL\",     select = select_spec(       label = \"Select variable:\",       choices = variable_choices(data[[\"ADSL\"]], c(\"SEX\", \"AGE\", \"BMRKR1\", \"COUNTRY\")),       selected = \"AGE\",       multiple = FALSE,       fixed = FALSE     )   ),   y = data_extract_spec(     dataname = \"ADLB\",     filter = list(       filter_spec(         vars = \"PARAMCD\",         choices = value_choices(data[[\"ADLB\"]], \"PARAMCD\", \"PARAM\"),         selected = levels(data[[\"ADLB\"]]$PARAMCD)[1],         multiple = FALSE,         label = \"Select measurement:\"       ),       filter_spec(         vars = \"AVISIT\",         choices = levels(data[[\"ADLB\"]]$AVISIT),         selected = levels(data[[\"ADLB\"]]$AVISIT)[1],         multiple = FALSE,         label = \"Select visit:\"       )     ),     select = select_spec(       label = \"Selected variable:\",       choices = \"AVAL\",       selected = \"AVAL\",       multiple = FALSE,       fixed = TRUE     )   ),   color_by = data_extract_spec(     dataname = \"ADSL\",     select = select_spec(       label = \"Select variable:\",       choices = variable_choices(data[[\"ADSL\"]], c(\"SEX\", \"AGE\", \"RACE\", \"COUNTRY\")),       selected = NULL,       multiple = FALSE,       fixed = FALSE     )   ) )  # configuration for the same long datasets (same subsets) mod5 <- tm_g_scatterplot(   label = \"Same long datasets (same subsets)\",   x = data_extract_spec(     dataname = \"ADRS\",     select = select_spec(       choices = variable_choices(data[[\"ADRS\"]], c(\"AVAL\", \"BMRKR1\", \"BMRKR2\")),       selected = \"AVAL\",       multiple = FALSE,       fixed = FALSE,       label = \"Select variable:\"     )   ),   y = data_extract_spec(     dataname = \"ADRS\",     select = select_spec(       choices = variable_choices(data[[\"ADRS\"]], c(\"AVAL\", \"BMRKR1\", \"BMRKR2\")),       selected = \"BMRKR1\",       multiple = FALSE,       fixed = FALSE,       label = \"Select variable:\"     )   ),   color_by = data_extract_spec(     dataname = \"ADRS\",     select = select_spec(       choices = variable_choices(data[[\"ADRS\"]], c(\"AGE\", \"SEX\", \"RACE\")),       selected = NULL,       multiple = FALSE,       fixed = FALSE,       label = \"Select variable:\"     )   ) )  # configuration for the same long datasets (different subsets) mod6 <- tm_g_scatterplot(   label = \"Same long datasets (different subsets)\",   x = data_extract_spec(     dataname = \"ADLB\",     filter = list(       filter_spec(         vars = \"PARAMCD\",         choices = value_choices(data[[\"ADLB\"]], \"PARAMCD\", \"PARAM\"),         selected = levels(data[[\"ADLB\"]]$PARAMCD)[1],         multiple = FALSE,         label = \"Select lab:\"       ),       filter_spec(         vars = \"AVISIT\",         choices = levels(data[[\"ADLB\"]]$AVISIT),         selected = levels(data[[\"ADLB\"]]$AVISIT)[1],         multiple = FALSE,         label = \"Select visit:\"       )     ),     select = select_spec(       choices = \"AVAL\",       selected = \"AVAL\",       multiple = FALSE,       fixed = TRUE     )   ),   y = data_extract_spec(     dataname = \"ADLB\",     filter = list(       filter_spec(         vars = \"PARAMCD\",         choices = value_choices(data[[\"ADLB\"]], \"PARAMCD\", \"PARAM\"),         selected = levels(data[[\"ADLB\"]]$PARAMCD)[1],         multiple = FALSE,         label = \"Select lab:\"       ),       filter_spec(         vars = \"AVISIT\",         choices = levels(data[[\"ADLB\"]]$AVISIT),         selected = levels(data[[\"ADLB\"]]$AVISIT)[1],         multiple = FALSE,         label = \"Select visit:\"       )     ),     select = select_spec(       choices = \"AVAL\",       selected = \"AVAL\",       multiple = FALSE,       fixed = TRUE     )   ),   color_by = data_extract_spec(     dataname = \"ADLB\",     filter = list(       filter_spec(         vars = \"PARAMCD\",         choices = value_choices(data[[\"ADLB\"]], \"PARAMCD\", \"PARAM\"),         selected = levels(data[[\"ADLB\"]]$PARAMCD)[1],         multiple = FALSE,         label = \"Select lab:\"       ),       filter_spec(         vars = \"AVISIT\",         choices = levels(data[[\"ADLB\"]]$AVISIT),         selected = levels(data[[\"ADLB\"]]$AVISIT)[1],         multiple = FALSE,         label = \"Select visit:\"       )     ),     select = select_spec(       choices = variable_choices(data[[\"ADLB\"]], c(\"RACE\", \"SEX\")),       selected = \"SEX\",       multiple = FALSE,       fixed = FALSE,       label = \"Select variable:\"     )   ) )  # initialize the app app <- init(   data = data,   modules = modules(     modules(       label = \"Scatterplot\",       mod1,       mod2,       mod3,       mod4,       mod5,       mod6     )   ) )"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/articles/using-scatterplot.html","id":"run-the-app","dir":"Articles","previous_headings":"teal application to use scatter plot with various datasets types","what":"4 - Run the app","title":"Using scatterplot","text":"simple shiny::shinyApp() call let run app. Note app displayed running code inside R session.","code":"shinyApp(app$ui, app$server, options = list(height = 1024, width = 1024))"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/articles/using-scatterplot.html","id":"try-it-out-in-shinylive","dir":"Articles","previous_headings":"teal application to use scatter plot with various datasets types","what":"5 - Try it out in Shinylive","title":"Using scatterplot","text":"Open Shinylive","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Dawid Kaledkowski. Author, maintainer. Pawel Rucki. Author. Mahmoud Hallal. Author. Ondrej Slama. Contributor. Maciej Nasinski. Author. Konrad Pagacz. Author. Nikolas Burkoff. Author. F. Hoffmann-La Roche AG. Copyright holder, funder.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kaledkowski D, Rucki P, Hallal M, Nasinski M, Pagacz K, Burkoff N (2025). teal.modules.general: General Modules 'teal' Applications. R package version 0.4.0, https://github.com/insightsengineering/teal.modules.general/, https://insightsengineering.github.io/teal.modules.general/release-candidate/.","code":"@Manual{,   title = {teal.modules.general: General Modules for 'teal' Applications},   author = {Dawid Kaledkowski and Pawel Rucki and Mahmoud Hallal and Maciej Nasinski and Konrad Pagacz and Nikolas Burkoff},   year = {2025},   note = {R package version 0.4.0,     https://github.com/insightsengineering/teal.modules.general/},   url = {https://insightsengineering.github.io/teal.modules.general/release-candidate/}, }"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/index.html","id":"tealmodulesgeneral","dir":"","previous_headings":"","what":"General Modules for teal Applications","title":"General Modules for teal Applications","text":"package contains set standard teal modules include applications. include modules : viewing data (including tm_variable_browser, tm_data_table, tm_file_viewer, ‚Ä¶) visualizing data (tm_g_scatterplot, tm_g_association, ‚Ä¶) understanding missing outlier values within data (tm_missing_data, tm_outliers, ‚Ä¶) performing simple data analysis (tm_a_pca, tm_g_distribution, tm_a_regression, ‚Ä¶). modules work CDISC data, independent datasets general relational data. Please see teal gallery TLG Catalog see examples teal apps modules package.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"General Modules for teal Applications","text":"Alternatively, might want use development version.","code":"install.packages('teal.modules.general') # install.packages(\"pak\") pak::pak(\"insightsengineering/teal.modules.general\")"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"General Modules for teal Applications","text":"understand use package, please refer Getting Started article, provides multiple examples code implementation.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/index.html","id":"playground","dir":"","previous_headings":"","what":"Playground","title":"General Modules for teal Applications","text":"can try package without installing Shinylive: stable development","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/index.html","id":"getting-help","dir":"","previous_headings":"","what":"Getting help","title":"General Modules for teal Applications","text":"encounter bug feature request, please file issue. questions, discussions, staying date, please use teal channel pharmaverse slack workspace.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/index.html","id":"acknowledgment","dir":"","previous_headings":"","what":"Acknowledgment","title":"General Modules for teal Applications","text":"package result joint efforts many developers stakeholders. like thank everyone contributed far!","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/add_facet_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Add labels for facets to a ggplot2 object ‚Äî add_facet_labels","title":"Add labels for facets to a ggplot2 object ‚Äî add_facet_labels","text":"Enhances ggplot2 plot adding labels describe faceting variables along x y axes.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/add_facet_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add labels for facets to a ggplot2 object ‚Äî add_facet_labels","text":"","code":"add_facet_labels(p, xfacet_label = NULL, yfacet_label = NULL)"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/add_facet_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add labels for facets to a ggplot2 object ‚Äî add_facet_labels","text":"p (ggplot2) object facet labels added. xfacet_label (character) Label facet along x-axis. NULL, label added. vector, labels joined \" & \". yfacet_label (character) Label facet along y-axis. Similar behavior xfacet_label.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/add_facet_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add labels for facets to a ggplot2 object ‚Äî add_facet_labels","text":"Returns grid grob object (drawn grid.draw)","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/add_facet_labels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add labels for facets to a ggplot2 object ‚Äî add_facet_labels","text":"","code":"library(ggplot2) library(grid)  p <- ggplot(mtcars) +   aes(x = mpg, y = disp) +   geom_point() +   facet_grid(gear ~ cyl)  xfacet_label <- \"cylinders\" yfacet_label <- \"gear\" res <- add_facet_labels(p, xfacet_label, yfacet_label) grid.newpage() grid.draw(res)   grid.newpage() grid.draw(add_facet_labels(p, xfacet_label = NULL, yfacet_label))  grid.newpage() grid.draw(add_facet_labels(p, xfacet_label, yfacet_label = NULL))  grid.newpage() grid.draw(add_facet_labels(p, xfacet_label = NULL, yfacet_label = NULL))"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/call_fun_dots.html","id":null,"dir":"Reference","previous_headings":"","what":"Call a function with a character vector for the ... argument ‚Äî call_fun_dots","title":"Call a function with a character vector for the ... argument ‚Äî call_fun_dots","text":"Call function character vector ... argument","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/call_fun_dots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Call a function with a character vector for the ... argument ‚Äî call_fun_dots","text":"","code":"call_fun_dots(fun, str_args)"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/call_fun_dots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Call a function with a character vector for the ... argument ‚Äî call_fun_dots","text":"fun (character) Name function ... argument shall replaced values str_args. str_args (character) character vector function shall executed ","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/call_fun_dots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Call a function with a character vector for the ... argument ‚Äî call_fun_dots","text":"Value call fun arguments specified str_args.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/create_sparklines.html","id":null,"dir":"Reference","previous_headings":"","what":"S3 generic for sparkline widget HTML ‚Äî create_sparklines","title":"S3 generic for sparkline widget HTML ‚Äî create_sparklines","text":"Generates sparkline HTML code corresponding input array. numeric variables creates box plot, character factors - bar plot. Produces empty string variables types.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/create_sparklines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 generic for sparkline widget HTML ‚Äî create_sparklines","text":"","code":"create_sparklines(arr, width = 150, ...)  # S3 method for class 'logical' create_sparklines(arr, ...)  # S3 method for class 'numeric' create_sparklines(arr, width = 150, ...)  # S3 method for class 'character' create_sparklines(arr, ...)  # S3 method for class 'factor' create_sparklines(arr, width = 150, bar_spacing = 5, bar_width = 20, ...)  # S3 method for class 'Date' create_sparklines(arr, width = 150, bar_spacing = 5, bar_width = 20, ...)  # S3 method for class 'POSIXct' create_sparklines(arr, width = 150, bar_spacing = 5, bar_width = 20, ...)  # S3 method for class 'POSIXlt' create_sparklines(arr, width = 150, bar_spacing = 5, bar_width = 20, ...)  # Default S3 method create_sparklines(arr, width = 150, ...)"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/create_sparklines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 generic for sparkline widget HTML ‚Äî create_sparklines","text":"arr vector type length width numeric width sparkline widget (pixels) ... list additional options passed bar plots jquery.sparkline; see jquery.sparkline docs bar_spacing numeric spacing bars (pixels) bar_width numeric width bars (pixels)","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/create_sparklines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"S3 generic for sparkline widget HTML ‚Äî create_sparklines","text":"Character string containing HTML code sparkline HTML widget.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/establish_updating_selection.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates observers updating the currently selected column ‚Äî establish_updating_selection","title":"Creates observers updating the currently selected column ‚Äî establish_updating_selection","text":"created observers update column currently selected left-hand side tabset panel.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/establish_updating_selection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates observers updating the currently selected column ‚Äî establish_updating_selection","text":"","code":"establish_updating_selection(datanames, input, plot_var, columns_names)"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/establish_updating_selection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates observers updating the currently selected column ‚Äî establish_updating_selection","text":"datanames (character) name dataset input (session$input) shiny session input plot_var (list) list containing currently selected dataset (tab) column names columns_names (environment) environment containing bindings dataset","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/establish_updating_selection.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Creates observers updating the currently selected column ‚Äî establish_updating_selection","text":"Creates observer dataset (tab tabset panel).","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/get_scatterplotmatrix_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Get stats for x-y pairs in scatterplot matrix ‚Äî get_scatterplotmatrix_stats","title":"Get stats for x-y pairs in scatterplot matrix ‚Äî get_scatterplotmatrix_stats","text":"Uses stats::cor.test() per default numerical input variables converts results character vector. extended different stats different variable types needed. Meant called lattice::panel.text().","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/get_scatterplotmatrix_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get stats for x-y pairs in scatterplot matrix ‚Äî get_scatterplotmatrix_stats","text":"","code":"get_scatterplotmatrix_stats(   x,   y,   .f = stats::cor.test,   .f_args = list(),   round_stat = 2,   round_pval = 4 )"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/get_scatterplotmatrix_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get stats for x-y pairs in scatterplot matrix ‚Äî get_scatterplotmatrix_stats","text":"x, y (numeric) vectors data values. x y must length. .f (function) function accepts x y formula input ~ x + y. Default stats::cor.test. .f_args (list) arguments passed .f. round_stat (integer(1)) optional, number decimal places use rounding estimate. round_pval (integer(1)) optional, number decimal places use rounding p-value.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/get_scatterplotmatrix_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get stats for x-y pairs in scatterplot matrix ‚Äî get_scatterplotmatrix_stats","text":"Character stats. stats::cor.test() correlation coefficient p-value.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/get_scatterplotmatrix_stats.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get stats for x-y pairs in scatterplot matrix ‚Äî get_scatterplotmatrix_stats","text":"Presently need use formula input stats::cor.test na.fail gets evaluated formula passed (see ).","code":"x = c(1,3,5,7,NA) y = c(3,6,7,8,1) stats::cor.test(x, y, na.action = \"na.fail\") stats::cor.test(~ x + y,  na.action = \"na.fail\")"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/get_scatterplotmatrix_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get stats for x-y pairs in scatterplot matrix ‚Äî get_scatterplotmatrix_stats","text":"","code":"set.seed(1) x <- runif(25, 0, 1) y <- runif(25, 0, 1) x[c(3, 10, 18)] <- NA  get_scatterplotmatrix_stats(x, y, .f = stats::cor.test, .f_args = list(method = \"pearson\")) #> [1] \"cor:0.11\\nP:0.6255\" get_scatterplotmatrix_stats(x, y, .f = stats::cor.test, .f_args = list(   method = \"pearson\",   na.action = na.fail )) #> [1] \"NA\""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/include_css_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Include CSS files from /inst/css/ package directory to application header ‚Äî include_css_files","title":"Include CSS files from /inst/css/ package directory to application header ‚Äî include_css_files","text":"system.file used access files packages, work devtools. Therefore, redefine method package needed. Thus, export method","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/include_css_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Include CSS files from /inst/css/ package directory to application header ‚Äî include_css_files","text":"","code":"include_css_files(pattern = \"*\")"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/include_css_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Include CSS files from /inst/css/ package directory to application header ‚Äî include_css_files","text":"pattern (character) optional, regular expression match file names included.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/include_css_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Include CSS files from /inst/css/ package directory to application header ‚Äî include_css_files","text":"HTML code includes CSS files.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/is_tab_active_js.html","id":null,"dir":"Reference","previous_headings":"","what":"JavaScript condition to check if a specific tab is active ‚Äî is_tab_active_js","title":"JavaScript condition to check if a specific tab is active ‚Äî is_tab_active_js","text":"JavaScript condition check specific tab active","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/is_tab_active_js.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"JavaScript condition to check if a specific tab is active ‚Äî is_tab_active_js","text":"","code":"is_tab_active_js(id, name)"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/is_tab_active_js.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"JavaScript condition to check if a specific tab is active ‚Äî is_tab_active_js","text":"id (character(1)) id tab panel tabs. name (character(1)) name tab.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/is_tab_active_js.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"JavaScript condition to check if a specific tab is active ‚Äî is_tab_active_js","text":"JavaScript expression used shiny::conditionalPanel() determine specified tab active.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/plot_var_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot variable ‚Äî plot_var_summary","title":"Plot variable ‚Äî plot_var_summary","text":"Creates summary plot statistics relevant data type.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/plot_var_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot variable ‚Äî plot_var_summary","text":"","code":"plot_var_summary(   var,   var_lab,   wrap_character = NULL,   numeric_as_factor,   display_density = is.numeric(var),   remove_NA_hist = FALSE,   outlier_definition,   records_for_factor,   ggplot2_args )"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/plot_var_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot variable ‚Äî plot_var_summary","text":"var vector type plotted. numeric variables produces histogram density line, factors creates frequency plot var_lab text describing selected variable displayed plot wrap_character (numeric) number characters wrap text values var numeric_as_factor (logical) numeric variable treated factor display_density (logical) density estimation displayed numeric values remove_NA_hist (logical) NA values removed histogram factor like variables outlier_definition 0 outliers removed, otherwise outliers (outlier_definition*IQR /Q1/Q3 removed) records_for_factor (numeric) number factor levels >= value graph factors shown, list values ggplot2_args (ggplot2_args) object created teal.widgets::ggplot2_args() settings module plot. argument merged options variable teal.ggplot2_args default module setup. details see vignette: vignette(\"custom-ggplot2-arguments\", package = \"teal.widgets\")","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/plot_var_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot variable ‚Äî plot_var_summary","text":"plot","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/remove_outliers_from.html","id":null,"dir":"Reference","previous_headings":"","what":"Removes the outlier observation from an array ‚Äî remove_outliers_from","title":"Removes the outlier observation from an array ‚Äî remove_outliers_from","text":"Removes outlier observation array","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/remove_outliers_from.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Removes the outlier observation from an array ‚Äî remove_outliers_from","text":"","code":"remove_outliers_from(var, outlier_definition)"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/remove_outliers_from.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Removes the outlier observation from an array ‚Äî remove_outliers_from","text":"var (numeric) numeric vector outlier_definition (numeric) 0 outliers removed, otherwise outliers (outlier_definition*IQR /Q1/Q3) removed","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/remove_outliers_from.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Removes the outlier observation from an array ‚Äî remove_outliers_from","text":"(numeric) vector without outlier values","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/render_single_tab.html","id":null,"dir":"Reference","previous_headings":"","what":"Renders a single tab in the left-hand side tabset panel ‚Äî render_single_tab","title":"Renders a single tab in the left-hand side tabset panel ‚Äî render_single_tab","text":"Renders single tab left-hand side tabset panel. rendered tab contains information one dataset many presented module.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/render_single_tab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Renders a single tab in the left-hand side tabset panel ‚Äî render_single_tab","text":"","code":"render_single_tab(   dataset_name,   parent_dataname,   output,   data,   input,   columns_names,   plot_var )"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/render_single_tab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Renders a single tab in the left-hand side tabset panel ‚Äî render_single_tab","text":"dataset_name (character) name dataset contained rendered tab parent_dataname (character) name parent dataname filter variables output (session$output) shiny session output data (teal_data) object containing datasets input (session$input) shiny session input columns_names (environment) environment containing bindings dataset plot_var (list) list containing currently selected dataset (tab) column names","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/render_tab_header.html","id":null,"dir":"Reference","previous_headings":"","what":"Renders the text headlining a single tab in the left-hand side tabset panel ‚Äî render_tab_header","title":"Renders the text headlining a single tab in the left-hand side tabset panel ‚Äî render_tab_header","text":"Renders text headlining single tab left-hand side tabset panel","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/render_tab_header.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Renders the text headlining a single tab in the left-hand side tabset panel ‚Äî render_tab_header","text":"","code":"render_tab_header(dataset_name, output, data)"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/render_tab_header.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Renders the text headlining a single tab in the left-hand side tabset panel ‚Äî render_tab_header","text":"dataset_name (character) name dataset tab output (session$output) shiny session output data (teal_data) object containing datasets","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/render_tab_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Renders the table for a single dataset in the left-hand side tabset panel ‚Äî render_tab_table","title":"Renders the table for a single dataset in the left-hand side tabset panel ‚Äî render_tab_table","text":"table contains column names, column labels, small summary NA values sparkline (appropriate).","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/render_tab_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Renders the table for a single dataset in the left-hand side tabset panel ‚Äî render_tab_table","text":"","code":"render_tab_table(   dataset_name,   parent_dataname,   output,   data,   input,   columns_names,   plot_var )"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/render_tab_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Renders the table for a single dataset in the left-hand side tabset panel ‚Äî render_tab_table","text":"dataset_name (character) name dataset parent_dataname (character) name parent dataname filter variables output (session$output) shiny session output data (teal_data) object containing datasets input (session$input) shiny session input columns_names (environment) environment containing bindings dataset plot_var (list) list containing currently selected dataset (tab) column names","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/render_tabset_panel_content.html","id":null,"dir":"Reference","previous_headings":"","what":"Renders the left-hand side tabset panel of the module ‚Äî render_tabset_panel_content","title":"Renders the left-hand side tabset panel of the module ‚Äî render_tabset_panel_content","text":"Renders left-hand side tabset panel module","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/render_tabset_panel_content.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Renders the left-hand side tabset panel of the module ‚Äî render_tabset_panel_content","text":"","code":"render_tabset_panel_content(   datanames,   parent_dataname,   output,   data,   input,   columns_names,   plot_var )"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/render_tabset_panel_content.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Renders the left-hand side tabset panel of the module ‚Äî render_tabset_panel_content","text":"datanames (character) name dataset parent_dataname (character) name parent dataname filter variables output (session$output) shiny session output data (teal_data) object containing datasets input (session$input) shiny session input columns_names (environment) environment containing bindings dataset plot_var (list) list containing currently selected dataset (tab) column names","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/select_decorators.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset decorators based on the scope ‚Äî select_decorators","title":"Subset decorators based on the scope ‚Äî select_decorators","text":"Subset decorators based scope","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/select_decorators.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset decorators based on the scope ‚Äî select_decorators","text":"","code":"select_decorators(decorators, scope)"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/select_decorators.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset decorators based on the scope ‚Äî select_decorators","text":"decorators (named list) list decorators subset. scope (character) character vector decorator names include.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/select_decorators.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset decorators based on the scope ‚Äî select_decorators","text":"Subsetted list decorators include. can empty list none scope exists decorators argument.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/shared_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Shared parameters documentation ‚Äî shared_params","title":"Shared parameters documentation ‚Äî shared_params","text":"Defines common arguments shared across multiple functions package avoid repetition using inheritParams.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/shared_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shared parameters documentation ‚Äî shared_params","text":"plot_height (numeric) optional, specifies plot height three-element vector value, min, max intended use slider UI element. plot_width (numeric) optional, specifies plot width three-element vector value, min, max slider encoding plot width. rotate_xaxis_labels (logical) optional, whether rotate plot X axis labels. rotate default (FALSE). ggtheme (character) optional, ggplot2 theme used default. Defaults \"gray\". ggplot2_args (ggplot2_args) object created teal.widgets::ggplot2_args() settings module plot. argument merged options variable teal.ggplot2_args default module setup. details see vignette: vignette(\"custom-ggplot2-arguments\", package = \"teal.widgets\") basic_table_args (basic_table_args) object created teal.widgets::basic_table_args() settings module table. argument merged options variable teal.basic_table_args default module setup. details see vignette: vignette(\"custom-basic-table-arguments\", package = \"teal.widgets\") pre_output (shiny.tag) optional, text UI element displayed module's output, providing context title. text placed output put output context. example title. post_output (shiny.tag) optional, text UI element displayed module's output, adding context instructions. Elements like shiny::helpText() useful. alpha (integer(1) integer(3)) optional, specifies point opacity. length alpha one: plot points fixed opacity. length alpha three: plot points opacity dynamically adjusted based vector value, min, max. size (integer(1) integer(3)) optional, specifies point size. length size one: plot point sizes fixed size. length size three: plot points size dynamically adjusted based vector value, min, max. decorators (named list lists teal_transform_module) optional, decorator tables plots included module output reported. decorators applied respective output objects. See section \"Decorating Module\" details.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/shared_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shared parameters documentation ‚Äî shared_params","text":"Object class teal_module used teal applications.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/srv_decorate_teal_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrappers around srv_transform_teal_data that allows to decorate the data ‚Äî srv_decorate_teal_data","title":"Wrappers around srv_transform_teal_data that allows to decorate the data ‚Äî srv_decorate_teal_data","text":"Wrappers around srv_transform_teal_data allows decorate data","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/srv_decorate_teal_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrappers around srv_transform_teal_data that allows to decorate the data ‚Äî srv_decorate_teal_data","text":"","code":"srv_decorate_teal_data(id, data, decorators, expr, expr_is_reactive = FALSE)  ui_decorate_teal_data(id, decorators, ...)"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/srv_decorate_teal_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrappers around srv_transform_teal_data that allows to decorate the data ‚Äî srv_decorate_teal_data","text":"id (character(1)) shiny module instance id. data (reactive returning teal_data) expr (expression reactive) evaluate output decoration. expression must inline code. See within() Default NULL evaluate appending code. expr_is_reactive (logical(1)) whether expr reactive expression skips defusing argument.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/srv_decorate_teal_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Wrappers around srv_transform_teal_data that allows to decorate the data ‚Äî srv_decorate_teal_data","text":"srv_decorate_teal_data wrapper around srv_transform_teal_data allows decorate data additional expressions. original teal_data object error state, show error first. ui_decorate_teal_data wrapper around ui_transform_teal_data.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/teal.modules.general.html","id":null,"dir":"Reference","previous_headings":"","what":"teal.modules.general: General modules to add to a teal application ‚Äî teal.modules.general","title":"teal.modules.general: General modules to add to a teal application ‚Äî teal.modules.general","text":"modules package generic modules work data set (necessarily clinical trials data).","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/teal.modules.general.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"teal.modules.general: General modules to add to a teal application ‚Äî teal.modules.general","text":"Maintainer: Dawid Kaledkowski dawid.kaledkowski@roche.com Authors: Pawel Rucki pawel.rucki@roche.com Mahmoud Hallal mahmoud.hallal@roche.com Maciej Nasinski Konrad Pagacz Nikolas Burkoff contributors: Ondrej Slama ondrej.slama@roche.com [contributor] F. Hoffmann-La Roche AG [copyright holder, funder]","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_a_pca.html","id":null,"dir":"Reference","previous_headings":"","what":"teal module: Principal component analysis ‚Äî tm_a_pca","title":"teal module: Principal component analysis ‚Äî tm_a_pca","text":"Module conducts principal component analysis (PCA) given dataset offers different ways visualizing outcomes, including elbow plot, circle plot, biplot, eigenvector plot. Additionally, enables dynamic customization plot aesthetics, opacity, size, font size, UI inputs.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_a_pca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"teal module: Principal component analysis ‚Äî tm_a_pca","text":"","code":"tm_a_pca(   label = \"Principal Component Analysis\",   dat,   plot_height = c(600, 200, 2000),   plot_width = NULL,   ggtheme = c(\"gray\", \"bw\", \"linedraw\", \"light\", \"dark\", \"minimal\", \"classic\", \"void\"),   ggplot2_args = teal.widgets::ggplot2_args(),   rotate_xaxis_labels = FALSE,   font_size = c(12, 8, 20),   alpha = c(1, 0, 1),   size = c(2, 1, 8),   pre_output = NULL,   post_output = NULL,   transformators = list(),   decorators = list() )"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_a_pca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"teal module: Principal component analysis ‚Äî tm_a_pca","text":"label (character(1)) Label shown navigation item module module group. modules() defaults \"root\". See Details. dat (data_extract_spec list multiple data_extract_spec) specifying columns used compute PCA. plot_height (numeric) optional, specifies plot height three-element vector value, min, max intended use slider UI element. plot_width (numeric) optional, specifies plot width three-element vector value, min, max slider encoding plot width. ggtheme (character) optional, ggplot2 theme used default. Defaults \"gray\". ggplot2_args (ggplot2_args) optional, object created teal.widgets::ggplot2_args() settings plots named list ggplot2_args objects plot-specific settings. argument merged options variable teal.ggplot2_args default module setup. List names match following: c(\"default\", \"Elbow plot\", \"Circle plot\", \"Biplot\", \"Eigenvector plot\"). details see vignette: vignette(\"custom-ggplot2-arguments\", package = \"teal.widgets\"). rotate_xaxis_labels (logical) optional, whether rotate plot X axis labels. rotate default (FALSE). font_size (numeric) optional, specifies font size. controls font size plot titles, axis labels, legends. vector length == 1 font sizes fixed size. vector value, min, max allows dynamic adjustment. alpha (integer(1) integer(3)) optional, specifies point opacity. length alpha one: plot points fixed opacity. length alpha three: plot points opacity dynamically adjusted based vector value, min, max. size (integer(1) integer(3)) optional, specifies point size. length size one: plot point sizes fixed size. length size three: plot points size dynamically adjusted based vector value, min, max. pre_output (shiny.tag) optional, text UI element displayed module's output, providing context title. text placed output put output context. example title. post_output (shiny.tag) optional, text UI element displayed module's output, adding context instructions. Elements like shiny::helpText() useful. transformators (list teal_transform_module) applied transform module's data input. learn check vignette(\"transform-input-data\", package = \"teal\"). decorators (named list lists teal_transform_module) optional, decorator tables plots included module output reported. decorators applied respective output objects. See section \"Decorating Module\" details.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_a_pca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"teal module: Principal component analysis ‚Äî tm_a_pca","text":"Object class teal_module used teal applications.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_a_pca.html","id":"decorating-module","dir":"Reference","previous_headings":"","what":"Decorating Module","title":"teal module: Principal component analysis ‚Äî tm_a_pca","text":"module generates following objects, can modified place using decorators: elbow_plot (ggplot) circle_plot (ggplot) biplot (ggplot) eigenvector_plot (ggplot) Decorator applied specific output using named list teal_transform_module objects. name list corresponds name output decorator applied. See code snippet :   additional details examples decorators, refer vignette vignette(\"decorate-module-output\", package = \"teal.modules.general\"). learn please refer vignette vignette(\"transform-module-output\", package = \"teal\") teal::teal_transform_module() documentation.","code":"tm_a_pca(    ..., # arguments for module    decorators = list(      elbow_plot = teal_transform_module(...), # applied to the `elbow_plot` output      circle_plot = teal_transform_module(...), # applied to the `circle_plot` output      biplot = teal_transform_module(...), # applied to the `biplot` output      eigenvector_plot = teal_transform_module(...) # applied to the `eigenvector_plot` output    ) )"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_a_pca.html","id":"examples-in-shinylive","dir":"Reference","previous_headings":"","what":"Examples in Shinylive","title":"teal module: Principal component analysis ‚Äî tm_a_pca","text":"example-1 Open Shinylive example-2 Open Shinylive","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_a_pca.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"teal module: Principal component analysis ‚Äî tm_a_pca","text":"","code":"# general data example data <- teal_data() data <- within(data, {   require(nestcolor)   USArrests <- USArrests })  app <- init(   data = data,   modules = modules(     tm_a_pca(       \"PCA\",       dat = data_extract_spec(         dataname = \"USArrests\",         select = select_spec(           choices = variable_choices(             data = data[[\"USArrests\"]], c(\"Murder\", \"Assault\", \"UrbanPop\", \"Rape\")           ),           selected = c(\"Murder\", \"Assault\"),           multiple = TRUE         ),         filter = NULL       )     )   ) ) #> Initializing tm_a_pca if (interactive()) {   shinyApp(app$ui, app$server) }   # CDISC data example data <- teal_data() data <- within(data, {   require(nestcolor)   ADSL <- teal.data::rADSL }) join_keys(data) <- default_cdisc_join_keys[names(data)]  app <- init(   data = data,   modules = modules(     tm_a_pca(       \"PCA\",       dat = data_extract_spec(         dataname = \"ADSL\",         select = select_spec(           choices = variable_choices(             data = data[[\"ADSL\"]], c(\"BMRKR1\", \"AGE\", \"EOSDY\")           ),           selected = c(\"BMRKR1\", \"AGE\"),           multiple = TRUE         ),         filter = NULL       )     )   ) ) #> Initializing tm_a_pca if (interactive()) {   shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_a_regression.html","id":null,"dir":"Reference","previous_headings":"","what":"teal module: Scatterplot and regression analysis ‚Äî tm_a_regression","title":"teal module: Scatterplot and regression analysis ‚Äî tm_a_regression","text":"Module visualizing regression analysis, including scatterplots various regression diagnostics plots. allows users explore relationship set regressors response variable, visualize residuals, identify outliers.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_a_regression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"teal module: Scatterplot and regression analysis ‚Äî tm_a_regression","text":"","code":"tm_a_regression(   label = \"Regression Analysis\",   regressor,   response,   plot_height = c(600, 200, 2000),   plot_width = NULL,   alpha = c(1, 0, 1),   size = c(2, 1, 8),   ggtheme = c(\"gray\", \"bw\", \"linedraw\", \"light\", \"dark\", \"minimal\", \"classic\", \"void\"),   ggplot2_args = teal.widgets::ggplot2_args(),   pre_output = NULL,   post_output = NULL,   default_plot_type = 1,   default_outlier_label = \"USUBJID\",   label_segment_threshold = c(0.5, 0, 10),   transformators = list(),   decorators = list() )"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_a_regression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"teal module: Scatterplot and regression analysis ‚Äî tm_a_regression","text":"label (character(1)) Label shown navigation item module module group. modules() defaults \"root\". See Details. regressor (data_extract_spec list multiple data_extract_spec) Regressor variables incoming dataset filtering selecting. response (data_extract_spec list multiple data_extract_spec) Response variables incoming dataset filtering selecting. plot_height (numeric) optional, specifies plot height three-element vector value, min, max intended use slider UI element. plot_width (numeric) optional, specifies plot width three-element vector value, min, max slider encoding plot width. alpha (integer(1) integer(3)) optional, specifies point opacity. length alpha one: plot points fixed opacity. length alpha three: plot points opacity dynamically adjusted based vector value, min, max. size (integer(1) integer(3)) optional, specifies point size. length size one: plot point sizes fixed size. length size three: plot points size dynamically adjusted based vector value, min, max. ggtheme (character) optional, ggplot2 theme used default. Defaults \"gray\". ggplot2_args (ggplot2_args) optional, object created teal.widgets::ggplot2_args() settings plots named list ggplot2_args objects plot-specific settings. argument merged options variable teal.ggplot2_args default module setup. List names match following: c(\"default\", \"Response vs Regressor\", \"Residuals vs Fitted\", \"Scale-Location\", \"Cook's distance\", \"Residuals vs Leverage\", \"Cook's dist vs Leverage\"). details see vignette: vignette(\"custom-ggplot2-arguments\", package = \"teal.widgets\"). pre_output (shiny.tag) optional, text UI element displayed module's output, providing context title. text placed output put output context. example title. post_output (shiny.tag) optional, text UI element displayed module's output, adding context instructions. Elements like shiny::helpText() useful. default_plot_type (numeric) optional, defaults \"Response vs Regressor\". Response vs Regressor Residuals vs Fitted Normal Q-Q Scale-Location Cook's distance Residuals vs Leverage Cook's dist vs Leverage default_outlier_label (character) optional, default column selected label outliers. label_segment_threshold (numeric(1) numeric(3)) Minimum distance label point plot triggers creation line segment two. may happen label placed next point overlaps another label point. value used min.segment.length parameter ggrepel::geom_text_repel() function. can take following forms: numeric(1): Fixed value used minimum distance slider presented UI. numeric(3): slider presented UI (\"Plot settings\") adjust minimum distance dynamically. takes form c(value, min, max) passed value_min_max argument teal.widgets::optionalSliderInputValMinMax. transformators (list teal_transform_module) applied transform module's data input. learn check vignette(\"transform-input-data\", package = \"teal\"). decorators (named list lists teal_transform_module) optional, decorator tables plots included module output reported. decorators applied respective output objects. See section \"Decorating Module\" details.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_a_regression.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"teal module: Scatterplot and regression analysis ‚Äî tm_a_regression","text":"Object class teal_module used teal applications.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_a_regression.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"teal module: Scatterplot and regression analysis ‚Äî tm_a_regression","text":"examples, please see vignette \"Using regression plots\" via vignette(\"using-regression-plots\", package = \"teal.modules.general\").","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_a_regression.html","id":"decorating-module","dir":"Reference","previous_headings":"","what":"Decorating Module","title":"teal module: Scatterplot and regression analysis ‚Äî tm_a_regression","text":"module generates following objects, can modified place using decorators: plot (ggplot) Decorator applied specific output using named list teal_transform_module objects. name list corresponds name output decorator applied. See code snippet :   additional details examples decorators, refer vignette vignette(\"decorate-module-output\", package = \"teal.modules.general\"). learn please refer vignette vignette(\"transform-module-output\", package = \"teal\") teal::teal_transform_module() documentation.","code":"tm_a_regression(    ..., # arguments for module    decorators = list(      plot = teal_transform_module(...) # applied to the `plot` output    ) )"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_a_regression.html","id":"examples-in-shinylive","dir":"Reference","previous_headings":"","what":"Examples in Shinylive","title":"teal module: Scatterplot and regression analysis ‚Äî tm_a_regression","text":"example-1 Open Shinylive example-2 Open Shinylive","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_a_regression.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"teal module: Scatterplot and regression analysis ‚Äî tm_a_regression","text":"","code":"# general data example data <- teal_data() data <- within(data, {   require(nestcolor)   CO2 <- CO2 })  app <- init(   data = data,   modules = modules(     tm_a_regression(       label = \"Regression\",       response = data_extract_spec(         dataname = \"CO2\",         select = select_spec(           label = \"Select variable:\",           choices = \"uptake\",           selected = \"uptake\",           multiple = FALSE,           fixed = TRUE         )       ),       regressor = data_extract_spec(         dataname = \"CO2\",         select = select_spec(           label = \"Select variables:\",           choices = variable_choices(data[[\"CO2\"]], c(\"conc\", \"Treatment\")),           selected = \"conc\",           multiple = TRUE,           fixed = FALSE         )       )     )   ) ) #> Initializing tm_a_regression if (interactive()) {   shinyApp(app$ui, app$server) }  # CDISC data example data <- teal_data() data <- within(data, {   require(nestcolor)   ADSL <- teal.data::rADSL }) join_keys(data) <- default_cdisc_join_keys[names(data)]  app <- init(   data = data,   modules = modules(     tm_a_regression(       label = \"Regression\",       response = data_extract_spec(         dataname = \"ADSL\",         select = select_spec(           label = \"Select variable:\",           choices = \"BMRKR1\",           selected = \"BMRKR1\",           multiple = FALSE,           fixed = TRUE         )       ),       regressor = data_extract_spec(         dataname = \"ADSL\",         select = select_spec(           label = \"Select variables:\",           choices = variable_choices(data[[\"ADSL\"]], c(\"AGE\", \"SEX\", \"RACE\")),           selected = \"AGE\",           multiple = TRUE,           fixed = FALSE         )       )     )   ) ) #> Initializing tm_a_regression if (interactive()) {   shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_data_table.html","id":null,"dir":"Reference","previous_headings":"","what":"teal module: Data table viewer ‚Äî tm_data_table","title":"teal module: Data table viewer ‚Äî tm_data_table","text":"Module provides dynamic interactive way view data.frames teal application. uses DT package display data tables paginated, searchable, sortable format, helps enhance data exploration analysis.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_data_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"teal module: Data table viewer ‚Äî tm_data_table","text":"","code":"tm_data_table(   label = \"Data Table\",   variables_selected = list(),   datasets_selected = deprecated(),   datanames = if (missing(datasets_selected)) \"all\" else datasets_selected,   dt_args = list(),   dt_options = list(searching = FALSE, pageLength = 30, lengthMenu = c(5, 15, 30, 100),     scrollX = TRUE),   server_rendering = FALSE,   pre_output = NULL,   post_output = NULL,   transformators = list() )"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_data_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"teal module: Data table viewer ‚Äî tm_data_table","text":"label (character(1)) Label shown navigation item module module group. modules() defaults \"root\". See Details. variables_selected (named list) Character vectors variables (.e. columns) initially shown dataset. Names list elements correspond names datasets available app. entry specified dataset, first six variables dataset initially shown. datasets_selected (character)  vector datasets shown order. Use datanames instead. datanames (character) Names datasets relevant item. 2 reserved values specific behaviors: keyword \"\" includes datasets available data passed teal application. NULL hides sidebar panel completely. transformators specified, datanames automatically added datanames argument. dt_args (named list) Additional arguments passed DT::datatable() (must include data options). dt_options (named list) options argument DT::datatable. default list(searching = FALSE, pageLength = 30, lengthMenu = c(5, 15, 30, 100), scrollX = TRUE) server_rendering (logical) data table rendered server side (see server argument DT::renderDataTable()) pre_output (shiny.tag) optional, text UI element displayed module's output, providing context title. text placed output put output context. example title. post_output (shiny.tag) optional, text UI element displayed module's output, adding context instructions. Elements like shiny::helpText() useful. transformators (list teal_transform_module) applied transform module's data input. learn check vignette(\"transform-input-data\", package = \"teal\").","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_data_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"teal module: Data table viewer ‚Äî tm_data_table","text":"Object class teal_module used teal applications.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_data_table.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"teal module: Data table viewer ‚Äî tm_data_table","text":"DT package option DT.TOJSON_ARGS show Inf NA data tables. Configure DT.TOJSON_ARGS option via options(DT.TOJSON_ARGS = list(na = \"string\")) running module. Note though sorting numeric columns NA/Inf lexicographic numerical.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_data_table.html","id":"examples-in-shinylive","dir":"Reference","previous_headings":"","what":"Examples in Shinylive","title":"teal module: Data table viewer ‚Äî tm_data_table","text":"example-1 Open Shinylive example-2 Open Shinylive","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_data_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"teal module: Data table viewer ‚Äî tm_data_table","text":"","code":"# general data example data <- teal_data() data <- within(data, {   require(nestcolor)   iris <- iris })  app <- init(   data = data,   modules = modules(     tm_data_table(       variables_selected = list(         iris = c(\"Sepal.Length\", \"Sepal.Width\", \"Petal.Length\", \"Petal.Width\", \"Species\")       ),       dt_args = list(caption = \"IRIS Table Caption\")     )   ) ) #> Initializing tm_data_table if (interactive()) {   shinyApp(app$ui, app$server) }  # CDISC data example data <- teal_data() data <- within(data, {   require(nestcolor)   ADSL <- teal.data::rADSL }) join_keys(data) <- default_cdisc_join_keys[names(data)]  app <- init(   data = data,   modules = modules(     tm_data_table(       variables_selected = list(ADSL = c(\"STUDYID\", \"USUBJID\", \"SUBJID\", \"SITEID\", \"AGE\", \"SEX\")),       dt_args = list(caption = \"ADSL Table Caption\")     )   ) ) #> Initializing tm_data_table if (interactive()) {   shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_file_viewer.html","id":null,"dir":"Reference","previous_headings":"","what":"teal module: File viewer ‚Äî tm_file_viewer","title":"teal module: File viewer ‚Äî tm_file_viewer","text":"file viewer module provides tool view static files. Supported formats include text formats, PDF, PNG APNG, JPEG SVG, WEBP, GIF BMP.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_file_viewer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"teal module: File viewer ‚Äî tm_file_viewer","text":"","code":"tm_file_viewer(   label = \"File Viewer Module\",   input_path = list(`Current Working Directory` = \".\") )"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_file_viewer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"teal module: File viewer ‚Äî tm_file_viewer","text":"label (character(1)) Label shown navigation item module module group. modules() defaults \"root\". See Details. input_path (list) input paths, optional. element can : Paths can specified absolute paths relative running directory application. Default current working directory supplied.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_file_viewer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"teal module: File viewer ‚Äî tm_file_viewer","text":"Object class teal_module used teal applications.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_file_viewer.html","id":"examples-in-shinylive","dir":"Reference","previous_headings":"","what":"Examples in Shinylive","title":"teal module: File viewer ‚Äî tm_file_viewer","text":"example-1 Open Shinylive","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_file_viewer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"teal module: File viewer ‚Äî tm_file_viewer","text":"","code":"data <- teal_data() data <- within(data, {   data <- data.frame(1) })  app <- init(   data = data,   modules = modules(     tm_file_viewer(       input_path = list(         folder = system.file(\"sample_files\", package = \"teal.modules.general\"),         png = system.file(\"sample_files/sample_file.png\", package = \"teal.modules.general\"),         txt = system.file(\"sample_files/sample_file.txt\", package = \"teal.modules.general\"),         url = \"https://fda.gov/files/drugs/published/Portable-Document-Format-Specifications.pdf\"       )     )   ) ) #> Initializing tm_file_viewer #> Warning: Non-existent file or url path. Please provide valid paths for: #> https://fda.gov/files/drugs/published/Portable-Document-Format-Specifications.pdf if (interactive()) {   shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_front_page.html","id":null,"dir":"Reference","previous_headings":"","what":"teal module: Front page ‚Äî tm_front_page","title":"teal module: Front page ‚Äî tm_front_page","text":"Creates simple front page teal applications, displaying introductory text, tables, additional html shiny tags, footnotes.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_front_page.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"teal module: Front page ‚Äî tm_front_page","text":"","code":"tm_front_page(   label = \"Front page\",   header_text = character(0),   tables = list(),   additional_tags = tagList(),   footnotes = character(0),   show_metadata = deprecated(),   datanames = if (missing(show_metadata)) NULL else \"all\",   transformators = list() )"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_front_page.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"teal module: Front page ‚Äî tm_front_page","text":"label (character(1)) Label shown navigation item module module group. modules() defaults \"root\". See Details. header_text (character vector) text shown top module, element, named name shown first bold header followed value. first element's header displayed larger others. tables (named list data.frames) tables shown module. additional_tags (shiny.tag.list html) additional shiny tags html included table, example include image, tagList(tags$img(src = \"image.png\")) include html, HTML(\"html text \"). footnotes (character vector) text shown bottom module, element, named name shown first bold, followed value. show_metadata (logical)  indicating whether metadata datasets available module. Metadata shown automatically datanames set. datanames (character) Names datasets relevant item. 2 reserved values specific behaviors: keyword \"\" includes datasets available data passed teal application. NULL hides sidebar panel completely. transformators specified, datanames automatically added datanames argument. transformators (list teal_transform_module) applied transform module's data input. learn check vignette(\"transform-input-data\", package = \"teal\").","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_front_page.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"teal module: Front page ‚Äî tm_front_page","text":"Object class teal_module used teal applications.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_front_page.html","id":"examples-in-shinylive","dir":"Reference","previous_headings":"","what":"Examples in Shinylive","title":"teal module: Front page ‚Äî tm_front_page","text":"example-1 Open Shinylive","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_front_page.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"teal module: Front page ‚Äî tm_front_page","text":"","code":"data <- teal_data() data <- within(data, {   require(nestcolor)   ADSL <- teal.data::rADSL   attr(ADSL, \"metadata\") <- list(\"Author\" = \"NEST team\", \"data_source\" = \"synthetic data\") }) join_keys(data) <- default_cdisc_join_keys[names(data)]  table_1 <- data.frame(Info = c(\"A\", \"B\"), Text = c(\"A\", \"B\")) table_2 <- data.frame(`Column 1` = c(\"C\", \"D\"), `Column 2` = c(5.5, 6.6), `Column 3` = c(\"A\", \"B\")) table_3 <- data.frame(Info = c(\"E\", \"F\"), Text = c(\"G\", \"H\"))  table_input <- list(   \"Table 1\" = table_1,   \"Table 2\" = table_2,   \"Table 3\" = table_3 )  app <- init(   data = data,   modules = modules(     tm_front_page(       header_text = c(         \"Important information\" = \"It can go here.\",         \"Other information\" = \"Can go here.\"       ),       tables = table_input,       additional_tags = HTML(\"Additional HTML or shiny tags go here <br>\"),       footnotes = c(\"X\" = \"is the first footnote\", \"Y is the second footnote\")     )   ) ) |>   modify_header(tags$h1(\"Sample Application\")) |>   modify_footer(tags$p(\"Application footer\")) #> Initializing tm_front_page  if (interactive()) {   shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_g_association.html","id":null,"dir":"Reference","previous_headings":"","what":"teal module: Stack plots of variables and show association with reference variable ‚Äî tm_g_association","title":"teal module: Stack plots of variables and show association with reference variable ‚Äî tm_g_association","text":"Module provides functionality visualizing distribution variables association reference variable. supports configuring appearance plots, including themes whether show associations.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_g_association.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"teal module: Stack plots of variables and show association with reference variable ‚Äî tm_g_association","text":"","code":"tm_g_association(   label = \"Association\",   ref,   vars,   show_association = TRUE,   plot_height = c(600, 400, 5000),   plot_width = NULL,   distribution_theme = c(\"gray\", \"bw\", \"linedraw\", \"light\", \"dark\", \"minimal\", \"classic\",     \"void\"),   association_theme = c(\"gray\", \"bw\", \"linedraw\", \"light\", \"dark\", \"minimal\", \"classic\",     \"void\"),   pre_output = NULL,   post_output = NULL,   ggplot2_args = teal.widgets::ggplot2_args(),   transformators = list(),   decorators = list() )"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_g_association.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"teal module: Stack plots of variables and show association with reference variable ‚Äî tm_g_association","text":"label (character(1)) Label shown navigation item module module group. modules() defaults \"root\". See Details. ref (data_extract_spec list multiple data_extract_spec) Reference variable, must accepts data_extract_spec select_spec(multiple = FALSE) ensure single selection option. vars (data_extract_spec list multiple data_extract_spec) Variables associated reference variable. show_association (logical) optional, whether show association vars reference variable. Defaults TRUE. plot_height (numeric) optional, specifies plot height three-element vector value, min, max intended use slider UI element. plot_width (numeric) optional, specifies plot width three-element vector value, min, max slider encoding plot width. distribution_theme, association_theme (character) optional, ggplot2 themes used default. Default \"gray\". pre_output (shiny.tag) optional, text UI element displayed module's output, providing context title. text placed output put output context. example title. post_output (shiny.tag) optional, text UI element displayed module's output, adding context instructions. Elements like shiny::helpText() useful. ggplot2_args (ggplot2_args) optional, object created teal.widgets::ggplot2_args() settings plots named list ggplot2_args objects plot-specific settings. argument merged options variable teal.ggplot2_args default module setup. List names match following: c(\"default\", \"Bivariate1\", \"Bivariate2\"). details see vignette: vignette(\"custom-ggplot2-arguments\", package = \"teal.widgets\"). transformators (list teal_transform_module) applied transform module's data input. learn check vignette(\"transform-input-data\", package = \"teal\"). decorators (named list lists teal_transform_module) optional, decorator tables plots included module output reported. decorators applied respective output objects. See section \"Decorating Module\" details.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_g_association.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"teal module: Stack plots of variables and show association with reference variable ‚Äî tm_g_association","text":"Object class teal_module used teal applications.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_g_association.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"teal module: Stack plots of variables and show association with reference variable ‚Äî tm_g_association","text":"examples, please see vignette \"Using association plot\" via vignette(\"using-association-plot\", package = \"teal.modules.general\").","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_g_association.html","id":"decorating-module","dir":"Reference","previous_headings":"","what":"Decorating Module","title":"teal module: Stack plots of variables and show association with reference variable ‚Äî tm_g_association","text":"module generates following objects, can modified place using decorators: plot (grob created ggplot2::ggplotGrob()) Decorator applied specific output using named list teal_transform_module objects. name list corresponds name output decorator applied. See code snippet :   additional details examples decorators, refer vignette vignette(\"decorate-module-output\", package = \"teal.modules.general\"). learn please refer vignette vignette(\"transform-module-output\", package = \"teal\") teal::teal_transform_module() documentation.","code":"tm_g_association(    ..., # arguments for module    decorators = list(      plot = teal_transform_module(...) # applied to the `plot` output    ) )"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_g_association.html","id":"examples-in-shinylive","dir":"Reference","previous_headings":"","what":"Examples in Shinylive","title":"teal module: Stack plots of variables and show association with reference variable ‚Äî tm_g_association","text":"example-1 Open Shinylive example-2 Open Shinylive","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_g_association.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"teal module: Stack plots of variables and show association with reference variable ‚Äî tm_g_association","text":"","code":"# general data example data <- teal_data() data <- within(data, {   require(nestcolor)   CO2 <- CO2   factors <- names(Filter(isTRUE, vapply(CO2, is.factor, logical(1L))))   CO2[factors] <- lapply(CO2[factors], as.character) })  app <- init(   data = data,   modules = modules(     tm_g_association(       ref = data_extract_spec(         dataname = \"CO2\",         select = select_spec(           label = \"Select variable:\",           choices = variable_choices(data[[\"CO2\"]], c(\"Plant\", \"Type\", \"Treatment\")),           selected = \"Plant\",           fixed = FALSE         )       ),       vars = data_extract_spec(         dataname = \"CO2\",         select = select_spec(           label = \"Select variables:\",           choices = variable_choices(data[[\"CO2\"]], c(\"Plant\", \"Type\", \"Treatment\")),           selected = \"Treatment\",           multiple = TRUE,           fixed = FALSE         )       )     )   ) ) #> Initializing tm_g_association if (interactive()) {   shinyApp(app$ui, app$server) }  # CDISC data example data <- teal_data() data <- within(data, {   require(nestcolor)   ADSL <- teal.data::rADSL }) join_keys(data) <- default_cdisc_join_keys[names(data)]  app <- init(   data = data,   modules = modules(     tm_g_association(       ref = data_extract_spec(         dataname = \"ADSL\",         select = select_spec(           label = \"Select variable:\",           choices = variable_choices(             data[[\"ADSL\"]],             c(\"SEX\", \"RACE\", \"COUNTRY\", \"ARM\", \"STRATA1\", \"STRATA2\", \"ITTFL\", \"BMRKR2\")           ),           selected = \"RACE\",           fixed = FALSE         )       ),       vars = data_extract_spec(         dataname = \"ADSL\",         select = select_spec(           label = \"Select variables:\",           choices = variable_choices(             data[[\"ADSL\"]],             c(\"SEX\", \"RACE\", \"COUNTRY\", \"ARM\", \"STRATA1\", \"STRATA2\", \"ITTFL\", \"BMRKR2\")           ),           selected = \"BMRKR2\",           multiple = TRUE,           fixed = FALSE         )       )     )   ) ) #> Initializing tm_g_association if (interactive()) {   shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_g_bivariate.html","id":null,"dir":"Reference","previous_headings":"","what":"teal module: Univariate and bivariate visualizations ‚Äî tm_g_bivariate","title":"teal module: Univariate and bivariate visualizations ‚Äî tm_g_bivariate","text":"Module enables creation univariate bivariate plots, facilitating exploration data distributions relationships two variables.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_g_bivariate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"teal module: Univariate and bivariate visualizations ‚Äî tm_g_bivariate","text":"","code":"tm_g_bivariate(   label = \"Bivariate Plots\",   x,   y,   row_facet = NULL,   col_facet = NULL,   facet = !is.null(row_facet) || !is.null(col_facet),   color = NULL,   fill = NULL,   size = NULL,   use_density = FALSE,   color_settings = FALSE,   free_x_scales = FALSE,   free_y_scales = FALSE,   plot_height = c(600, 200, 2000),   plot_width = NULL,   rotate_xaxis_labels = FALSE,   swap_axes = FALSE,   ggtheme = c(\"gray\", \"bw\", \"linedraw\", \"light\", \"dark\", \"minimal\", \"classic\", \"void\"),   ggplot2_args = teal.widgets::ggplot2_args(),   pre_output = NULL,   post_output = NULL,   transformators = list(),   decorators = list() )"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_g_bivariate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"teal module: Univariate and bivariate visualizations ‚Äî tm_g_bivariate","text":"label (character(1)) Label shown navigation item module module group. modules() defaults \"root\". See Details. x (data_extract_spec list multiple data_extract_spec) Variable names selected plot along x-axis default. Can numeric, factor character. empty selections allowed. y (data_extract_spec list multiple data_extract_spec) Variable names selected plot along y-axis default. Can numeric, factor character. row_facet (data_extract_spec list multiple data_extract_spec) optional, specification data variable(s) use faceting rows. col_facet (data_extract_spec list multiple data_extract_spec) optional, specification data variable(s) use faceting columns. facet (logical) optional, specifies whether facet encodings ui elements toggled shown user default. Defaults TRUE either row_facet column_facet supplied. color (data_extract_spec list multiple data_extract_spec) optional, specification data variable(s) selected outline color inside coloring settings. applied color_settings set TRUE. fill (data_extract_spec list multiple data_extract_spec) optional, specification data variable(s) selected fill color inside coloring settings. applied color_settings set TRUE. size (data_extract_spec list multiple data_extract_spec) optional, specification data variable(s) selected size geom_point plots inside coloring settings. applied color_settings set TRUE. use_density (logical) optional, indicates whether plot density (TRUE) frequency (FALSE). Defaults frequency (FALSE). color_settings (logical) Whether coloring, filling size applied UI tool offered user. free_x_scales (logical) optional, whether X scaling shall changeable. allow scaling changed default (FALSE). free_y_scales (logical) optional, whether Y scaling shall changeable. allow scaling changed default (FALSE). plot_height (numeric) optional, specifies plot height three-element vector value, min, max intended use slider UI element. plot_width (numeric) optional, specifies plot width three-element vector value, min, max slider encoding plot width. rotate_xaxis_labels (logical) optional, whether rotate plot X axis labels. rotate default (FALSE). swap_axes (logical) optional, whether swap X Y axes. Defaults FALSE. ggtheme (character) optional, ggplot2 theme used default. Defaults \"gray\". ggplot2_args (ggplot2_args) object created teal.widgets::ggplot2_args() settings module plot. argument merged options variable teal.ggplot2_args default module setup. details see vignette: vignette(\"custom-ggplot2-arguments\", package = \"teal.widgets\") pre_output (shiny.tag) optional, text UI element displayed module's output, providing context title. text placed output put output context. example title. post_output (shiny.tag) optional, text UI element displayed module's output, adding context instructions. Elements like shiny::helpText() useful. transformators (list teal_transform_module) applied transform module's data input. learn check vignette(\"transform-input-data\", package = \"teal\"). decorators (named list lists teal_transform_module) optional, decorator tables plots included module output reported. decorators applied respective output objects. See section \"Decorating Module\" details.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_g_bivariate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"teal module: Univariate and bivariate visualizations ‚Äî tm_g_bivariate","text":"Object class teal_module used teal applications.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_g_bivariate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"teal module: Univariate and bivariate visualizations ‚Äî tm_g_bivariate","text":"general module visualize 1 & 2 dimensional data.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_g_bivariate.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"teal module: Univariate and bivariate visualizations ‚Äî tm_g_bivariate","text":"examples, please see vignette \"Using bivariate plot\" via vignette(\"using-bivariate-plot\", package = \"teal.modules.general\").","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_g_bivariate.html","id":"decorating-module","dir":"Reference","previous_headings":"","what":"Decorating Module","title":"teal module: Univariate and bivariate visualizations ‚Äî tm_g_bivariate","text":"module generates following objects, can modified place using decorators: plot (ggplot) Decorator applied specific output using named list teal_transform_module objects. name list corresponds name output decorator applied. See code snippet :   additional details examples decorators, refer vignette vignette(\"decorate-module-output\", package = \"teal.modules.general\"). learn please refer vignette vignette(\"transform-module-output\", package = \"teal\") teal::teal_transform_module() documentation.","code":"tm_g_bivariate(    ..., # arguments for module    decorators = list(      plot = teal_transform_module(...) # applied to the `plot` output    ) )"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_g_bivariate.html","id":"examples-in-shinylive","dir":"Reference","previous_headings":"","what":"Examples in Shinylive","title":"teal module: Univariate and bivariate visualizations ‚Äî tm_g_bivariate","text":"example-1 Open Shinylive example-2 Open Shinylive","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_g_bivariate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"teal module: Univariate and bivariate visualizations ‚Äî tm_g_bivariate","text":"","code":"# general data example data <- teal_data() data <- within(data, {   require(nestcolor)   CO2 <- data.frame(CO2) })  app <- init(   data = data,   modules = tm_g_bivariate(     x = data_extract_spec(       dataname = \"CO2\",       select = select_spec(         label = \"Select variable:\",         choices = variable_choices(data[[\"CO2\"]]),         selected = \"conc\",         fixed = FALSE       )     ),     y = data_extract_spec(       dataname = \"CO2\",       select = select_spec(         label = \"Select variable:\",         choices = variable_choices(data[[\"CO2\"]]),         selected = \"uptake\",         multiple = FALSE,         fixed = FALSE       )     ),     row_facet = data_extract_spec(       dataname = \"CO2\",       select = select_spec(         label = \"Select variable:\",         choices = variable_choices(data[[\"CO2\"]]),         selected = \"Type\",         fixed = FALSE       )     ),     col_facet = data_extract_spec(       dataname = \"CO2\",       select = select_spec(         label = \"Select variable:\",         choices = variable_choices(data[[\"CO2\"]]),         selected = \"Treatment\",         fixed = FALSE       )     )   ) ) #> Initializing tm_g_bivariate if (interactive()) {   shinyApp(app$ui, app$server) }  # CDISC data example data <- teal_data() data <- within(data, {   require(nestcolor)   ADSL <- teal.data::rADSL }) join_keys(data) <- default_cdisc_join_keys[names(data)]  app <- init(   data = data,   modules = tm_g_bivariate(     x = data_extract_spec(       dataname = \"ADSL\",       select = select_spec(         label = \"Select variable:\",         choices = variable_choices(data[[\"ADSL\"]]),         selected = \"AGE\",         fixed = FALSE       )     ),     y = data_extract_spec(       dataname = \"ADSL\",       select = select_spec(         label = \"Select variable:\",         choices = variable_choices(data[[\"ADSL\"]]),         selected = \"SEX\",         multiple = FALSE,         fixed = FALSE       )     ),     row_facet = data_extract_spec(       dataname = \"ADSL\",       select = select_spec(         label = \"Select variable:\",         choices = variable_choices(data[[\"ADSL\"]]),         selected = \"ARM\",         fixed = FALSE       )     ),     col_facet = data_extract_spec(       dataname = \"ADSL\",       select = select_spec(         label = \"Select variable:\",         choices = variable_choices(data[[\"ADSL\"]]),         selected = \"COUNTRY\",         fixed = FALSE       )     )   ) ) #> Initializing tm_g_bivariate if (interactive()) {   shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_g_distribution.html","id":null,"dir":"Reference","previous_headings":"","what":"teal module: Distribution analysis ‚Äî tm_g_distribution","title":"teal module: Distribution analysis ‚Äî tm_g_distribution","text":"Module designed explore distribution single variable within given dataset. offers several tools, histograms, Q-Q plots, various statistical tests visually statistically analyze variable's distribution.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_g_distribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"teal module: Distribution analysis ‚Äî tm_g_distribution","text":"","code":"tm_g_distribution(   label = \"Distribution Module\",   dist_var,   strata_var = NULL,   group_var = NULL,   freq = FALSE,   ggtheme = c(\"gray\", \"bw\", \"linedraw\", \"light\", \"dark\", \"minimal\", \"classic\", \"void\"),   ggplot2_args = teal.widgets::ggplot2_args(),   bins = c(30L, 1L, 100L),   plot_height = c(600, 200, 2000),   plot_width = NULL,   pre_output = NULL,   post_output = NULL,   transformators = list(),   decorators = list() )"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_g_distribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"teal module: Distribution analysis ‚Äî tm_g_distribution","text":"label (character(1)) Label shown navigation item module module group. modules() defaults \"root\". See Details. dist_var (data_extract_spec list multiple data_extract_spec) Variable(s) distribution analyzed. strata_var (data_extract_spec list multiple data_extract_spec) Categorical variable used split distribution analysis. group_var (data_extract_spec list multiple data_extract_spec) Variable used faceting plot multiple panels. freq (logical) optional, whether display frequency (TRUE) density (FALSE). Defaults density (FALSE). ggtheme (character) optional, ggplot2 theme used default. Defaults \"gray\". ggplot2_args (ggplot2_args) optional, object created teal.widgets::ggplot2_args() settings plots named list ggplot2_args objects plot-specific settings. argument merged options variable teal.ggplot2_args default module setup. List names match following: c(\"default\", \"Histogram\", \"QQplot\"). details see vignette: vignette(\"custom-ggplot2-arguments\", package = \"teal.widgets\"). bins (integer(1) integer(3)) optional,  specifies number bins histogram. length bins one: histogram bins fixed size based bins provided. length bins three: histogram bins dynamically adjusted based vector value, min, max. Defaults c(30L, 1L, 100L). plot_height (numeric) optional, specifies plot height three-element vector value, min, max intended use slider UI element. plot_width (numeric) optional, specifies plot width three-element vector value, min, max slider encoding plot width. pre_output (shiny.tag) optional, text placed output put output context. example title. post_output (shiny.tag) optional, text placed output put output context. example shiny::helpText() elements useful. transformators (list teal_transform_module) applied transform module's data input. learn check vignette(\"transform-input-data\", package = \"teal\"). decorators (named list lists teal_transform_module) optional, decorator tables plots included module output reported. decorators applied respective output objects. See section \"Decorating Module\" details.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_g_distribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"teal module: Distribution analysis ‚Äî tm_g_distribution","text":"Object class teal_module used teal applications.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_g_distribution.html","id":"decorating-module","dir":"Reference","previous_headings":"","what":"Decorating Module","title":"teal module: Distribution analysis ‚Äî tm_g_distribution","text":"module generates following objects, can modified place using decorators:: histogram_plot (ggplot) qq_plot (ggplot) summary_table (datatables created DT::datatable()) test_table (datatables created DT::datatable()) Decorator applied specific output using named list teal_transform_module objects. name list corresponds name output decorator applied. See code snippet :   additional details examples decorators, refer vignette vignette(\"decorate-module-output\", package = \"teal.modules.general\"). learn please refer vignette vignette(\"transform-module-output\", package = \"teal\") teal::teal_transform_module() documentation.","code":"tm_g_distribution(    ..., # arguments for module    decorators = list(      histogram_plot = teal_transform_module(...), # applied only to `histogram_plot` output      qq_plot = teal_transform_module(...), # applied only to `qq_plot` output      summary_table = teal_transform_module(...), # applied only to `summary_table` output      test_table = teal_transform_module(...) # applied only to `test_table` output    ) )"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_g_distribution.html","id":"examples-in-shinylive","dir":"Reference","previous_headings":"","what":"Examples in Shinylive","title":"teal module: Distribution analysis ‚Äî tm_g_distribution","text":"example-1 Open Shinylive example-2 Open Shinylive","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_g_distribution.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"teal module: Distribution analysis ‚Äî tm_g_distribution","text":"","code":"# general data example data <- teal_data() data <- within(data, {   iris <- iris })  app <- init(   data = data,   modules = list(     tm_g_distribution(       dist_var = data_extract_spec(         dataname = \"iris\",         select = select_spec(variable_choices(\"iris\"), \"Petal.Length\")       )     )   ) ) #> Initializing tm_g_distribution if (interactive()) {   shinyApp(app$ui, app$server) }  # CDISC data example data <- teal_data() data <- within(data, {   ADSL <- teal.data::rADSL }) join_keys(data) <- default_cdisc_join_keys[names(data)]  vars1 <- choices_selected(   variable_choices(data[[\"ADSL\"]], c(\"ARM\", \"COUNTRY\", \"SEX\")),   selected = NULL )  app <- init(   data = data,   modules = modules(     tm_g_distribution(       dist_var = data_extract_spec(         dataname = \"ADSL\",         select = select_spec(           choices = variable_choices(data[[\"ADSL\"]], c(\"AGE\", \"BMRKR1\")),           selected = \"BMRKR1\",           multiple = FALSE,           fixed = FALSE         )       ),       strata_var = data_extract_spec(         dataname = \"ADSL\",         filter = filter_spec(           vars = vars1,           multiple = TRUE         )       ),       group_var = data_extract_spec(         dataname = \"ADSL\",         filter = filter_spec(           vars = vars1,           multiple = TRUE         )       )     )   ) ) #> Initializing tm_g_distribution if (interactive()) {   shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_g_response.html","id":null,"dir":"Reference","previous_headings":"","what":"teal module: Response plot ‚Äî tm_g_response","title":"teal module: Response plot ‚Äî tm_g_response","text":"Generates response plot given response x variables. module allows users customize add annotations plot depending module's arguments. supports showing counts grouped variable facets (row / column), swapping coordinates, show count annotations displaying response plot frequency density.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_g_response.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"teal module: Response plot ‚Äî tm_g_response","text":"","code":"tm_g_response(   label = \"Response Plot\",   response,   x,   row_facet = NULL,   col_facet = NULL,   coord_flip = FALSE,   count_labels = TRUE,   rotate_xaxis_labels = FALSE,   freq = FALSE,   plot_height = c(600, 400, 5000),   plot_width = NULL,   ggtheme = c(\"gray\", \"bw\", \"linedraw\", \"light\", \"dark\", \"minimal\", \"classic\", \"void\"),   ggplot2_args = teal.widgets::ggplot2_args(),   pre_output = NULL,   post_output = NULL,   transformators = list(),   decorators = list() )"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_g_response.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"teal module: Response plot ‚Äî tm_g_response","text":"label (character(1)) Label shown navigation item module module group. modules() defaults \"root\". See Details. response (data_extract_spec list multiple data_extract_spec) variable use response. can define one fixed column setting fixed = TRUE inside select_spec. data_extract_spec must allow multiple selection case. x (data_extract_spec list multiple data_extract_spec) Specifies variable use X-axis response plot. Allow user select multiple columns data allowed teal. data_extract_spec must allow multiple selection case. row_facet (data_extract_spec list multiple data_extract_spec) optional specification data variable(s) use faceting rows. col_facet (data_extract_spec list multiple data_extract_spec) optional specification data variable(s) use faceting columns. coord_flip (logical(1)) Indicates whether flip coordinates x response. default value FALSE show x variable x-axis response variable y-axis. count_labels (logical(1)) Indicates whether show count labels. Defaults TRUE. rotate_xaxis_labels (logical) optional, whether rotate plot X axis labels. rotate default (FALSE). freq (logical(1)) Indicates whether display frequency (TRUE) density (FALSE). Defaults density (FALSE). plot_height (numeric) optional, specifies plot height three-element vector value, min, max intended use slider UI element. plot_width (numeric) optional, specifies plot width three-element vector value, min, max slider encoding plot width. ggtheme (character) optional, ggplot2 theme used default. Defaults \"gray\". ggplot2_args (ggplot2_args) object created teal.widgets::ggplot2_args() settings module plot. argument merged options variable teal.ggplot2_args default module setup. details see vignette: vignette(\"custom-ggplot2-arguments\", package = \"teal.widgets\") pre_output (shiny.tag) optional, text UI element displayed module's output, providing context title. text placed output put output context. example title. post_output (shiny.tag) optional, text UI element displayed module's output, adding context instructions. Elements like shiny::helpText() useful. transformators (list teal_transform_module) applied transform module's data input. learn check vignette(\"transform-input-data\", package = \"teal\"). decorators (named list lists teal_transform_module) optional, decorator tables plots included module output reported. decorators applied respective output objects. See section \"Decorating Module\" details.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_g_response.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"teal module: Response plot ‚Äî tm_g_response","text":"Object class teal_module used teal applications.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_g_response.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"teal module: Response plot ‚Äî tm_g_response","text":"examples, please see vignette \"Using response plot\" via vignette(\"using-response-plot\", package = \"teal.modules.general\").","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_g_response.html","id":"decorating-module","dir":"Reference","previous_headings":"","what":"Decorating Module","title":"teal module: Response plot ‚Äî tm_g_response","text":"module generates following objects, can modified place using decorators: plot (ggplot) Decorator applied specific output using named list teal_transform_module objects. name list corresponds name output decorator applied. See code snippet :   additional details examples decorators, refer vignette vignette(\"decorate-module-output\", package = \"teal.modules.general\"). learn please refer vignette vignette(\"transform-module-output\", package = \"teal\") teal::teal_transform_module() documentation.","code":"tm_g_response(    ..., # arguments for module    decorators = list(      plot = teal_transform_module(...) # applied to the `plot` output    ) )"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_g_response.html","id":"examples-in-shinylive","dir":"Reference","previous_headings":"","what":"Examples in Shinylive","title":"teal module: Response plot ‚Äî tm_g_response","text":"example-1 Open Shinylive example-2 Open Shinylive","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_g_response.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"teal module: Response plot ‚Äî tm_g_response","text":"","code":"# general data example data <- teal_data() data <- within(data, {   require(nestcolor)   mtcars <- mtcars   for (v in c(\"cyl\", \"vs\", \"am\", \"gear\")) {     mtcars[[v]] <- as.factor(mtcars[[v]])   } })  app <- init(   data = data,   modules = modules(     tm_g_response(       label = \"Response Plots\",       response = data_extract_spec(         dataname = \"mtcars\",         select = select_spec(           label = \"Select variable:\",           choices = variable_choices(data[[\"mtcars\"]], c(\"cyl\", \"gear\")),           selected = \"cyl\",           multiple = FALSE,           fixed = FALSE         )       ),       x = data_extract_spec(         dataname = \"mtcars\",         select = select_spec(           label = \"Select variable:\",           choices = variable_choices(data[[\"mtcars\"]], c(\"vs\", \"am\")),           selected = \"vs\",           multiple = FALSE,           fixed = FALSE         )       )     )   ) ) #> Initializing tm_g_response if (interactive()) {   shinyApp(app$ui, app$server) }  # CDISC data example data <- teal_data() data <- within(data, {   require(nestcolor)   ADSL <- teal.data::rADSL }) join_keys(data) <- default_cdisc_join_keys[names(data)]  app <- init(   data = data,   modules = modules(     tm_g_response(       label = \"Response Plots\",       response = data_extract_spec(         dataname = \"ADSL\",         select = select_spec(           label = \"Select variable:\",           choices = variable_choices(data[[\"ADSL\"]], c(\"BMRKR2\", \"COUNTRY\")),           selected = \"BMRKR2\",           multiple = FALSE,           fixed = FALSE         )       ),       x = data_extract_spec(         dataname = \"ADSL\",         select = select_spec(           label = \"Select variable:\",           choices = variable_choices(data[[\"ADSL\"]], c(\"SEX\", \"RACE\")),           selected = \"RACE\",           multiple = FALSE,           fixed = FALSE         )       )     )   ) ) #> Initializing tm_g_response if (interactive()) {   shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_g_scatterplot.html","id":null,"dir":"Reference","previous_headings":"","what":"teal module: Scatterplot ‚Äî tm_g_scatterplot","title":"teal module: Scatterplot ‚Äî tm_g_scatterplot","text":"Generates customizable scatterplot using ggplot2. module allows users select variables x y axes, color size encodings, faceting options, . supports log transformations, trend line additions, dynamic adjustments point opacity size UI controls.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_g_scatterplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"teal module: Scatterplot ‚Äî tm_g_scatterplot","text":"","code":"tm_g_scatterplot(   label = \"Scatterplot\",   x,   y,   color_by = NULL,   size_by = NULL,   row_facet = NULL,   col_facet = NULL,   plot_height = c(600, 200, 2000),   plot_width = NULL,   alpha = c(1, 0, 1),   shape = shape_names,   size = c(5, 1, 15),   max_deg = 5L,   rotate_xaxis_labels = FALSE,   ggtheme = c(\"gray\", \"bw\", \"linedraw\", \"light\", \"dark\", \"minimal\", \"classic\", \"void\"),   pre_output = NULL,   post_output = NULL,   table_dec = 4,   ggplot2_args = teal.widgets::ggplot2_args(),   transformators = list(),   decorators = list() )"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_g_scatterplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"teal module: Scatterplot ‚Äî tm_g_scatterplot","text":"label (character(1)) Label shown navigation item module module group. modules() defaults \"root\". See Details. x (data_extract_spec list multiple data_extract_spec) Specifies variable names selected plot along x-axis default. y (data_extract_spec list multiple data_extract_spec) Specifies variable names selected plot along y-axis default. color_by (data_extract_spec list multiple data_extract_spec) optional, defines color encoding. NULL color encoding option displayed. size_by (data_extract_spec list multiple data_extract_spec) optional, defines point size encoding. NULL size encoding option displayed. row_facet (data_extract_spec list multiple data_extract_spec) optional, specifies variable(s) faceting rows. col_facet (data_extract_spec list multiple data_extract_spec) optional, specifies variable(s) faceting columns. plot_height (numeric) optional, specifies plot height three-element vector value, min, max intended use slider UI element. plot_width (numeric) optional, specifies plot width three-element vector value, min, max slider encoding plot width. alpha (integer(1) integer(3)) optional, specifies point opacity. length alpha one: plot points fixed opacity. length alpha three: plot points opacity dynamically adjusted based vector value, min, max. shape (character) optional, character vector names shape, e.g. c(\"triangle\", \"square\", \"circle\"). defaults shape_names. complete list vignette(\"ggplot2-specs\", package=\"ggplot2\"). size (integer(1) integer(3)) optional, specifies point size. length size one: plot point sizes fixed size. length size three: plot points size dynamically adjusted based vector value, min, max. max_deg (integer) optional, maximum degree polynomial trend line. Must less 1. rotate_xaxis_labels (logical) optional, whether rotate plot X axis labels. rotate default (FALSE). ggtheme (character) optional, ggplot2 theme used default. Defaults \"gray\". pre_output (shiny.tag) optional, text UI element displayed module's output, providing context title. text placed output put output context. example title. post_output (shiny.tag) optional, text UI element displayed module's output, adding context instructions. Elements like shiny::helpText() useful. table_dec (integer) optional, number decimal places used round numeric values table. ggplot2_args (ggplot2_args) object created teal.widgets::ggplot2_args() settings module plot. argument merged options variable teal.ggplot2_args default module setup. details see vignette: vignette(\"custom-ggplot2-arguments\", package = \"teal.widgets\") transformators (list teal_transform_module) applied transform module's data input. learn check vignette(\"transform-input-data\", package = \"teal\"). decorators (named list lists teal_transform_module) optional, decorator tables plots included module output reported. decorators applied respective output objects. See section \"Decorating Module\" details.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_g_scatterplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"teal module: Scatterplot ‚Äî tm_g_scatterplot","text":"Object class teal_module used teal applications.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_g_scatterplot.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"teal module: Scatterplot ‚Äî tm_g_scatterplot","text":"examples, please see vignette \"Using scatterplot\" via vignette(\"using-scatterplot\", package = \"teal.modules.general\").","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_g_scatterplot.html","id":"decorating-module","dir":"Reference","previous_headings":"","what":"Decorating Module","title":"teal module: Scatterplot ‚Äî tm_g_scatterplot","text":"module generates following objects, can modified place using decorators: plot (ggplot) Decorator applied specific output using named list teal_transform_module objects. name list corresponds name output decorator applied. See code snippet :   additional details examples decorators, refer vignette vignette(\"decorate-module-output\", package = \"teal.modules.general\"). learn please refer vignette vignette(\"transform-module-output\", package = \"teal\") teal::teal_transform_module() documentation.","code":"tm_g_scatterplot(    ..., # arguments for module    decorators = list(      plot = teal_transform_module(...) # applied to the `plot` output    ) )"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_g_scatterplot.html","id":"examples-in-shinylive","dir":"Reference","previous_headings":"","what":"Examples in Shinylive","title":"teal module: Scatterplot ‚Äî tm_g_scatterplot","text":"example-1 Open Shinylive example-2 Open Shinylive","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_g_scatterplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"teal module: Scatterplot ‚Äî tm_g_scatterplot","text":"","code":"# general data example data <- teal_data() data <- within(data, {   require(nestcolor)   CO2 <- CO2 })  app <- init(   data = data,   modules = modules(     tm_g_scatterplot(       label = \"Scatterplot Choices\",       x = data_extract_spec(         dataname = \"CO2\",         select = select_spec(           label = \"Select variable:\",           choices = variable_choices(data[[\"CO2\"]], c(\"conc\", \"uptake\")),           selected = \"conc\",           multiple = FALSE,           fixed = FALSE         )       ),       y = data_extract_spec(         dataname = \"CO2\",         select = select_spec(           label = \"Select variable:\",           choices = variable_choices(data[[\"CO2\"]], c(\"conc\", \"uptake\")),           selected = \"uptake\",           multiple = FALSE,           fixed = FALSE         )       ),       color_by = data_extract_spec(         dataname = \"CO2\",         select = select_spec(           label = \"Select variable:\",           choices = variable_choices(             data[[\"CO2\"]],             c(\"Plant\", \"Type\", \"Treatment\", \"conc\", \"uptake\")           ),           selected = NULL,           multiple = FALSE,           fixed = FALSE         )       ),       size_by = data_extract_spec(         dataname = \"CO2\",         select = select_spec(           label = \"Select variable:\",           choices = variable_choices(data[[\"CO2\"]], c(\"conc\", \"uptake\")),           selected = \"uptake\",           multiple = FALSE,           fixed = FALSE         )       ),       row_facet = data_extract_spec(         dataname = \"CO2\",         select = select_spec(           label = \"Select variable:\",           choices = variable_choices(data[[\"CO2\"]], c(\"Plant\", \"Type\", \"Treatment\")),           selected = NULL,           multiple = FALSE,           fixed = FALSE         )       ),       col_facet = data_extract_spec(         dataname = \"CO2\",         select = select_spec(           label = \"Select variable:\",           choices = variable_choices(data[[\"CO2\"]], c(\"Plant\", \"Type\", \"Treatment\")),           selected = NULL,           multiple = FALSE,           fixed = FALSE         )       )     )   ) ) #> Initializing tm_g_scatterplot if (interactive()) {   shinyApp(app$ui, app$server) }  # CDISC data example data <- teal_data() data <- within(data, {   require(nestcolor)   ADSL <- teal.data::rADSL }) join_keys(data) <- default_cdisc_join_keys[names(data)]  app <- init(   data = data,   modules = modules(     tm_g_scatterplot(       label = \"Scatterplot Choices\",       x = data_extract_spec(         dataname = \"ADSL\",         select = select_spec(           label = \"Select variable:\",           choices = variable_choices(data[[\"ADSL\"]], c(\"AGE\", \"BMRKR1\", \"BMRKR2\")),           selected = \"AGE\",           multiple = FALSE,           fixed = FALSE         )       ),       y = data_extract_spec(         dataname = \"ADSL\",         select = select_spec(           label = \"Select variable:\",           choices = variable_choices(data[[\"ADSL\"]], c(\"AGE\", \"BMRKR1\", \"BMRKR2\")),           selected = \"BMRKR1\",           multiple = FALSE,           fixed = FALSE         )       ),       color_by = data_extract_spec(         dataname = \"ADSL\",         select = select_spec(           label = \"Select variable:\",           choices = variable_choices(             data[[\"ADSL\"]],             c(\"AGE\", \"BMRKR1\", \"BMRKR2\", \"RACE\", \"REGION1\")           ),           selected = NULL,           multiple = FALSE,           fixed = FALSE         )       ),       size_by = data_extract_spec(         dataname = \"ADSL\",         select = select_spec(           label = \"Select variable:\",           choices = variable_choices(data[[\"ADSL\"]], c(\"AGE\", \"BMRKR1\")),           selected = \"AGE\",           multiple = FALSE,           fixed = FALSE         )       ),       row_facet = data_extract_spec(         dataname = \"ADSL\",         select = select_spec(           label = \"Select variable:\",           choices = variable_choices(data[[\"ADSL\"]], c(\"BMRKR2\", \"RACE\", \"REGION1\")),           selected = NULL,           multiple = FALSE,           fixed = FALSE         )       ),       col_facet = data_extract_spec(         dataname = \"ADSL\",         select = select_spec(           label = \"Select variable:\",           choices = variable_choices(data[[\"ADSL\"]], c(\"BMRKR2\", \"RACE\", \"REGION1\")),           selected = NULL,           multiple = FALSE,           fixed = FALSE         )       )     )   ) ) #> Initializing tm_g_scatterplot if (interactive()) {   shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_g_scatterplotmatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"teal module: Scatterplot matrix ‚Äî tm_g_scatterplotmatrix","title":"teal module: Scatterplot matrix ‚Äî tm_g_scatterplotmatrix","text":"Generates scatterplot matrix selected variables datasets. plot within matrix represents relationship two variables, providing overview correlations distributions across selected data.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_g_scatterplotmatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"teal module: Scatterplot matrix ‚Äî tm_g_scatterplotmatrix","text":"","code":"tm_g_scatterplotmatrix(   label = \"Scatterplot Matrix\",   variables,   plot_height = c(600, 200, 2000),   plot_width = NULL,   pre_output = NULL,   post_output = NULL,   transformators = list(),   decorators = list() )"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_g_scatterplotmatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"teal module: Scatterplot matrix ‚Äî tm_g_scatterplotmatrix","text":"label (character(1)) Label shown navigation item module module group. modules() defaults \"root\". See Details. variables (data_extract_spec list multiple data_extract_spec) Specifies plotting variables incoming dataset filtering selecting. case data_extract_spec use select_spec(..., ordered = TRUE) plot elements rendered according selection order. plot_height (numeric) optional, specifies plot height three-element vector value, min, max intended use slider UI element. plot_width (numeric) optional, specifies plot width three-element vector value, min, max slider encoding plot width. pre_output (shiny.tag) optional, text UI element displayed module's output, providing context title. text placed output put output context. example title. post_output (shiny.tag) optional, text UI element displayed module's output, adding context instructions. Elements like shiny::helpText() useful. transformators (list teal_transform_module) applied transform module's data input. learn check vignette(\"transform-input-data\", package = \"teal\"). decorators (named list lists teal_transform_module) optional, decorator tables plots included module output reported. decorators applied respective output objects. See section \"Decorating Module\" details.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_g_scatterplotmatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"teal module: Scatterplot matrix ‚Äî tm_g_scatterplotmatrix","text":"Object class teal_module used teal applications.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_g_scatterplotmatrix.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"teal module: Scatterplot matrix ‚Äî tm_g_scatterplotmatrix","text":"examples, please see vignette \"Using scatterplot matrix\" via vignette(\"using-scatterplot-matrix\", package = \"teal.modules.general\").","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_g_scatterplotmatrix.html","id":"decorating-module","dir":"Reference","previous_headings":"","what":"Decorating Module","title":"teal module: Scatterplot matrix ‚Äî tm_g_scatterplotmatrix","text":"module generates following objects, can modified place using decorators: plot (trellis - output lattice::splom) Decorator applied specific output using named list teal_transform_module objects. name list corresponds name output decorator applied. See code snippet :   additional details examples decorators, refer vignette vignette(\"decorate-module-output\", package = \"teal.modules.general\"). learn please refer vignette vignette(\"transform-module-output\", package = \"teal\") teal::teal_transform_module() documentation.","code":"tm_g_scatterplotmatrix(    ..., # arguments for module    decorators = list(      plot = teal_transform_module(...) # applied to the `plot` output    ) )"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_g_scatterplotmatrix.html","id":"examples-in-shinylive","dir":"Reference","previous_headings":"","what":"Examples in Shinylive","title":"teal module: Scatterplot matrix ‚Äî tm_g_scatterplotmatrix","text":"example-1 Open Shinylive example-2 Open Shinylive","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_g_scatterplotmatrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"teal module: Scatterplot matrix ‚Äî tm_g_scatterplotmatrix","text":"","code":"# general data example data <- teal_data() data <- within(data, {   countries <- data.frame(     id = c(\"DE\", \"FR\", \"IT\", \"ES\", \"PT\", \"GR\", \"NL\", \"BE\", \"LU\", \"AT\"),     government = factor(       c(2, 2, 2, 1, 2, 2, 1, 1, 1, 2),       labels = c(\"Monarchy\", \"Republic\")     ),     language_family = factor(       c(1, 3, 3, 3, 3, 2, 1, 1, 3, 1),       labels = c(\"Germanic\", \"Hellenic\", \"Romance\")     ),     population = c(83, 67, 60, 47, 10, 11, 17, 11, 0.6, 9),     area = c(357, 551, 301, 505, 92, 132, 41, 30, 2.6, 83),     gdp = c(3.4, 2.7, 2.1, 1.4, 0.3, 0.2, 0.7, 0.5, 0.1, 0.4),     debt = c(2.1, 2.3, 2.4, 2.6, 2.3, 2.4, 2.3, 2.4, 2.3, 2.4)   )   sales <- data.frame(     id = 1:50,     country_id = sample(       c(\"DE\", \"FR\", \"IT\", \"ES\", \"PT\", \"GR\", \"NL\", \"BE\", \"LU\", \"AT\"),       size = 50,       replace = TRUE     ),     year = sort(sample(2010:2020, 50, replace = TRUE)),     venue = sample(c(\"small\", \"medium\", \"large\", \"online\"), 50, replace = TRUE),     cancelled = sample(c(TRUE, FALSE), 50, replace = TRUE),     quantity = rnorm(50, 100, 20),     costs = rnorm(50, 80, 20),     profit = rnorm(50, 20, 10)   ) }) join_keys(data) <- join_keys(   join_key(\"countries\", \"countries\", \"id\"),   join_key(\"sales\", \"sales\", \"id\"),   join_key(\"countries\", \"sales\", c(\"id\" = \"country_id\")) )  app <- init(   data = data,   modules = modules(     tm_g_scatterplotmatrix(       label = \"Scatterplot matrix\",       variables = list(         data_extract_spec(           dataname = \"countries\",           select = select_spec(             label = \"Select variables:\",             choices = variable_choices(data[[\"countries\"]]),             selected = c(\"area\", \"gdp\", \"debt\"),             multiple = TRUE,             ordered = TRUE,             fixed = FALSE           )         ),         data_extract_spec(           dataname = \"sales\",           filter = filter_spec(             label = \"Select variable:\",             vars = \"country_id\",             choices = value_choices(data[[\"sales\"]], \"country_id\"),             selected = c(\"DE\", \"FR\", \"IT\", \"PT\", \"GR\", \"NL\", \"BE\", \"LU\", \"AT\"),             multiple = TRUE           ),           select = select_spec(             label = \"Select variables:\",             choices = variable_choices(data[[\"sales\"]], c(\"quantity\", \"costs\", \"profit\")),             selected = c(\"quantity\", \"costs\", \"profit\"),             multiple = TRUE,             ordered = TRUE,             fixed = FALSE           )         )       )     )   ) ) #> Initializing tm_g_scatterplotmatrix if (interactive()) {   shinyApp(app$ui, app$server) }  # CDISC data example data <- teal_data() data <- within(data, {   ADSL <- teal.data::rADSL   ADRS <- teal.data::rADRS }) join_keys(data) <- default_cdisc_join_keys[names(data)]  app <- init(   data = data,   modules = modules(     tm_g_scatterplotmatrix(       label = \"Scatterplot matrix\",       variables = list(         data_extract_spec(           dataname = \"ADSL\",           select = select_spec(             label = \"Select variables:\",             choices = variable_choices(data[[\"ADSL\"]]),             selected = c(\"AGE\", \"RACE\", \"SEX\"),             multiple = TRUE,             ordered = TRUE,             fixed = FALSE           )         ),         data_extract_spec(           dataname = \"ADRS\",           filter = filter_spec(             label = \"Select endpoints:\",             vars = c(\"PARAMCD\", \"AVISIT\"),             choices = value_choices(data[[\"ADRS\"]], c(\"PARAMCD\", \"AVISIT\"), c(\"PARAM\", \"AVISIT\")),             selected = \"INVET - END OF INDUCTION\",             multiple = TRUE           ),           select = select_spec(             label = \"Select variables:\",             choices = variable_choices(data[[\"ADRS\"]]),             selected = c(\"AGE\", \"AVAL\", \"ADY\"),             multiple = TRUE,             ordered = TRUE,             fixed = FALSE           )         )       )     )   ) ) #> Initializing tm_g_scatterplotmatrix if (interactive()) {   shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_missing_data.html","id":null,"dir":"Reference","previous_headings":"","what":"teal module: Missing data analysis ‚Äî tm_missing_data","title":"teal module: Missing data analysis ‚Äî tm_missing_data","text":"module analyzes missing data data.frames help users explore missing observations gain insights completeness data. useful clinical data analysis within context CDISC standards adaptable general data analysis purposes.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_missing_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"teal module: Missing data analysis ‚Äî tm_missing_data","text":"","code":"tm_missing_data(   label = \"Missing data\",   plot_height = c(600, 400, 5000),   plot_width = NULL,   datanames = \"all\",   parent_dataname = \"ADSL\",   ggtheme = c(\"classic\", \"gray\", \"bw\", \"linedraw\", \"light\", \"dark\", \"minimal\", \"void\"),   ggplot2_args = list(`Combinations Hist` = teal.widgets::ggplot2_args(labs =     list(caption = NULL)), `Combinations Main` = teal.widgets::ggplot2_args(labs =     list(title = NULL))),   pre_output = NULL,   post_output = NULL,   transformators = list(),   decorators = list() )"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_missing_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"teal module: Missing data analysis ‚Äî tm_missing_data","text":"label (character(1)) Label shown navigation item module module group. modules() defaults \"root\". See Details. plot_height (numeric) optional, specifies plot height three-element vector value, min, max intended use slider UI element. plot_width (numeric) optional, specifies plot width three-element vector value, min, max slider encoding plot width. datanames (character) Names datasets relevant item. 2 reserved values specific behaviors: keyword \"\" includes datasets available data passed teal application. NULL hides sidebar panel completely. transformators specified, datanames automatically added datanames argument. parent_dataname (character(1)) Specifies parent dataset name. Default ADSL CDISC data. provided exists, enables additional analysis \"subject\". non-CDISC data, parameter can ignored. ggtheme (character) optional, specifies default ggplot2 theme plots. Defaults classic. ggplot2_args (ggplot2_args) optional, object created teal.widgets::ggplot2_args() settings plots named list ggplot2_args objects plot-specific settings. argument merged options variable teal.ggplot2_args default module setup. List names match following: c(\"default\", \"Summary Obs\", \"Summary Patients\", \"Combinations Main\", \"Combinations Hist\", \"Subject\"). details see vignette: vignette(\"custom-ggplot2-arguments\", package = \"teal.widgets\"). pre_output (shiny.tag) optional, text UI element displayed module's output, providing context title. text placed output put output context. example title. post_output (shiny.tag) optional, text UI element displayed module's output, adding context instructions. Elements like shiny::helpText() useful. transformators (list teal_transform_module) applied transform module's data input. learn check vignette(\"transform-input-data\", package = \"teal\"). decorators (named list lists teal_transform_module) optional, decorator tables plots included module output reported. decorators applied respective output objects. See section \"Decorating Module\" details.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_missing_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"teal module: Missing data analysis ‚Äî tm_missing_data","text":"Object class teal_module used teal applications.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_missing_data.html","id":"decorating-module","dir":"Reference","previous_headings":"","what":"Decorating Module","title":"teal module: Missing data analysis ‚Äî tm_missing_data","text":"module generates following objects, can modified place using decorators: summary_plot (grob created ggplot2::ggplotGrob()) combination_plot (grob created ggplot2::ggplotGrob()) by_subject_plot (ggplot) table (datatables created DT::datatable()) Decorator applied specific output using named list teal_transform_module objects. name list corresponds name output decorator applied. See code snippet :   additional details examples decorators, refer vignette vignette(\"decorate-module-output\", package = \"teal.modules.general\"). learn please refer vignette vignette(\"transform-module-output\", package = \"teal\") teal::teal_transform_module() documentation.","code":"tm_missing_data(    ..., # arguments for module    decorators = list(      summary_plot = teal_transform_module(...), # applied only to `summary_plot` output      combination_plot = teal_transform_module(...), # applied only to `combination_plot` output      by_subject_plot = teal_transform_module(...), # applied only to `by_subject_plot` output      table = teal_transform_module(...) # applied only to `table` output    ) )"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_missing_data.html","id":"examples-in-shinylive","dir":"Reference","previous_headings":"","what":"Examples in Shinylive","title":"teal module: Missing data analysis ‚Äî tm_missing_data","text":"example-1 Open Shinylive example-2 Open Shinylive","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_missing_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"teal module: Missing data analysis ‚Äî tm_missing_data","text":"","code":"# general example data data <- teal_data() data <- within(data, {   require(nestcolor)    add_nas <- function(x) {     x[sample(seq_along(x), floor(length(x) * runif(1, .05, .17)))] <- NA     x   }    iris <- iris   mtcars <- mtcars    iris[] <- lapply(iris, add_nas)   mtcars[] <- lapply(mtcars, add_nas)   mtcars[[\"cyl\"]] <- as.factor(mtcars[[\"cyl\"]])   mtcars[[\"gear\"]] <- as.factor(mtcars[[\"gear\"]]) })  app <- init(   data = data,   modules = modules(     tm_missing_data(parent_dataname = \"mtcars\")   ) ) #> Initializing tm_missing_data #> Warning: 'package:nestcolor' may not be available when loading if (interactive()) {   shinyApp(app$ui, app$server) }  # CDISC example data data <- teal_data() data <- within(data, {   require(nestcolor)   ADSL <- teal.data::rADSL   ADRS <- rADRS }) join_keys(data) <- default_cdisc_join_keys[names(data)]  app <- init(   data = data,   modules = modules(     tm_missing_data()   ) ) #> Initializing tm_missing_data if (interactive()) {   shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_outliers.html","id":null,"dir":"Reference","previous_headings":"","what":"teal module: Outliers analysis ‚Äî tm_outliers","title":"teal module: Outliers analysis ‚Äî tm_outliers","text":"Module analyze identify outliers using different methods IQR, Z-score, Percentiles, offers visualizations including box plots, density plots, cumulative distribution plots help interpret outliers.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_outliers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"teal module: Outliers analysis ‚Äî tm_outliers","text":"","code":"tm_outliers(   label = \"Outliers Module\",   outlier_var,   categorical_var = NULL,   ggtheme = c(\"gray\", \"bw\", \"linedraw\", \"light\", \"dark\", \"minimal\", \"classic\", \"void\"),   ggplot2_args = teal.widgets::ggplot2_args(),   plot_height = c(600, 200, 2000),   plot_width = NULL,   pre_output = NULL,   post_output = NULL,   transformators = list(),   decorators = list() )"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_outliers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"teal module: Outliers analysis ‚Äî tm_outliers","text":"label (character(1)) Label shown navigation item module module group. modules() defaults \"root\". See Details. outlier_var (data_extract_spec list multiple data_extract_spec) Specifies variable(s) analyzed outliers. categorical_var (data_extract_spec list multiple data_extract_spec) optional, specifies categorical variable(s) split selected outlier variables . ggtheme (character) optional, ggplot2 theme used default. Defaults \"gray\". ggplot2_args (ggplot2_args) optional, object created teal.widgets::ggplot2_args() settings plots named list ggplot2_args objects plot-specific settings. argument merged options variable teal.ggplot2_args default module setup. List names match following: c(\"default\", \"Boxplot\", \"Density Plot\", \"Cumulative Distribution Plot\"). details see vignette: vignette(\"custom-ggplot2-arguments\", package = \"teal.widgets\"). plot_height (numeric) optional, specifies plot height three-element vector value, min, max intended use slider UI element. plot_width (numeric) optional, specifies plot width three-element vector value, min, max slider encoding plot width. pre_output (shiny.tag) optional, text UI element displayed module's output, providing context title. text placed output put output context. example title. post_output (shiny.tag) optional, text UI element displayed module's output, adding context instructions. Elements like shiny::helpText() useful. transformators (list teal_transform_module) applied transform module's data input. learn check vignette(\"transform-input-data\", package = \"teal\"). decorators (named list lists teal_transform_module) optional, decorator tables plots included module output reported. decorators applied respective output objects. See section \"Decorating Module\" details.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_outliers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"teal module: Outliers analysis ‚Äî tm_outliers","text":"Object class teal_module used teal applications.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_outliers.html","id":"decorating-module","dir":"Reference","previous_headings":"","what":"Decorating Module","title":"teal module: Outliers analysis ‚Äî tm_outliers","text":"module generates following objects, can modified place using decorators: box_plot (ggplot) density_plot (ggplot) cumulative_plot (ggplot) table (datatables created DT::datatable()) Decorator applied specific output using named list teal_transform_module objects. name list corresponds name output decorator applied. See code snippet :   additional details examples decorators, refer vignette vignette(\"decorate-module-output\", package = \"teal.modules.general\"). learn please refer vignette vignette(\"transform-module-output\", package = \"teal\") teal::teal_transform_module() documentation.","code":"tm_outliers(    ..., # arguments for module    decorators = list(      box_plot = teal_transform_module(...), # applied only to `box_plot` output      density_plot = teal_transform_module(...), # applied only to `density_plot` output      cumulative_plot = teal_transform_module(...), # applied only to `cumulative_plot` output      table = teal_transform_module(...) # applied only to `table` output    ) )"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_outliers.html","id":"examples-in-shinylive","dir":"Reference","previous_headings":"","what":"Examples in Shinylive","title":"teal module: Outliers analysis ‚Äî tm_outliers","text":"example-1 Open Shinylive example-2 Open Shinylive","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_outliers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"teal module: Outliers analysis ‚Äî tm_outliers","text":"","code":"# general data example data <- teal_data() data <- within(data, {   CO2 <- CO2   CO2[[\"primary_key\"]] <- seq_len(nrow(CO2)) }) join_keys(data) <- join_keys(join_key(\"CO2\", \"CO2\", \"primary_key\"))  vars <- choices_selected(variable_choices(data[[\"CO2\"]], c(\"Plant\", \"Type\", \"Treatment\")))  app <- init(   data = data,   modules = modules(     tm_outliers(       outlier_var = list(         data_extract_spec(           dataname = \"CO2\",           select = select_spec(             label = \"Select variable:\",             choices = variable_choices(data[[\"CO2\"]], c(\"conc\", \"uptake\")),             selected = \"uptake\",             multiple = FALSE,             fixed = FALSE           )         )       ),       categorical_var = list(         data_extract_spec(           dataname = \"CO2\",           filter = filter_spec(             vars = vars,             choices = value_choices(data[[\"CO2\"]], vars$selected),             selected = value_choices(data[[\"CO2\"]], vars$selected),             multiple = TRUE           )         )       )     )   ) ) #> Initializing tm_outliers if (interactive()) {   shinyApp(app$ui, app$server) }   # CDISC data example data <- teal_data() data <- within(data, {   ADSL <- teal.data::rADSL }) join_keys(data) <- default_cdisc_join_keys[names(data)]  fact_vars_adsl <- names(Filter(isTRUE, sapply(data[[\"ADSL\"]], is.factor))) vars <- choices_selected(variable_choices(data[[\"ADSL\"]], fact_vars_adsl))    app <- init(   data = data,   modules = modules(     tm_outliers(       outlier_var = list(         data_extract_spec(           dataname = \"ADSL\",           select = select_spec(             label = \"Select variable:\",             choices = variable_choices(data[[\"ADSL\"]], c(\"AGE\", \"BMRKR1\")),             selected = \"AGE\",             multiple = FALSE,             fixed = FALSE           )         )       ),       categorical_var = list(         data_extract_spec(           dataname = \"ADSL\",           filter = filter_spec(             vars = vars,             choices = value_choices(data[[\"ADSL\"]], vars$selected),             selected = value_choices(data[[\"ADSL\"]], vars$selected),             multiple = TRUE           )         )       )     )   ) ) #> Initializing tm_outliers if (interactive()) {   shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_t_crosstable.html","id":null,"dir":"Reference","previous_headings":"","what":"teal module: Cross-table ‚Äî tm_t_crosstable","title":"teal module: Cross-table ‚Äî tm_t_crosstable","text":"Generates simple cross-table two variables dataset custom options showing percentages sub-totals.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_t_crosstable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"teal module: Cross-table ‚Äî tm_t_crosstable","text":"","code":"tm_t_crosstable(   label = \"Cross Table\",   x,   y,   show_percentage = TRUE,   show_total = TRUE,   pre_output = NULL,   post_output = NULL,   basic_table_args = teal.widgets::basic_table_args(),   transformators = list(),   decorators = list() )"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_t_crosstable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"teal module: Cross-table ‚Äî tm_t_crosstable","text":"label (character(1)) Label shown navigation item module module group. modules() defaults \"root\". See Details. x (data_extract_spec list multiple data_extract_spec) Object available choices pre-selected option variable X - row values. case data_extract_spec use select_spec(..., ordered = TRUE) table elements rendered according selection order. y (data_extract_spec list multiple data_extract_spec) Object available choices pre-selected option variable Y - column values. data_extract_spec must allow multiple selection case. show_percentage (logical(1)) Indicates whether show percentages (relevant x factor). Defaults TRUE. show_total (logical(1)) Indicates whether show total column. Defaults TRUE. pre_output (shiny.tag) optional, text UI element displayed module's output, providing context title. text placed output put output context. example title. post_output (shiny.tag) optional, text UI element displayed module's output, adding context instructions. Elements like shiny::helpText() useful. basic_table_args (basic_table_args) object created teal.widgets::basic_table_args() settings module table. argument merged options variable teal.basic_table_args default module setup. details see vignette: vignette(\"custom-basic-table-arguments\", package = \"teal.widgets\") transformators (list teal_transform_module) applied transform module's data input. learn check vignette(\"transform-input-data\", package = \"teal\"). decorators (named list lists teal_transform_module) optional, decorator tables plots included module output reported. decorators applied respective output objects. See section \"Decorating Module\" details.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_t_crosstable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"teal module: Cross-table ‚Äî tm_t_crosstable","text":"Object class teal_module used teal applications.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_t_crosstable.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"teal module: Cross-table ‚Äî tm_t_crosstable","text":"examples, please see vignette \"Using cross table\" via vignette(\"using-cross-table\", package = \"teal.modules.general\").","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_t_crosstable.html","id":"decorating-module","dir":"Reference","previous_headings":"","what":"Decorating Module","title":"teal module: Cross-table ‚Äî tm_t_crosstable","text":"module generates following objects, can modified place using decorators: table (ElementaryTable - output rtables::build_table) Decorator applied specific output using named list teal_transform_module objects. name list corresponds name output decorator applied. See code snippet :   additional details examples decorators, refer vignette vignette(\"decorate-module-output\", package = \"teal.modules.general\"). learn please refer vignette vignette(\"transform-module-output\", package = \"teal\") teal::teal_transform_module() documentation.","code":"tm_t_crosstable(    ..., # arguments for module    decorators = list(      table = teal_transform_module(...) # applied to the `table` output    ) )"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_t_crosstable.html","id":"examples-in-shinylive","dir":"Reference","previous_headings":"","what":"Examples in Shinylive","title":"teal module: Cross-table ‚Äî tm_t_crosstable","text":"example-1 Open Shinylive example-2 Open Shinylive","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_t_crosstable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"teal module: Cross-table ‚Äî tm_t_crosstable","text":"","code":"# general data example data <- teal_data() data <- within(data, {   mtcars <- mtcars   for (v in c(\"cyl\", \"vs\", \"am\", \"gear\")) {     mtcars[[v]] <- as.factor(mtcars[[v]])   }   mtcars[[\"primary_key\"]] <- seq_len(nrow(mtcars)) }) join_keys(data) <- join_keys(join_key(\"mtcars\", \"mtcars\", \"primary_key\"))  app <- init(   data = data,   modules = modules(     tm_t_crosstable(       label = \"Cross Table\",       x = data_extract_spec(         dataname = \"mtcars\",         select = select_spec(           label = \"Select variable:\",           choices = variable_choices(data[[\"mtcars\"]], c(\"cyl\", \"vs\", \"am\", \"gear\")),           selected = c(\"cyl\", \"gear\"),           multiple = TRUE,           ordered = TRUE,           fixed = FALSE         )       ),       y = data_extract_spec(         dataname = \"mtcars\",         select = select_spec(           label = \"Select variable:\",           choices = variable_choices(data[[\"mtcars\"]], c(\"cyl\", \"vs\", \"am\", \"gear\")),           selected = \"vs\",           multiple = FALSE,           fixed = FALSE         )       )     )   ) ) #> Initializing tm_t_crosstable if (interactive()) {   shinyApp(app$ui, app$server) }  # CDISC data example data <- teal_data() data <- within(data, {   ADSL <- teal.data::rADSL }) join_keys(data) <- default_cdisc_join_keys[names(data)]  app <- init(   data = data,   modules = modules(     tm_t_crosstable(       label = \"Cross Table\",       x = data_extract_spec(         dataname = \"ADSL\",         select = select_spec(           label = \"Select variable:\",           choices = variable_choices(data[[\"ADSL\"]], subset = function(data) {             idx <- !vapply(data, inherits, logical(1), c(\"Date\", \"POSIXct\", \"POSIXlt\"))             return(names(data)[idx])           }),           selected = \"COUNTRY\",           multiple = TRUE,           ordered = TRUE,           fixed = FALSE         )       ),       y = data_extract_spec(         dataname = \"ADSL\",         select = select_spec(           label = \"Select variable:\",           choices = variable_choices(data[[\"ADSL\"]], subset = function(data) {             idx <- vapply(data, is.factor, logical(1))             return(names(data)[idx])           }),           selected = \"SEX\",           multiple = FALSE,           fixed = FALSE         )       )     )   ) ) #> Initializing tm_t_crosstable if (interactive()) {   shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_variable_browser.html","id":null,"dir":"Reference","previous_headings":"","what":"teal module: Variable browser ‚Äî tm_variable_browser","title":"teal module: Variable browser ‚Äî tm_variable_browser","text":"Module provides provides detailed summary visualization variable distributions data.frame objects, interactive features customize analysis.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_variable_browser.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"teal module: Variable browser ‚Äî tm_variable_browser","text":"","code":"tm_variable_browser(   label = \"Variable Browser\",   datasets_selected = deprecated(),   datanames = if (missing(datasets_selected)) \"all\" else datasets_selected,   parent_dataname = \"ADSL\",   pre_output = NULL,   post_output = NULL,   ggplot2_args = teal.widgets::ggplot2_args(),   transformators = list() )"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_variable_browser.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"teal module: Variable browser ‚Äî tm_variable_browser","text":"label (character(1)) Label shown navigation item module module group. modules() defaults \"root\". See Details. datasets_selected (character)  vector datasets show, please use datanames argument. datanames (character) Names datasets relevant item. 2 reserved values specific behaviors: keyword \"\" includes datasets available data passed teal application. NULL hides sidebar panel completely. transformators specified, datanames automatically added datanames argument. parent_dataname (character(1)) string specifying parent dataset. exists datanames extra checkbox shown allow users show variables datasets exist dataname. typically used remove ADSL columns CDISC data. non CDISC data can ignored. Defaults \"ADSL\". pre_output (shiny.tag) optional, text UI element displayed module's output, providing context title. text placed output put output context. example title. post_output (shiny.tag) optional, text UI element displayed module's output, adding context instructions. Elements like shiny::helpText() useful. ggplot2_args (ggplot2_args) object created teal.widgets::ggplot2_args() settings module plot. argument merged options variable teal.ggplot2_args default module setup. details see vignette: vignette(\"custom-ggplot2-arguments\", package = \"teal.widgets\") transformators (list teal_transform_module) applied transform module's data input. learn check vignette(\"transform-input-data\", package = \"teal\").","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_variable_browser.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"teal module: Variable browser ‚Äî tm_variable_browser","text":"Object class teal_module used teal applications.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_variable_browser.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"teal module: Variable browser ‚Äî tm_variable_browser","text":"Numeric columns fewer 30 distinct values can treated either discrete continuous checkbox allowing users switch treated(< 6 unique values default discrete, otherwise continuous).","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_variable_browser.html","id":"examples-in-shinylive","dir":"Reference","previous_headings":"","what":"Examples in Shinylive","title":"teal module: Variable browser ‚Äî tm_variable_browser","text":"example-1 Open Shinylive example-2 Open Shinylive","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/tm_variable_browser.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"teal module: Variable browser ‚Äî tm_variable_browser","text":"","code":"# general data example data <- teal_data() data <- within(data, {   iris <- iris   mtcars <- mtcars   women <- women   faithful <- faithful   CO2 <- CO2 })  app <- init(   data = data,   modules = modules(     tm_variable_browser(       label = \"Variable browser\"     )   ) ) #> Initializing tm_variable_browser if (interactive()) {   shinyApp(app$ui, app$server) }  # CDISC example data library(sparkline) data <- teal_data() data <- within(data, {   ADSL <- teal.data::rADSL   ADTTE <- teal.data::rADTTE }) join_keys(data) <- default_cdisc_join_keys[names(data)]  app <- init(   data = data,   modules = modules(     tm_variable_browser(       label = \"Variable browser\"     )   ) ) #> Initializing tm_variable_browser if (interactive()) {   shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/validate_input.html","id":null,"dir":"Reference","previous_headings":"","what":"Validates the variable browser inputs ‚Äî validate_input","title":"Validates the variable browser inputs ‚Äî validate_input","text":"Validates variable browser inputs","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/validate_input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validates the variable browser inputs ‚Äî validate_input","text":"","code":"validate_input(input, plot_var, data)"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/validate_input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validates the variable browser inputs ‚Äî validate_input","text":"input (session$input) shiny session input plot_var (list) list data frame array variable names data (teal_data) datasets passed module","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/validate_input.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validates the variable browser inputs ‚Äî validate_input","text":"logical TRUE validations pass; shiny validation error otherwise","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/var_missings_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize NAs. ‚Äî var_missings_info","title":"Summarize NAs. ‚Äî var_missings_info","text":"Summarizes occurrence missing values vector.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/var_missings_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize NAs. ‚Äî var_missings_info","text":"","code":"var_missings_info(x)"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/var_missings_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize NAs. ‚Äî var_missings_info","text":"x vector type length","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/var_missings_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize NAs. ‚Äî var_missings_info","text":"Character string describing NA occurrence.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/var_summary_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarizes variable ‚Äî var_summary_table","title":"Summarizes variable ‚Äî var_summary_table","text":"Creates html summary statistics relevant data type. numeric values returns central tendency measures, factor returns level counts, Date  date range, just number levels.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/var_summary_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarizes variable ‚Äî var_summary_table","text":"","code":"var_summary_table(x, numeric_as_factor, dt_rows, outlier_definition)"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/var_summary_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarizes variable ‚Äî var_summary_table","text":"x vector type numeric_as_factor logical numeric variable treated factor dt_rows numeric current/latest DT page length outlier_definition 0 outliers removed, otherwise outliers (outlier_definition*IQR /Q1/Q3 removed)","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/var_summary_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarizes variable ‚Äî var_summary_table","text":"text simple statistics.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/variable_type_icons.html","id":null,"dir":"Reference","previous_headings":"","what":"Get icons to represent variable types in dataset ‚Äî variable_type_icons","title":"Get icons to represent variable types in dataset ‚Äî variable_type_icons","text":"Get icons represent variable types dataset","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/variable_type_icons.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get icons to represent variable types in dataset ‚Äî variable_type_icons","text":"","code":"variable_type_icons(var_type)"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/variable_type_icons.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get icons to represent variable types in dataset ‚Äî variable_type_icons","text":"var_type (character) R internal types (classes).","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/variable_type_icons.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get icons to represent variable types in dataset ‚Äî variable_type_icons","text":"(character) vector HTML icons corresponding data type column.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/varname_w_label.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a string for a variable including its label ‚Äî varname_w_label","title":"Generate a string for a variable including its label ‚Äî varname_w_label","text":"Generate string variable including label","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/varname_w_label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a string for a variable including its label ‚Äî varname_w_label","text":"","code":"varname_w_label(   var_names,   dataset,   wrap_width = 80,   prefix = NULL,   suffix = NULL )"},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/varname_w_label.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a string for a variable including its label ‚Äî varname_w_label","text":"var_names (character) Name variable extract labels . dataset (dataset) Name analysis dataset. wrap_width (numeric) Number characters wrap original label . Defaults 80. prefix, suffix (character) String paste beginning/end variable name label.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/reference/varname_w_label.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a string for a variable including its label ‚Äî varname_w_label","text":"(character) String variable name label.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/news/index.html","id":"enhancements-0-4-0","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"teal.modules.general 0.4.0","text":"Introduced transformators decorators argument modules (#863). Modules‚Äô Show R Code widgets include library calls boost reproducibility (#786). Removed Show Warnings modals modules.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/news/index.html","id":"miscellaneous-0-4-0","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"teal.modules.general 0.4.0","text":"Soft deprecated datasets_selected argument modules favor datanames. Soft deprecated show_metadata argument tm_front_page() favor datanames. Added teal.logger functionality logging changes shiny inputs modules. example data now sourced teal.data. Update tm_g_distribution start validation error (#823).","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/news/index.html","id":"bug-fixes-0-4-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"teal.modules.general 0.4.0","text":"Fixed bug tm_missing_data ‚ÄúGroup Subject‚Äù using reactive data call (#772). Fixed --bound labels tm_g_regression (#66). Fixed bug tm_g_association app crash selected categorical variable factor instead character (#645).","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/news/index.html","id":"tealmodulesgeneral-030","dir":"Changelog","previous_headings":"","what":"teal.modules.general 0.3.0","title":"teal.modules.general 0.3.0","text":"CRAN release: 2024-03-05","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/news/index.html","id":"enhancements-0-3-0","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"teal.modules.general 0.3.0","text":"Updated package docs vignettes new way specifying data teal::init(). data argument accept teal_data object.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/news/index.html","id":"bug-fixes-0-3-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"teal.modules.general 0.3.0","text":"Outlier labels longer appear bounds tm_a_regression. Fixed bug tm_outliers changing selected variable cause popup.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/news/index.html","id":"miscellaneous-0-3-0","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"teal.modules.general 0.3.0","text":"Removed teal.slice dependencies. Specified minimal version package dependencies.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/news/index.html","id":"breaking-changes-0-2-16","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"teal.modules.general 0.2.16","text":"Replaced chunks simpler qenv class. Replaced datasets argument containing FilteredData new arguments data (tdata object) filter_panel_api (FilterPanelAPI).","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/news/index.html","id":"enhancements-0-2-16","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"teal.modules.general 0.2.16","text":"Added parent_dataname argument tm_variable_browser tm_missing_data allow specification parent dataset modules. Improved UI labels plot panel title tm_g_association. Added inputs tm_variable_browser module text size plot theme. Forced ggplot theme always selected modules. Updated encodings input checks use shinyvalidate::InputValidator instead shiny::validate better UI experience.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/news/index.html","id":"bug-fixes-0-2-16","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"teal.modules.general 0.2.16","text":"Fixed bug tm_g_scatterplot selected x y facets . Fixed bug tm_g_distribution plot theoretical distribution newer ggplot2 version. Fixed bug tm_g_bivariate adding lines checkbox available one x y deselected. Fixed bug tm_variable_browser changing filters reset selected variable first list.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/news/index.html","id":"miscellaneous-0-2-16","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"teal.modules.general 0.2.16","text":"Removed scda package dependency examples. Replaced deprecated ggplot2 functions ..count.., ..density.. ..prop... Version bump forcats dependency. Replaced scda data generation functions random.cdisc.data","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/news/index.html","id":"enhancements-0-2-15","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"teal.modules.general 0.2.15","text":"Added teal.reporter functionality modules. Implemented nestcolor examples, refactored tm_a_pca tm_missing_data allow using nestcolor. Added log transformation options tm_g_scatterplot. Added server_rendering flag tm_data_table control whether table rendered server client side.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/news/index.html","id":"bug-fixes-0-2-15","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"teal.modules.general 0.2.15","text":"Fixed overflow wide tm_a_pca tables. Fixed join type functionality tm_t_crosstable. Fixed bug tm_missing_data selecting variables missings. Fixed bug tm_missing_data using any_na.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/news/index.html","id":"miscellaneous-0-2-15","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"teal.modules.general 0.2.15","text":"Moved packages used one module Imports Suggests DESCRIPTION file. Moved magrittr package Depends Imports DESCRIPTION file.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/news/index.html","id":"enhancements-0-2-14","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"teal.modules.general 0.2.14","text":"New teal module tm_front_page simplify creating front page teal apps. Added slider widget control font size label tm_g_scatterplot. Output integers without decimal places selecting points tm_g_scatterplot. Improved names code chunks shown Debug Info. Improved validation message number regressors big tm_a_regression.R.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/news/index.html","id":"bug-fixes-0-2-14","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"teal.modules.general 0.2.14","text":"Fixed wrong validation tm_a_pca. Fixed crash deselecting categorical factor tm_outliers.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/news/index.html","id":"miscellaneous-0-2-14","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"teal.modules.general 0.2.14","text":"Added template pkgdown site. Updated package authors.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/news/index.html","id":"enhancements-0-2-13","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"teal.modules.general 0.2.13","text":"Rewrote modules use moduleServer updated call plot_with_settings_srv changes teal.devel. Fixed tracking selection order data_extract_ui. selectors can return ordered selection one specifies ordered = TRUE select_spec. Switched order tm_missing_data combination plot show data descending order. Changed variable levels output tm_missing_data allow numerical sorting.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/news/index.html","id":"miscellaneous-0-2-13","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"teal.modules.general 0.2.13","text":"Removed unneeded n row tm_t_crosstable. Replaced calls teal::root_modules teal::modules following deprecation teal::root_modules. Adjusted package imports take account changes teal framework. Added ‚ÄúGetting started teal.modules.general‚Äù vignette. Updated README file. Moved ggmosaic package Depends Imports DESCRIPTION file.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/news/index.html","id":"enhancements-0-2-12","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"teal.modules.general 0.2.12","text":"Added support logging logger package added info level logs upon initialization module. Added support custom arguments ggplot2::labs ggplot2::theme plot based modules. Added support custom arguments rtables::basic_table tm_t_crosstable. Updated tm_outliers, tm_g_scatterplotmatrix, tm_g_association, tm_t_crosstable modules adopt new teal.transform::data_merge_srv teal.transform::data_extract_multiple_srv modules. Distinguished bars representing NA plot depicting counts tm_variable_browser different color fill. Modified summary statistics table numeric columns tm_variable_browser reflect plot outliers removed. Added option remove missing values tm_variable_browser histogram factor like variables. Added ability sort Variable Type tm_variable_browser separating variable type icons column. Updated Grouped Subject tab tm_missing_data module present data way Summary tab . Added support NA level grouping variable variable levels table tm_missing_data module. Added informative labels level grouping variable variable levels table tm_missing_data module. Added checkbox tm_g_scatterplot toggle option free x y axis scales whenever faceting arguments provided. Used browser-side processing tm_data_table Buttons extension download full table. Added example advanced usage DT module.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/news/index.html","id":"bug-fixes-0-2-12","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"teal.modules.general 0.2.12","text":"Fixed error tm_variable_browser selected column logical(1). Fixed bugs modules‚Äô vignette examples.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/news/index.html","id":"miscellaneous-0-2-12","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"teal.modules.general 0.2.12","text":"Added R version requirement R >= 3.6. Removed input_id argument teal.transform::data_merge_module calls modules. Refactored defunct teal.devel::data_extract_input replacement teal.transform::data_extract_ui. Updated teal.transform::data_merge_srv use dplyr::inner_join instead dplyr::left_join tm_outliers module. Removed overlay statistics table tm_g_distribution module. Removed dependency test.nest package. Removed dependency utils.nest package replaced functions equivalents checkmate package.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/news/index.html","id":"new-features-0-2-11","dir":"Changelog","previous_headings":"","what":"New features","title":"teal.modules.general 0.2.11","text":"new module, tm_file_viewer, added visualization static files. new module, tm_g_distribution, added distribution analysis.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/news/index.html","id":"bug-fixes-0-2-11","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"teal.modules.general 0.2.11","text":"Fixed bar plot order factor variables tm_variable_browser.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/news/index.html","id":"tm_variable_browser-0-2-11","dir":"Changelog","previous_headings":"Enhancements","what":"tm_variable_browser","title":"teal.modules.general 0.2.11","text":"Added sparkline support Date/POSIXct/POSIXlt variable types. Fixed histograms contain least two bars.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/news/index.html","id":"tm_outliers-0-2-11","dir":"Changelog","previous_headings":"Enhancements","what":"tm_outliers","title":"teal.modules.general 0.2.11","text":"Added filter_spec support. Simplified returned R code. Support select_spec categorical variables.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/news/index.html","id":"tm_g_scatterplotmatrix-0-2-11","dir":"Changelog","previous_headings":"Enhancements","what":"tm_g_scatterplotmatrix","title":"teal.modules.general 0.2.11","text":"Added ordered select input support. Decoupled dataset list variables list parameters.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/news/index.html","id":"tm_g_association-0-2-11","dir":"Changelog","previous_headings":"Enhancements","what":"tm_g_association","title":"teal.modules.general 0.2.11","text":"Added ordered select input support.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/news/index.html","id":"tm_t_crosstable-0-2-11","dir":"Changelog","previous_headings":"Enhancements","what":"tm_t_crosstable","title":"teal.modules.general 0.2.11","text":"Added ordered select input support.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/news/index.html","id":"tm_g_scatterplot-0-2-11","dir":"Changelog","previous_headings":"Enhancements","what":"tm_g_scatterplot","title":"teal.modules.general 0.2.11","text":"Modified trend line feature scatterplot display raw equation equal actual y value actual x values plugged .","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/news/index.html","id":"miscellaneous-0-2-11","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"teal.modules.general 0.2.11","text":"Updated LICENCE README new package references. Added error_on_lint: TRUE .lintr. Updated quantile type = 2 argument tm_variable_browser line STREAM.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/news/index.html","id":"enhancements-0-2-10","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"teal.modules.general 0.2.10","text":"Refactored internal code modules optimize performance. Refactored tm_g_scatterplot compute trend line statistics using ggpmisc::stat_poly_eq simplify code labels group plot. Refactored tm_g_scatterplot enable filtering via Encoding Panel using new filter_spec functionality. Added support logical variables tm_variable_browser. Updated tm_outliers handle non-CDISC datasets. Updated UI tm_variable_browser factor character variables 30 levels. Updated sparklines remove NA values numeric variables. Added checkbox display number observations plot tm_g_scatterplot. Added validation statements tm_g_scatterplot handling users choosing one facet variable. Improved performance tm_variable_browser efficient sparkline generation. Added html code type datasets labels inside tm_missing_data. Improved styling tool tips tm_a_regression, tm_missing_data tm_variable_browser.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/news/index.html","id":"enhancements-0-2-9","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"teal.modules.general 0.2.9","text":"Added download, enlarge resize graph options tm_variable_browser module. Added download expand options table tm_t_crosstable. Enabled selection custom datasets tm_variable_browser datasets_selected argument. Allowed dataset variables used grouping variables variable levels tab tm_missing_data, just selected displayed rows table. Enabled brushing points NA categories facetting tm_g_scatterplot.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/news/index.html","id":"bug-fixes-0-2-9","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"teal.modules.general 0.2.9","text":"Added persistence number entries displayed data tables. Removed ‚Äòtreat variable factor‚Äô checkbox tm_variable_browser graph shown. Fixed DT length reset tm_variable_browser ‚ÄúShow parent dataset variables‚Äù checkbox tick.","code":""},{"path":[]},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/news/index.html","id":"tm_outliers-0-2-8","dir":"Changelog","previous_headings":"New Module","what":"tm_outliers","title":"teal.modules.general 0.2.8","text":"Added new module tm_outliers analyze outliers datasets.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/news/index.html","id":"tm_g_scatterplot-0-2-8","dir":"Changelog","previous_headings":"Enhancements","what":"tm_g_scatterplot","title":"teal.modules.general 0.2.8","text":"Added max_deg optional argument scatterplot allow users choose maximum smoothing degree trend line. Added column row facetting functionality scatterplot. Added possibility specify type join tm_t_crosstable. Incorporate missings resulting non inner join.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/news/index.html","id":"bug-fixes-0-2-8","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"teal.modules.general 0.2.8","text":"Fixed edge case errors tm_missing_data caused input dataset categorical variables data.frame instead tibble. Fixed tm_a_pca biplot plot coloring factor/character/numeric < 6 values variable. Fixed typo outlier definition tm_variable_browser.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/news/index.html","id":"miscellaneous-0-2-8","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"teal.modules.general 0.2.8","text":"Sparklines longer shown numeric variables 100000 rows. Colors legend plot. Replaced \"Show variables ADSL\" checkbox general \"Show parent dataset variables\". Capitalize default module labels. outputs tm_missing_data conditional data CDISC data. Added pre_output post_output arguments tm_data_table, tm_missing_data, tm_variable_browser. Fixed issue tm_data_table selecting ‚Äúshow distinct rows‚Äù variable names non-alphanumeric characters.","code":""},{"path":[]},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/news/index.html","id":"tm_variable_browser-0-2-7","dir":"Changelog","previous_headings":"Enhancements","what":"tm_variable_browser","title":"teal.modules.general 0.2.7","text":"Introduced sparklines quick, inline variable summaries. Added option remove outliers. Histograms statistics tables now displayed variables type Date, POSIXct POSIXlt. Character variable summary statistics tables now displayed decreasing order occurrences instead alphabetical. Display number non-missing rows n statistics table numeric variables. Added ability treat numeric variables categorical. tm_variable_browser shows 30 50 levels divided 2 columns character/factor variables 30 unique levels.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/news/index.html","id":"tm_a_regression-0-2-7","dir":"Changelog","previous_headings":"Enhancements","what":"tm_a_regression","title":"teal.modules.general 0.2.7","text":"Added support outlier labels tm_a_regression provided additional optional argument, default_outlier_label can used specify default column used label outliers.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/news/index.html","id":"tm_g_scatterplot-0-2-7","dir":"Changelog","previous_headings":"Enhancements","what":"tm_g_scatterplot","title":"teal.modules.general 0.2.7","text":"Implemented trend line. Added marginal density plots. Added option display rug plot axes. Added shape point color arguments. latter users colourpicker::colourInput. Added size_by variable scatterplot allowed point size mapped numeric variable.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/news/index.html","id":"tm_missing_data-0-2-7","dir":"Changelog","previous_headings":"Enhancements","what":"tm_missing_data","title":"teal.modules.general 0.2.7","text":"Added bar chart missing data combination plot. Removed keys missing data combinations plot selected.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/news/index.html","id":"tm_g_bivariate-0-2-7","dir":"Changelog","previous_headings":"Enhancements","what":"tm_g_bivariate","title":"teal.modules.general 0.2.7","text":"Bivariate plots two continuous variables now allow adding lines. Show labels x axis selecting categorical variable fixed issues deselecting variables datasets encodings panel (including addition meaningful warnings).","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/news/index.html","id":"tm_a_pca-0-2-7","dir":"Changelog","previous_headings":"Enhancements","what":"tm_a_pca","title":"teal.modules.general 0.2.7","text":"Updated include Plot settings Plot specific settings.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/news/index.html","id":"miscellaneous-0-2-7","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"teal.modules.general 0.2.7","text":"Integrated is_single_dataset argument data_extract_input function calls simplify encodings panel UI. Moved code argument cdisc_dataset (cdisc_data) examples vignettes. Require ggmosaic version >= 0.3.0.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/news/index.html","id":"tealmodulesgeneral-026","dir":"Changelog","previous_headings":"","what":"teal.modules.general 0.2.6","title":"teal.modules.general 0.2.6","text":"Adds additional plot settings themes tm_g_association, tm_g_response, tm_g_scatterplot, well point size opacity settings tm_g_association tm_g_scatterplot. Replace pickerInput optionalSelectInput tm_data_table. Adds new facet parameter tm_g_bivariate specify whether facet encodings elements visible user default. Replace plot_with_height module new plot_with_settings module. Missing data module now uses chunks get reproducible R code. New theme missing data module new label positioning. tm_data_table: allow developers pass arguments DT::dataTable use pickerInput select variables. tm_g_response new argument count_labels. Counts might assessed frequency plot . Moved missing data module summary plot footer elements tool tip encodings panels. Replaced base plots tm_a_regression ggplot2. Added optional slider adjust width plot_with_settings. Handle Inf data gracefully. tm_variable_browser now outputs summary table factors missing values.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/news/index.html","id":"tealmodulesgeneral-025","dir":"Changelog","previous_headings":"","what":"teal.modules.general 0.2.5","title":"teal.modules.general 0.2.5","text":"Adds ggplot call inside chunks modules. Pass dataname get_rcode_srv. Uses utils function standardize plot label generation. Improved handling variable labels. Removed ‚ÄúAdd filter variable‚Äù button variable browser module. Scatterplot matrix module now automatically converts characters factors message.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/news/index.html","id":"tealmodulesgeneral-024","dir":"Changelog","previous_headings":"","what":"teal.modules.general 0.2.4","title":"teal.modules.general 0.2.4","text":"New PCA module. Documentation fix cross table module. Display variable labels drop-menu data table (#393). Optional subsetting ordering datasets tm_data_table. Use teal.code::chunks_push_data_merge include merge code reproducibility code. consistent coloring behavior bivariate plots. Updates missing data module. Updated graph axis labels following modules: bivariate plot, missing data, response plot, regression module, scatterplot, scatterplot matrix. Simplify scatterplot matrix display plot within one dataset .","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/news/index.html","id":"tealmodulesgeneral-023","dir":"Changelog","previous_headings":"","what":"teal.modules.general 0.2.3","title":"teal.modules.general 0.2.3","text":"Fixed naming tm_variable_browser. Correlation added Scatter Plot Matrix. Opacity slider added tm_bivariate. Fixes due bug teal.devel#313. Performance enhancements missing data module. Fix bug reactivity scatterplot matrix module.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/news/index.html","id":"tealmodulesgeneral-022","dir":"Changelog","previous_headings":"","what":"teal.modules.general 0.2.2","title":"teal.modules.general 0.2.2","text":"New module summarize missing data. Refactor variable browser module. Correct display density / frequency option bivariate plot.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/news/index.html","id":"tealmodulesgeneral-021","dir":"Changelog","previous_headings":"","what":"teal.modules.general 0.2.1","title":"teal.modules.general 0.2.1","text":"Fix magrittr loading reproducible code.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/news/index.html","id":"tealmodulesgeneral-020","dir":"Changelog","previous_headings":"","what":"teal.modules.general 0.2.0","title":"teal.modules.general 0.2.0","text":"Refactor functions data extract data merge. Create sample_app.R demonstrating teal.modules.general modules. Rename tm_table tm_cross_table. Include show R code modules. Merge tm_cross_table tm_t_percentage_table one module.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/release-candidate/news/index.html","id":"tealmodulesgeneral-010","dir":"Changelog","previous_headings":"","what":"teal.modules.general 0.1.0","title":"teal.modules.general 0.1.0","text":"Initial release.","code":""}]
