% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tm_outliers.R
\name{tm_outliers}
\alias{tm_outliers}
\title{\code{teal} module: Outliers analysis}
\usage{
tm_outliers(
  label = "Outliers Module",
  outlier_var,
  categorical_var = NULL,
  ggtheme = c("gray", "bw", "linedraw", "light", "dark", "minimal", "classic", "void"),
  ggplot2_args = teal.widgets::ggplot2_args(),
  plot_height = c(600, 200, 2000),
  plot_width = NULL,
  pre_output = NULL,
  post_output = NULL
)
}
\arguments{
\item{label}{(\code{character(1)}) Label shown in the navigation item for the module or module group.
For \code{modules()} defaults to \code{"root"}. See \code{Details}.}

\item{outlier_var}{(\code{data_extract_spec} or \code{list} of multiple \code{data_extract_spec})
Specifies variable(s) to be analyzed for outliers.}

\item{categorical_var}{(\code{data_extract_spec} or \code{list} of multiple \code{data_extract_spec}) optional,
specifies the categorical variable(s) to split the selected outlier variables on.}

\item{ggtheme}{(\code{character}) optional, \code{ggplot2} theme to be used by default. Defaults to \code{"gray"}.}

\item{ggplot2_args}{(\code{ggplot2_args}) optional, object created by \code{\link[teal.widgets:ggplot2_args]{teal.widgets::ggplot2_args()}}
with settings for all the plots or named list of \code{ggplot2_args} objects for plot-specific settings.
The argument is merged with options variable \code{teal.ggplot2_args} and default module setup.

List names should match the following: \code{c("default", "Boxplot","Density Plot","Cumulative Distribution Plot")}.

For more details see the vignette: \code{vignette("custom-ggplot2-arguments", package = "teal.widgets")}.}

\item{plot_height}{(\code{numeric}) optional, specifies the plot height as a three-element vector of
\code{value}, \code{min}, and \code{max} intended for use with a slider UI element.}

\item{plot_width}{(\code{numeric}) optional, specifies the plot width as a three-element vector of
\code{value}, \code{min}, and \code{max} for a slider encoding the plot width.}

\item{pre_output}{(\code{shiny.tag}) optional, text or UI element to be displayed before the module's output,
providing context or a title.
with text placed before the output to put the output into context. For example a title.}

\item{post_output}{(\code{shiny.tag}) optional, text or UI element to be displayed after the module's output,
adding context or further instructions. Elements like \code{shiny::helpText()} are useful.}
}
\value{
Object of class \code{teal_module} to be used in \code{teal} applications.
}
\description{
Module to analyze and identify outliers using different methods
such as IQR, Z-score, and Percentiles, and offers visualizations including
box plots, density plots, and cumulative distribution plots to help interpret the outliers.
}
\examples{
# general data example
data <- teal_data()
data <- within(data, {
  CO2 <- CO2
  CO2[["primary_key"]] <- seq_len(nrow(CO2))
})
datanames(data) <- "CO2"
join_keys(data) <- join_keys(join_key("CO2", "CO2", "primary_key"))

vars <- choices_selected(variable_choices(data[["CO2"]], c("Plant", "Type", "Treatment")))

app <- init(
  data = data,
  modules = modules(
    tm_outliers(
      outlier_var = list(
        data_extract_spec(
          dataname = "CO2",
          select = select_spec(
            label = "Select variable:",
            choices = variable_choices(data[["CO2"]], c("conc", "uptake")),
            selected = "uptake",
            multiple = FALSE,
            fixed = FALSE
          )
        )
      ),
      categorical_var = list(
        data_extract_spec(
          dataname = "CO2",
          filter = filter_spec(
            vars = vars,
            choices = value_choices(data[["CO2"]], vars$selected),
            selected = value_choices(data[["CO2"]], vars$selected),
            multiple = TRUE
          )
        )
      )
    )
  )
)
if (interactive()) {
  shinyApp(app$ui, app$server)
}

# CDISC data example
data <- teal_data()
data <- within(data, {
  ADSL <- rADSL
})
datanames(data) <- "ADSL"
join_keys(data) <- default_cdisc_join_keys[datanames(data)]

fact_vars_adsl <- names(Filter(isTRUE, sapply(data[["ADSL"]], is.factor)))
vars <- choices_selected(variable_choices(data[["ADSL"]], fact_vars_adsl))

app <- init(
  data = data,
  modules = modules(
    tm_outliers(
      outlier_var = list(
        data_extract_spec(
          dataname = "ADSL",
          select = select_spec(
            label = "Select variable:",
            choices = variable_choices(data[["ADSL"]], c("AGE", "BMRKR1")),
            selected = "AGE",
            multiple = FALSE,
            fixed = FALSE
          )
        )
      ),
      categorical_var = list(
        data_extract_spec(
          dataname = "ADSL",
          filter = filter_spec(
            vars = vars,
            choices = value_choices(data[["ADSL"]], vars$selected),
            selected = value_choices(data[["ADSL"]], vars$selected),
            multiple = TRUE
          )
        )
      )
    )
  )
)
if (interactive()) {
  shinyApp(app$ui, app$server)
}

}
\section{Examples in Shinylive}{
\describe{
  \item{example-1}{
    \href{https://shinylive.io/r/app/#code=NobwRAdghgtgpmAXGKAHVA6ASmANGAYwHsIAXOMpMAGwEsAjAJykYE8AKcqajGIgEwCu1OAGcMAcwpxm1AJQAdCLTIyoBUrQBucAAQAeALS6AZoIgbaJdnN0AVLAFUAokqUBiXVIhrqu-lCkULpwAB6wqCJKAUEGxlzUAPoxUDbRgcFGugDutKQAFirsKbi6IEq6ugDCAPIATHHV9RVNdcDACmCojLQwLKyJANZwrJ0AumONonAAjokiEOwQjETZ7LV1cooQAL7bKdDwosUZtlmdG51KAFZEKkMjxylnxrf3w6zHbxAPHBfNeF0-zqnVKnW6vX6v06WzcEC0LFEjQI+TuBDEiWmIg0cH47ARPSg9BEiRRaLEJyC7WB4zGpQI7E6AAVqFAyKCgWA7KxUHAOZ07Iw4IF4OywFttko0KhGio8oyIJUUroALz+DK4Fp8IQiJFq7XCCktSqkGCJIiCUh0GTHY2VXQWq20GSJAmq3R0USkBX233qoKJMKkZgaTG8hl2v3+tmwPRqml4SN+rFwDTulOh0Thn1Rv2s+hwPzxsAAZULqdIugJtCJIkQoKTUbJtHReqrLBrxLgpNRLYpKWpYEuYAm9MZhBIBH5YEEqCCwxhck1itzvoz5H47s6s-nfMTK9XlRgwk0kTjugAYgBBAAyJecy8P9pMtFCuPd17vrgPue2q7-fpLkmBCBHAEhED0IFJG6aqet6jbRoGoTBuopBhqmOargcsZbkOAKPoeL7UOQjDukRJHoRGP6rgSba0QRT7Nq27oItQgjdkx-YZIOw6ju2jCiAAJOuuJAdRuYiZuaqsexPbkk83EdHhIIjnS-FCZJYlPkeJ60Ge7oOC4CGVABUamfa5kAds2y0CYujsCoJGodocA2LY5QrqIhQQKwV7oOw0qCYItClIF0yMDojDbDsShgDsYxAA}{Open in Shinylive}
    \if{html}{\out{<script type="text/javascript">$(function() {  var if_pkgdown = [...document.scripts].filter(x => x.src.includes("pkgdown.js")).length > 0;  if (if_pkgdown) {    $("iframe.iframe_shinylive").css("width", "150\%");  }});</script>}}
    \if{html}{\out{<iframe class="iframe_shinylive" src="https://shinylive.io/r/app/#code=NobwRAdghgtgpmAXGKAHVA6ASmANGAYwHsIAXOMpMAGwEsAjAJykYE8AKcqajGIgEwCu1OAGcMAcwpxm1AJQAdCLTIyoBUrQBucAAQAeALS6AZoIgbaJdnN0AVLAFUAokqUBiXVIhrqu-lCkULpwAB6wqCJKAUEGxlzUAPoxUDbRgcFGugDutKQAFirsKbi6IEq6ugDCAPIATHHV9RVNdcDACmCojLQwLKyJANZwrJ0AumONonAAjokiEOwQjETZ7LV1cooQAL7bKdDwosUZtlmdG51KAFZEKkMjxylnxrf3w6zHbxAPHBfNeF0-zqnVKnW6vX6v06WzcEC0LFEjQI+TuBDEiWmIg0cH47ARPSg9BEiRRaLEJyC7WB4zGpQI7E6AAVqFAyKCgWA7KxUHAOZ07Iw4IF4OywFttko0KhGio8oyIJUUroALz+DK4Fp8IQiJFq7XCCktSqkGCJIiCUh0GTHY2VXQWq20GSJAmq3R0USkBX233qoKJMKkZgaTG8hl2v3+tmwPRqml4SN+rFwDTulOh0Thn1Rv2s+hwPzxsAAZULqdIugJtCJIkQoKTUbJtHReqrLBrxLgpNRLYpKWpYEuYAm9MZhBIBH5YEEqCCwxhck1itzvoz5H47s6s-nfMTK9XlRgwk0kTjugAYgBBAAyJecy8P9pMtFCuPd17vrgPue2q7-fpLkmBCBHAEhED0IFJG6aqet6jbRoGoTBuopBhqmOargcsZbkOAKPoeL7UOQjDukRJHoRGP6rgSba0QRT7Nq27oItQgjdkx-YZIOw6ju2jCiAAJOuuJAdRuYiZuaqsexPbkk83EdHhIIjnS-FCZJYlPkeJ60Ge7oOC4CGVABUamfa5kAds2y0CYujsCoJGodocA2LY5QrqIhQQKwV7oOw0qCYItClIF0yMDojDbDsShgDsYxAA" style="height: 800px; width: 100\%; border: 1px solid rgba(0,0,0,0.175); border-radius: .375rem; position: relative; z-index: 1"></iframe>}}
  }
  \item{example-2}{
    \href{https://shinylive.io/r/app/#code=NobwRAdghgtgpmAXGKAHVA6ASmANGAYwHsIAXOMpMAGwEsAjAJykYE8AKcqajGIgEwCu1OAGcMAcwpxm1AJQAdCLTIyoBUrQBucAAQAeALS6AZoIgbaJdnN0AVLAFUAokqUBiXQGEAIgEkAZS9dfihSKF04AA9YVBElUPCDYy5qAH1EqBsEsIijXQB3WlIACxV2TNxdECVdXQBBHwCAGWTdRkaWpQBfRQhM6HhRCtzbfIUwTuaJpQArIhU0gGs4VmHMseN+OBMoYVI0gn5aUQI0+cWVteAB2DER8LkAXTcIXY00rRZRNKh+UWobUG9wAYrRqORGOwTg4XFVRGg4hxMsBgBMphMnk8qicMO9SERGHJiUovoxRG0CCUFgQxGlRHARBo4Px2GTaFB6CJDtTaLT1rlUeimtMwFiqvjPt9fv95H0lIi2ipiuxaiFcroALzq8K4NV8IQiCnag3Ce5quqkGBpIiCUh0GTDC11XS2+20GRSxha3R0USkVUQF3BnVQNLRUjMD6iVBwAiBkMh27wH3Crp4Z2JhlM0g+7Nxg4xuMJxMh6icxmpsABRkF3TszkiRATPVB0vBqk0sQ+htcuA8rsC8JCyYizHY3Tx9EAcVceF0EwAQgBZLAAaSwAEYJsTW+3g-nmfwq-VZy3M6WYPtaHE9NqQfVmgFnHv93UTLQoiyfQ+n642+2fSARecivh2YRwBIhJ8twXo+n6AYXnUmThlEkbqIWsZTgBpbJneC6jumYGlh+EIyD6pGQvSWElm+ZLGvW3zEe2nZ8t22pfNQgj9qx-IPFAI4YmKE70QAJIe5D8KBSEhhJ34cdw3EDmxQ4CWihGiuKjHkuJtZHtJOHtleEI3iIPqwv+b5AaW1nBrZujWX0fS0CYujQqoUaaDoNi2DUbaiGUECsPU6DsIiomCLQVThQyjA6ESPRKGA3RPEAA}{Open in Shinylive}
    \if{html}{\out{<script type="text/javascript">$(function() {  var if_pkgdown = [...document.scripts].filter(x => x.src.includes("pkgdown.js")).length > 0;  if (if_pkgdown) {    $("iframe.iframe_shinylive").css("width", "150\%");  }});</script>}}
    \if{html}{\out{<iframe class="iframe_shinylive" src="https://shinylive.io/r/app/#code=NobwRAdghgtgpmAXGKAHVA6ASmANGAYwHsIAXOMpMAGwEsAjAJykYE8AKcqajGIgEwCu1OAGcMAcwpxm1AJQAdCLTIyoBUrQBucAAQAeALS6AZoIgbaJdnN0AVLAFUAokqUBiXQGEAIgEkAZS9dfihSKF04AA9YVBElUPCDYy5qAH1EqBsEsIijXQB3WlIACxV2TNxdECVdXQBBHwCAGWTdRkaWpQBfRQhM6HhRCtzbfIUwTuaJpQArIhU0gGs4VmHMseN+OBMoYVI0gn5aUQI0+cWVteAB2DER8LkAXTcIXY00rRZRNKh+UWobUG9wAYrRqORGOwTg4XFVRGg4hxMsBgBMphMnk8qicMO9SERGHJiUovoxRG0CCUFgQxGlRHARBo4Px2GTaFB6CJDtTaLT1rlUeimtMwFiqvjPt9fv95H0lIi2ipiuxaiFcroALzq8K4NV8IQiCnag3Ce5quqkGBpIiCUh0GTDC11XS2+20GRSxha3R0USkVUQF3BnVQNLRUjMD6iVBwAiBkMh27wH3Crp4Z2JhlM0g+7Nxg4xuMJxMh6icxmpsABRkF3TszkiRATPVB0vBqk0sQ+htcuA8rsC8JCyYizHY3Tx9EAcVceF0EwAQgBZLAAaSwAEYJsTW+3g-nmfwq-VZy3M6WYPtaHE9NqQfVmgFnHv93UTLQoiyfQ+n642+2fSARecivh2YRwBIhJ8twXo+n6AYXnUmThlEkbqIWsZTgBpbJneC6jumYGlh+EIyD6pGQvSWElm+ZLGvW3zEe2nZ8t22pfNQgj9qx-IPFAI4YmKE70QAJIe5D8KBSEhhJ34cdw3EDmxQ4CWihGiuKjHkuJtZHtJOHtleEI3iIPqwv+b5AaW1nBrZujWX0fS0CYujQqoUaaDoNi2DUbaiGUECsPU6DsIiomCLQVThQyjA6ESPRKGA3RPEAA" style="height: 800px; width: 100\%; border: 1px solid rgba(0,0,0,0.175); border-radius: .375rem; position: relative; z-index: 1"></iframe>}}
  }
}
}

