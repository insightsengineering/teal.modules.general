% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tm_outliers.R
\name{tm_outliers}
\alias{tm_outliers}
\title{Outliers Module}
\usage{
tm_outliers(
  label = "Outliers Module",
  outlier_var,
  categorical_var = NULL,
  ggtheme = c("gray", "bw", "linedraw", "light", "dark", "minimal", "classic", "void",
    "test"),
  ggplot2_args = teal.widgets::ggplot2_args(),
  plot_height = c(600, 200, 2000),
  plot_width = NULL,
  pre_output = NULL,
  post_output = NULL
)
}
\arguments{
\item{label}{(\code{character(1)}) Label shown in the navigation item for the module. Any label possible except
\code{"global_filters"} - read more in \code{mapping} argument of \link[teal]{teal_slices}.}

\item{outlier_var}{(\code{data_extract_spec} or \code{list} of multiple \code{data_extract_spec})
variable to consider for the outliers analysis.}

\item{categorical_var}{(\code{data_extract_spec} or \code{list} of multiple \code{data_extract_spec})
categorical factor to split the selected outlier variables on.}

\item{ggtheme}{optional, (\code{character}) \code{ggplot2} theme to be used by default.
One of \code{c("gray", "bw", "linedraw", "light", "dark", "minimal", "classic", "void", "test")}.
Each theme can be chosen by the user during the session. Defaults to \code{"gray"}.}

\item{ggplot2_args}{optional, (\code{ggplot2_args}) object created by \code{\link[teal.widgets:ggplot2_args]{teal.widgets::ggplot2_args()}}
with settings for all the plots or named list of \code{ggplot2_args} objects for plot-specific settings.
The argument is merged with options variable \code{teal.ggplot2_args} and default module setup.

List names should match the following: \code{c("default", "Boxplot","Density Plot","Cumulative Distribution Plot")}.

For more details see the vignette: \code{vignette("custom-ggplot2-arguments", package = "teal.widgets")}.}

\item{plot_height}{optional, (\code{numeric}) A vector of length three with \verb{c(value, min and max)}
for a slider encoding the plot height.}

\item{plot_width}{optional, (\code{numeric}) A vector of length three with \verb{c(value, min and max)}
for a slider encoding the plot width.}

\item{pre_output}{(\code{shiny.tag}, optional)\cr
with text placed before the output to put the output into context. For example a title.}

\item{post_output}{(\code{shiny.tag}, optional) with text placed after the output to put the output
into context. For example the \code{\link[shiny:helpText]{shiny::helpText()}} elements are useful.}
}
\description{
Module to analyze and identify outliers using different methods
}
\examples{

ADSL <- teal.modules.general::rADSL

fact_vars_adsl <- names(Filter(isTRUE, sapply(ADSL, is.factor)))
vars <- choices_selected(variable_choices(ADSL, fact_vars_adsl))

app <- teal::init(
  data = teal.data::cdisc_data(
    teal.data::cdisc_dataset("ADSL", ADSL, code = "ADSL <- teal.modules.general::rADSL"),
    check = TRUE
  ),
  modules = teal::modules(
    teal.modules.general::tm_outliers(
      outlier_var = list(
        teal.transform::data_extract_spec(
          dataname = "ADSL",
          select = select_spec(
            label = "Select variable:",
            choices = variable_choices(ADSL, c("AGE", "BMRKR1")),
            selected = "AGE",
            multiple = FALSE,
            fixed = FALSE
          )
        )
      ),
      categorical_var = list(
        teal.transform::data_extract_spec(
          dataname = "ADSL",
          filter = teal.transform::filter_spec(
            vars = vars,
            choices = value_choices(ADSL, vars$selected),
            selected = value_choices(ADSL, vars$selected),
            multiple = TRUE
          )
        )
      ),
      ggplot2_args = list(
        teal.widgets::ggplot2_args(
          labs = list(subtitle = "Plot generated by Outliers Module")
        )
      )
    )
  )
)
if (interactive()) {
  shinyApp(app$ui, app$server)
}

}
