% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tm_p_spiderplot.R
\name{tm_p_spiderplot}
\alias{tm_p_spiderplot}
\title{Spider Plot Module}
\usage{
tm_p_spiderplot(
  label = "Spiderplot",
  plot_dataname,
  time_var,
  value_var,
  subject_var,
  color_var,
  filter_event_var,
  size_var = NULL,
  tooltip_vars = NULL,
  point_colors = character(0),
  point_symbols = character(0),
  plot_height = c(600, 400, 1200)
)
}
\arguments{
\item{label}{(\code{character(1)}) Label shown in the navigation item for the module or module group.
For \code{modules()} defaults to \code{"root"}. See \code{Details}.}

\item{plot_dataname}{(\code{character(1)}) Name of the dataset to be used for plotting.}

\item{time_var}{(\code{character(1)}) Name of the numeric column in \code{plot_dataname} to be used as x-axis.}

\item{value_var}{(\code{character(1)}) Name of the numeric column in \code{plot_dataname} to be used as y-axis.}

\item{subject_var}{(\code{character(1)}) Name of the factor or character column in \code{plot_dataname}
to be used as grouping variable for displayed lines/points.}

\item{color_var}{(\code{character(1)}) Name of the factor or character column in \code{plot_dataname}
to be used to differentiate colors and symbols.}

\item{filter_event_var}{(\code{character(1)}) Name of the factor or character column in \code{plot_dataname}
to be used to filter the data. The plot will be updated with just the filtered data when the user
selects an event from the dropdown menu.}

\item{size_var}{(\code{character(1)} or \code{NULL}) If provided, this numeric column from the \code{plot_dataname}
will be used to determine the size of the points. If \code{NULL}, a fixed size is used.}

\item{tooltip_vars}{(\code{character} or \code{NULL}) A vector of column names to be displayed in the tooltip.
If \code{NULL}, default tooltip is created showing time, value, subject, and color variables.}

\item{point_colors}{(\verb{named character} or \code{NULL}) Valid color names or hex-colors named by levels of \code{color_var} column.
If \code{NULL}, default colors will be used.}

\item{point_symbols}{(\verb{named character} or \code{NULL}) Valid plotly symbol names named by levels of \code{color_var} column.
If \code{NULL}, default symbols will be used.}

\item{plot_height}{(\code{numeric}) optional, specifies the plot height as a three-element vector of
\code{value}, \code{min}, and \code{max} intended for use with a slider UI element.}
}
\value{
Object of class \code{teal_module} to be used in \code{teal} applications.
}
\description{
This module creates an interactive spider plot visualization that shows value development
over time grouped by subjects. The plot displays individual trajectories as connected
lines and points, with support for color coding and symbol differentiation. Optional
filtering by event variables allows dynamic data subsetting. The plot includes customizable
tooltips and point sizing based on data values.
}
\examples{
data <- teal_data() |>
  within({
    subjects <- data.frame(
      subject_var = c("A", "B", "C"),
      AGE = sample(30:100, 3),
      ARM = c("Combination", "Combination", "Placebo")
    )

    swimlane_ds <- data.frame(
      subject_var = sample(c("A", "B", "C"), 10, replace = TRUE),
      time_var = sample(1:100, 10, replace = TRUE),
      color_var = sample(c("CR", "PR", "SD", "PD"), 10, replace = TRUE)
    )

    spiderplot_ds <- data.frame(
      subject_var = sample(c("A", "B", "C"), 10, replace = TRUE),
      time_var = 1:10,
      filter_event_var = "response",
      color_var = sample(c("CR", "PR", "SD", "PD"), 10, replace = TRUE),
      value_var = sample(-50:100, 10, replace = TRUE)
    )

    waterfall_ds <- data.frame(
      subject_var = sample(c("A", "B", "C"), 10, replace = TRUE),
      value_var = sample(-20:90, 10, replace = TRUE),
      color_var = sample(c("CR", "PR", "SD", "PD"), 10, replace = TRUE)
    )
  })
join_keys(data) <- join_keys(
  join_key("subjects", "spiderplot_ds", keys = c(subject_var = "subject_var"))
)

app <- init(
  data = data,
  modules = modules(
    tm_p_spiderplot(
      plot_dataname = "spiderplot_ds",
      time_var = "time_var",
      value_var = "value_var",
      subject_var = "subject_var",
      filter_event_var = "filter_event_var",
      color_var = "color_var",
      point_colors = c(
        CR = "#FF0000", PR = "#00FF00", SD = "#0000FF", PD = "#FFFF00"
      ),
      point_symbols = c(
        CR = "circle", PR = "square", SD = "triangle-up", PD = "diamond"
      ),
      tooltip_vars = c("subject_var")
    )
  )
)

if (interactive()) {
  shinyApp(app$ui, app$server)
}

}
