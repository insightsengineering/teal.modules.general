% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tm_g_distribution.R
\name{tm_g_distribution}
\alias{tm_g_distribution}
\title{\code{teal} module: Distribution analysis}
\usage{
tm_g_distribution(
  label = "Distribution Module",
  dist_var = teal.transform::picks(teal.transform::datasets(),
    teal.transform::variables(is.numeric), teal.transform::values()),
  strata_var = NULL,
  group_var = NULL,
  freq = FALSE,
  ggtheme = c("gray", "bw", "linedraw", "light", "dark", "minimal", "classic", "void"),
  ggplot2_args = teal.widgets::ggplot2_args(),
  bins = c(30L, 1L, 100L),
  plot_height = c(600, 200, 2000),
  plot_width = NULL,
  pre_output = NULL,
  post_output = NULL,
  transformators = list(),
  decorators = list()
)
}
\arguments{
\item{label}{(\code{character(1)}) Label shown in the navigation item for the module or module group.
For \code{modules()} defaults to \code{"root"}. See \code{Details}.}

\item{dist_var}{(\code{picks} or \code{list} of multiple \code{picks})
Variable(s) for which the distribution will be analyzed.}

\item{strata_var}{(\code{picks} or \code{list} of multiple \code{picks})
Categorical variable used to split the distribution analysis.}

\item{group_var}{(\code{picks} or \code{list} of multiple \code{picks})
Variable used for faceting plot into multiple panels.}

\item{freq}{(\code{logical}) optional, whether to display frequency (\code{TRUE}) or density (\code{FALSE}).
Defaults to density (\code{FALSE}).}

\item{ggtheme}{(\code{character}) optional, \code{ggplot2} theme to be used by default. Defaults to \code{"gray"}.}

\item{ggplot2_args}{(\code{ggplot2_args}) optional, object created by \code{\link[teal.widgets:ggplot2_args]{teal.widgets::ggplot2_args()}} with settings for all the plots or named list of \code{ggplot2_args} objects for plot-specific settings. The argument is merged with options variable \code{teal.ggplot2_args} and default module setup.

List names should match the following: \code{c("default", "Histogram", "QQplot")}.

For more details see the vignette: \code{vignette("custom-ggplot2-arguments", package = "teal.widgets")}.}

\item{bins}{(\code{integer(1)} or \code{integer(3)}) optional,  specifies the number of bins for the histogram.
\itemize{
\item When the length of \code{bins} is one: The histogram bins will have a fixed size based on the \code{bins} provided.
\item When the length of \code{bins} is three: The histogram bins are dynamically adjusted based on vector of \code{value}, \code{min},
and \code{max}.
Defaults to \code{c(30L, 1L, 100L)}.
}}

\item{plot_height}{(\code{numeric}) optional, specifies the plot height as a three-element vector of
\code{value}, \code{min}, and \code{max} intended for use with a slider UI element.}

\item{plot_width}{(\code{numeric}) optional, specifies the plot width as a three-element vector of
\code{value}, \code{min}, and \code{max} for a slider encoding the plot width.}

\item{pre_output}{(\code{shiny.tag}) optional,\cr
with text placed before the output to put the output into context. For example a title.}

\item{post_output}{(\code{shiny.tag}) optional, with text placed after the output to put the output
into context. For example the \code{\link[shiny:helpText]{shiny::helpText()}} elements are useful.}

\item{transformators}{(\code{list} of \code{teal_transform_module}) that will be applied to transform module's data input.
To learn more check \code{vignette("transform-input-data", package = "teal")}.}

\item{decorators}{\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}
(named \code{list} of lists of \code{teal_transform_module}) optional,
decorator for tables or plots included in the module output reported.
The decorators are applied to the respective output objects.}
}
\value{
Object of class \code{teal_module} to be used in \code{teal} applications.
}
\description{
Module is designed to explore the distribution of a single variable within a given dataset.
It offers several tools, such as histograms, Q-Q plots, and various statistical tests to
visually and statistically analyze the variable's distribution.
}
\section{Decorating Module}{


This module generates the following objects, which can be modified in place using decorators::
\itemize{
\item \code{histogram_plot} (\code{ggplot})
\item \code{qq_plot} (\code{ggplot})
}

A Decorator is applied to the specific output using a named list of \code{teal_transform_module} objects.
The name of this list corresponds to the name of the output to which the decorator is applied.
See code snippet below:

\if{html}{\out{<div class="sourceCode">}}\preformatted{tm_g_distribution(
   ..., # arguments for module
   decorators = list(
     histogram_plot = teal_transform_module(...), # applied only to `histogram_plot` output
     qq_plot = teal_transform_module(...) # applied only to `qq_plot` output
   )
)
}\if{html}{\out{</div>}}

For additional details and examples of decorators, refer to the vignette
\code{vignette("decorate-module-output", package = "teal.modules.general")}.

To learn more please refer to the vignette
\code{vignette("transform-module-output", package = "teal")} or the \code{\link[teal:teal_transform_module]{teal::teal_transform_module()}} documentation.
}

\examples{
# general data example
data <- teal_data()
data <- within(data, {
  iris <- iris
})

app <- init(
  data = data,
  modules = list(
    tm_g_distribution(
      dist_var = teal.transform::picks(
        datasets("iris"),
        teal.transform::variables(is.numeric),
        teal.transform::values()
      )
    )
  )
)
if (interactive()) {
  shinyApp(app$ui, app$server)
}

# CDISC data example
data <- teal_data()
data <- within(data, {
  ADSL <- teal.data::rADSL
})
join_keys(data) <- default_cdisc_join_keys[names(data)]

app <- init(
  data = data,
  modules = modules(
    tm_g_distribution(
      dist_var = teal.transform::picks(
        datasets("ADSL"),
        teal.transform::variables(c("BMRKR1", "AGE")),
        values(multiple = FALSE)
      ),
      strata_var = teal.transform::picks(
        datasets("ADSL"),
        teal.transform::variables(c("ARM", "COUNTRY", "SEX"), selected = NULL)
      ),
      group_var = teal.transform::picks(
        datasets("ADSL"),
        teal.transform::variables(c("ARM", "COUNTRY", "SEX"), selected = NULL)
      )
    )
  )
)
if (interactive()) {
  shinyApp(app$ui, app$server)
}

}
\section{Examples in Shinylive}{
\describe{
  \item{example-1}{
    \href{https://shinylive.io/r/app/#code=NobwRAdghgtgpmAXGKAHVA6ASmANGAYwHsIAXOMpMAGwEsAjAJykYE8AKcqajGIgEwCu1OAGcMAcwpxm1AJQAdCLTIyoBUrQBucAAQAeALS6AZoIgbaJdnN0AVLAFUAokqUBiXVIhrqu-lCkULpwAB6wqCJKAUEGxlzUAPoxUDbRgcFGugDutKQAFirsKbi6IEq6urSMtKJxVTWiSgC+ihBKaKj1KnnsFf4ZugC8A0G4-XxCInUjdKKkfRCVlaQwiRLJtaQ19IKa1v3L-luJWizDugkY21AQoiZEjDCIiKi0BADWootHRymicFI3wUYGqtRBcnGS1+Kzg3GuzDuDyeLzONSg9Gm7FqGAggngNQIkMOvyuNyRj2eiDO1EEYjS0KObSZ-TabVoJl02NUzEsOhstnK0NEhQgrAAguh2J0ACSCWilWUAxg6RhtZpKMDNAC6QA}{Open in Shinylive}
    \if{html}{\out{<iframe class="iframe_shinylive" src="https://shinylive.io/r/app/#code=NobwRAdghgtgpmAXGKAHVA6ASmANGAYwHsIAXOMpMAGwEsAjAJykYE8AKcqajGIgEwCu1OAGcMAcwpxm1AJQAdCLTIyoBUrQBucAAQAeALS6AZoIgbaJdnN0AVLAFUAokqUBiXVIhrqu-lCkULpwAB6wqCJKAUEGxlzUAPoxUDbRgcFGugDutKQAFirsKbi6IEq6urSMtKJxVTWiSgC+ihBKaKj1KnnsFf4ZugC8A0G4-XxCInUjdKKkfRCVlaQwiRLJtaQ19IKa1v3L-luJWizDugkY21AQoiZEjDCIiKi0BADWootHRymicFI3wUYGqtRBcnGS1+Kzg3GuzDuDyeLzONSg9Gm7FqGAggngNQIkMOvyuNyRj2eiDO1EEYjS0KObSZ-TabVoJl02NUzEsOhstnK0NEhQgrAAguh2J0ACSCWilWUAxg6RhtZpKMDNAC6QA" style="height: 800px; width: 100vw; max-width: 1400px; border: 1px solid rgba(0,0,0,0.175); border-radius: .375rem; position: absolute; left: 50\%; margin-top: 30px; transform: translateX(-50\%); z-index: 1"></iframe>}}
    \if{html}{\out{<a style='height: 800px; display: block;'></a>}}
  }
  \item{example-2}{
    \href{https://shinylive.io/r/app/#code=NobwRAdghgtgpmAXGKAHVA6ASmANGAYwHsIAXOMpMAGwEsAjAJykYE8AKcqajGIgEwCu1OAGcMAcwpxm1AJQAdCLTIyoBUrQBucAAQAeALS6AZoIgbaJdnN0AVLAFUAokqUBiXQGEAIgEkAZS9dfihSKF04AA9YVBElUPCDYy5qAH1EqBsEsIijXQB3WlIACxV2TNxdECVdXQBBHwCAGWTdVIxMxERGRpalAF9FCAArIhU0gGs4VlEK3Nt8-jgTKGFSNIJ+WlECNLGJ6dngaHg5zLkAXTdodDaVYvZakNzdAF4X8NxnviERUXeul+wjETwgdTqpBgaQkGR2pEYDEEmmszwhIXhaS0LEBHQRUAgohMREYMG6qFoBEmczR6M+UFEcFINLAfWaCjAcm+4LpkLg3Aw+MJxNJ3WxiKg9H+7AITzAACEALJYADSWAAjByqhz6gBxVycrm09HY6iCUEwda0OJ6D4AMXqzQCzmGvKNPPRonx4SxOI+eOYwpJZMQFKpNI9dMyjOZcrZHPdvL5AqFRODYpYtEl0tlOqwiq1ug5XgA8o4AHIOACahY5zoAGgmqoyRBo4PxAeXHM1mq66Ym6RJGERBKhfYxcfyeKmRSGw9SwUn6TGWfHOdylwGCWnRYhxVmpaDc6z87WwKWK9Wzw2m7oW3A2x2Pl2e330W-dH3hsNaCZdOwVHIZhLB0GxbBqHlRDKCBWHqdB2DQVAABJBFoKpEKQxlGB0RhhgGJQwAGS4gA}{Open in Shinylive}
    \if{html}{\out{<iframe class="iframe_shinylive" src="https://shinylive.io/r/app/#code=NobwRAdghgtgpmAXGKAHVA6ASmANGAYwHsIAXOMpMAGwEsAjAJykYE8AKcqajGIgEwCu1OAGcMAcwpxm1AJQAdCLTIyoBUrQBucAAQAeALS6AZoIgbaJdnN0AVLAFUAokqUBiXQGEAIgEkAZS9dfihSKF04AA9YVBElUPCDYy5qAH1EqBsEsIijXQB3WlIACxV2TNxdECVdXQBBHwCAGWTdVIxMxERGRpalAF9FCAArIhU0gGs4VlEK3Nt8-jgTKGFSNIJ+WlECNLGJ6dngaHg5zLkAXTdodDaVYvZakNzdAF4X8NxnviERUXeul+wjETwgdTqpBgaQkGR2pEYDEEmmszwhIXhaS0LEBHQRUAgohMREYMG6qFoBEmczR6M+UFEcFINLAfWaCjAcm+4LpkLg3Aw+MJxNJ3WxiKg9H+7AITzAACEALJYADSWAAjByqhz6gBxVycrm09HY6iCUEwda0OJ6D4AMXqzQCzmGvKNPPRonx4SxOI+eOYwpJZMQFKpNI9dMyjOZcrZHPdvL5AqFRODYpYtEl0tlOqwiq1ug5XgA8o4AHIOACahY5zoAGgmqoyRBo4PxAeXHM1mq66Ym6RJGERBKhfYxcfyeKmRSGw9SwUn6TGWfHOdylwGCWnRYhxVmpaDc6z87WwKWK9Wzw2m7oW3A2x2Pl2e330W-dH3hsNaCZdOwVHIZhLB0GxbBqHlRDKCBWHqdB2DQVAABJBFoKpEKQxlGB0RhhgGJQwAGS4gA" style="height: 800px; width: 100vw; max-width: 1400px; border: 1px solid rgba(0,0,0,0.175); border-radius: .375rem; position: absolute; left: 50\%; margin-top: 30px; transform: translateX(-50\%); z-index: 1"></iframe>}}
    \if{html}{\out{<a style='height: 800px; display: block;'></a>}}
  }
}
}

