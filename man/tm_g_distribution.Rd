% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tm_g_distribution.R
\name{tm_g_distribution}
\alias{tm_g_distribution}
\title{Distribution Module}
\usage{
tm_g_distribution(
  label = "Distribution Module",
  dist_var,
  strata_var = NULL,
  group_var = NULL,
  freq = FALSE,
  bins = c(30L, 1L, 100L),
  plot_height = c(600, 200, 2000),
  plot_width = NULL,
  pre_output = NULL,
  post_output = NULL
)
}
\arguments{
\item{label}{(\code{character}) Label shown in the navigation item for the module.}

\item{dist_var}{(`data_extract_spec` or `list` of multiple `data_extract_spec`)
variable to consider for the distribution analysis.}

\item{strata_var}{(`data_extract_spec` or `list` of multiple `data_extract_spec`)
categorical variable to split the selected distribution variable on.}

\item{group_var}{optional, (`data_extract_spec` or `list` of multiple `data_extract_spec`)
Which data columns to use for faceting rows.}

\item{freq}{optional, (`logical`) Whether to display frequency (`TRUE`) or density (`FALSE`).
Defaults to density (`FALSE`).}

\item{bins}{optional, (`integer`) If scalar then the histogram bins will have a fixed size.
If a slider should be presented to adjust the number of histogram bins dynamically then it can be a
vector of length three with `c(value, min, max)`.
Defaults to `c(30L, 1L, 100L)`.}

\item{plot_height}{optional, (\code{numeric}) A vector of length three with \code{c(value, min and max)}
for a slider encoding the plot height.}

\item{plot_width}{optional, (\code{numeric}) A vector of length three with \code{c(value, min and max)}
for a slider encoding the plot width.}

\item{pre_output}{optional, \code{shiny.tag} with text placed before the
output to put the output into context. For example a title.}

\item{post_output}{optional, \code{shiny.tag} with text placed after the
output to put the output into context. For example the
\code{\link[shiny]{helpText}} elements are useful.}
}
\description{
Module to analyze and explore univariate variable distribution
}
\examples{
library(scda)
ADSL <- synthetic_cdisc_data("latest")$adsl
vars <- choices_selected(
  choices = variable_choices(ADSL)
)

dists <- choices_selected(
  choices = c("Exponential", "Gaussian", "Gamma", "Beta")
)
app <- init(
  data = cdisc_data(
    cdisc_dataset("ADSL", ADSL),
    code = "ADSL <- synthetic_cdisc_data(\"latest\")$adsl",
    check = FALSE
  ),
  modules = root_modules(
    tm_g_distribution(
      dist_var = data_extract_spec(
        dataname = "ADSL",
        select = select_spec(
          choices = variable_choices(ADSL, c("AGE", "BMRKR1")),
          selected = "BMRKR1",
          multiple = FALSE,
          fixed = FALSE
        )
      ),
      strata_var = data_extract_spec(
        dataname = "ADSL",
        select = select_spec(
          choices = variable_choices(ADSL, c("SEX", "COUNTRY", "ARM")),
          selected = NULL,
          multiple = FALSE,
          fixed = FALSE
        )
      ),
      group_var = data_extract_spec(
        dataname = "ADSL",
        select = select_spec(
          choices = variable_choices(ADSL, c("SEX", "COUNTRY", "ARM")),
          selected = NULL,
          multiple = FALSE,
          fixed = FALSE
        )
      )
    )
  )
)
\dontrun{
shinyApp(app$ui, app$server)
}
}
