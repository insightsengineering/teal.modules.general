% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tm_g_response.R
\name{tm_g_response}
\alias{tm_g_response}
\title{Response Plots}
\usage{
tm_g_response(
  label = "Response Plot",
  response,
  x,
  row_facet = NULL,
  col_facet = NULL,
  coord_flip = FALSE,
  count_labels = TRUE,
  rotate_xaxis_labels = FALSE,
  freq = FALSE,
  plot_height = c(600, 400, 5000),
  plot_width = NULL,
  ggtheme = c("gray", "bw", "linedraw", "light", "dark", "minimal", "classic", "void",
    "test"),
  ggplot2_args = teal.widgets::ggplot2_args(),
  pre_output = NULL,
  post_output = NULL
)
}
\arguments{
\item{label}{(\code{character(1)}) Label shown in the navigation item for the module. Any label possible except
\code{"global_filters"} - read more in \code{mapping} argument of \link[teal]{teal_slices}.}

\item{response}{(\code{data_extract_spec} or \code{list} of multiple \code{data_extract_spec})
Which variable to use as the response. You can define one fixed column by using the
setting \code{fixed = TRUE} inside the \code{select_spec}.
\code{data_extract_spec} must not allow multiple selection in this case.}

\item{x}{(\code{data_extract_spec} or \code{list} of multiple \code{data_extract_spec})
Which variable to use on the X-axis of the response plot. Allow the user to select multiple
columns from the \code{data} allowed in teal.
\code{data_extract_spec} must not allow multiple selection in this case.}

\item{row_facet}{optional, (\code{data_extract_spec} or \code{list} of multiple \code{data_extract_spec})
Which data columns to use for faceting rows.}

\item{col_facet}{optional, (\code{data_extract_spec} or \code{list} of multiple \code{data_extract_spec})
Which data to use for faceting columns.}

\item{coord_flip}{optional, (\code{logical}) Whether to flip coordinates between \code{x} and \code{response}.}

\item{count_labels}{optional, (\code{logical}) Whether to show count labels.
Defaults to \code{TRUE}.}

\item{rotate_xaxis_labels}{optional, (\code{logical}) Whether to rotate plot X axis labels. Does not
rotate by default (\code{FALSE}).}

\item{freq}{optional, (\code{logical}) Whether to display frequency (\code{TRUE}) or density (\code{FALSE}).
Defaults to density (\code{FALSE}).}

\item{plot_height}{optional, (\code{numeric}) A vector of length three with \verb{c(value, min and max)}
for a slider encoding the plot height.}

\item{plot_width}{optional, (\code{numeric}) A vector of length three with \verb{c(value, min and max)}
for a slider encoding the plot width.}

\item{ggtheme}{optional, (\code{character}) \code{ggplot2} theme to be used by default.
One of \code{c("gray", "bw", "linedraw", "light", "dark", "minimal", "classic", "void", "test")}.
Each theme can be chosen by the user during the session. Defaults to \code{"gray"}.}

\item{ggplot2_args}{(\code{ggplot2_args}) object created by \code{\link[teal.widgets:ggplot2_args]{teal.widgets::ggplot2_args()}}
with settings for the module plot.
The argument is merged with options variable \code{teal.ggplot2_args} and default module setup.

For more details see the vignette: \code{vignette("custom-ggplot2-arguments", package = "teal.widgets")}}

\item{pre_output}{(\code{shiny.tag}, optional)\cr
with text placed before the output to put the output into context. For example a title.}

\item{post_output}{(\code{shiny.tag}, optional) with text placed after the output to put the output
into context. For example the \code{\link[shiny:helpText]{shiny::helpText()}} elements are useful.}
}
\description{
Response Plots
}
\note{
For more examples, please see the vignette "Using response plot" via
\code{vignette("using-response-plot", package = "teal.modules.general")}.
}
\examples{
# Response plot with selected response (BMRKR1) and selected x variable (RACE)
library(nestcolor)

ADSL <- teal.modules.general::rADSL

app <- teal::init(
  data = teal.data::cdisc_data(
    teal.data::cdisc_dataset("ADSL", ADSL, code = "ADSL <- teal.modules.general::rADSL"),
    check = TRUE
  ),
  modules = teal::modules(
    teal.modules.general::tm_g_response(
      label = "Response Plots",
      response = teal.transform::data_extract_spec(
        dataname = "ADSL",
        select = teal.transform::select_spec(
          label = "Select variable:",
          choices = teal.transform::variable_choices(ADSL, c("BMRKR2", "COUNTRY")),
          selected = "BMRKR2",
          multiple = FALSE,
          fixed = FALSE
        )
      ),
      x = teal.transform::data_extract_spec(
        dataname = "ADSL",
        select = teal.transform::select_spec(
          label = "Select variable:",
          choices = teal.transform::variable_choices(ADSL, c("SEX", "RACE")),
          selected = "RACE",
          multiple = FALSE,
          fixed = FALSE
        )
      ),
      ggplot2_args = teal.widgets::ggplot2_args(
        labs = list(subtitle = "Plot generated by Response Module")
      )
    )
  )
)
if (interactive()) {
  shinyApp(app$ui, app$server)
}
}
