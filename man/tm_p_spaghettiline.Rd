% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tm_p_spaghettiline.R
\name{tm_p_spaghettiline}
\alias{tm_p_spaghettiline}
\title{Spaghetti + Line Plot Module}
\usage{
tm_p_spaghettiline(
  label = "Scatter + Line Plot",
  plot_dataname,
  group_var,
  x_var,
  y_var,
  color_var,
  tooltip_vars = NULL,
  point_colors = character(0),
  transformators = list(),
  reference_lines = NULL
)
}
\arguments{
\item{label}{(\code{character(1)}) Label shown in the navigation item for the module.}

\item{plot_dataname}{(\code{character(1)}) Name of the dataset to be used for plotting.}

\item{group_var}{(\code{character(1)}) Name of the grouping variable used for creating individual
trajectories in the spaghetti plot and grouping in the line plot.}

\item{x_var}{(\code{character(1)}) Name of the variable to be used for x-axis in both plots.}

\item{y_var}{(\code{character(1)}) Name of the variable to be used for y-axis in both plots.}

\item{color_var}{(\code{character(1)}) Name of the variable to be used for coloring points and lines in both plots.}

\item{point_colors}{(\verb{named character}) Valid color names or hex-colors named by levels of color_var column.}

\item{transformators}{(\code{list}) Named list of transformator functions.}

\item{reference_lines}{(\code{list} or \code{NULL}) Reference lines specification for the line plot.}
}
\description{
This module creates a combined visualization with both spaghetti plot and line plot views.
It displays a spaghetti plot where users can select points, and the selection is reflected
in a corresponding line plot below. The spaghetti plot shows individual trajectories for
each group over time.
}
\details{
The spaghetti plot connects points within each \code{group_var} level to show individual trajectories.
The line plot uses the same \code{group_var} for grouping and updates to show only the selected data
when brushing occurs in the spaghetti plot.
}
\examples{
data <- teal_data() |>
  within({
    df <- data.frame(
      subject_id = rep(c("S1", "S2", "S3", "S4"), each = 4),
      time_point = rep(c(0, 30, 60, 90), 4),
      response = rnorm(16, 15, 3),
      treatment = rep(c("A", "B", "A", "B"), each = 4)
    )
  })

app <- init(
  data = data,
  modules = modules(
    tm_p_spaghettiline(
      label = "Spaghetti + Line Plot",
      plot_dataname = "df",
      group_var = "subject_id",
      x_var = "time_point",
      y_var = "response",
      color_var = "treatment",
      tooltip_vars = c("subject_id", "treatment")
    )
  )
)

if (interactive()) {
  shinyApp(app$ui, app$server)
}

}
