% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tm_data_table.R
\name{tm_data_table}
\alias{tm_data_table}
\title{Data Table Viewer Teal Module}
\usage{
tm_data_table(
  label = "Data Table",
  variables_selected = list(),
  datasets_selected = character(0),
  dt_args = list(),
  dt_options = list(searching = FALSE, pageLength = 30, lengthMenu = c(5, 15, 30, 100),
    scrollX = TRUE),
  pre_output = NULL,
  post_output = NULL
)
}
\arguments{
\item{label}{(\code{character}) Label shown in the navigation item for the module.}

\item{variables_selected}{(\code{list}) A named list of character vectors of the variables (i.e. columns)
which should be initially shown for each dataset. Names of list elements should correspond to the names
of the datasets available in the app. If no entry is specified for a dataset, the first six variables from that
dataset will initially be shown.}

\item{datasets_selected}{(\code{character}) A vector of datasets which should be
shown and in what order. Names in the vector have to correspond with datasets names.
If vector of length zero (default) then all datasets are shown.}

\item{dt_args}{(named \code{list}) Additional arguments to be passed to \code{DT::datatable}
(must not include \code{data} or \code{options}).}

\item{dt_options}{(named \code{list}) The \code{options} argument to \code{DT::datatable}. By default
\code{list(searching = FALSE, pageLength = 30, lengthMenu = c(5, 15, 30, 100), scrollX = TRUE)}}

\item{pre_output}{optional, \code{shiny.tag} with text placed before the
output to put the output into context. For example a title.}

\item{post_output}{optional, \code{shiny.tag} with text placed after the
output to put the output into context. For example the
\code{\link[shiny]{helpText}} elements are useful.}
}
\description{
A data table viewer shows the data using a paginated table.
}
\details{
The \code{DT} package has an option \code{DT.TOJSON_ARGS} to show \code{Inf} and \code{NA} in data tables. If this is something
you require then set \code{options(DT.TOJSON_ARGS =  list(na = "string"))} before running the module.
Note though that sorting of numeric columns with \code{NA}/\code{Inf} will be lexicographic not numerical.
}
\examples{
library(scda)

ADSL <- synthetic_cdisc_data("latest")$adsl

app <- init(
  data = cdisc_data(
    cdisc_dataset("ADSL", ADSL, code = "ADSL <- synthetic_cdisc_data(\"latest\")$adsl"),
    check = TRUE
  ),
  modules = modules(
    tm_data_table(
      variables_selected = list(ADSL = c("STUDYID", "USUBJID", "SUBJID", "SITEID", "AGE", "SEX")),
      dt_args = list(caption = "ADSL Table Caption")
    )
  )
)
\dontrun{
shinyApp(app$ui, app$server)
}

# two-datasets example
library(scda)

ADSL <- synthetic_cdisc_data("latest")$adsl
ADTTE <- synthetic_cdisc_data("latest")$adtte

app <- init(
  data = cdisc_data(
    cdisc_dataset("ADSL", ADSL, code = "ADSL <- synthetic_cdisc_data(\"latest\")$adsl"),
    cdisc_dataset("ADTTE", ADTTE, code = "ADTTE <- synthetic_cdisc_data(\"latest\")$adtte"),
    check = TRUE
  ),
  modules = modules(
    tm_data_table(
      variables_selected = list(
        ADSL = c("STUDYID", "USUBJID", "SUBJID", "SITEID", "AGE", "SEX"),
        ADTTE = c(
          "STUDYID", "USUBJID", "SUBJID", "SITEID",
          "PARAM", "PARAMCD", "ARM", "ARMCD", "AVAL", "CNSR"
        )
      )
    )
  )
)
\dontrun{
shinyApp(app$ui, app$server)
}

# datasets: subsetting or changing order of datasets inside tm_data_table
library(scda)

ADSL <- synthetic_cdisc_data("latest")$adsl
ADLB <- synthetic_cdisc_data("latest")$adlb
ADTTE <- synthetic_cdisc_data("latest")$adtte

app <- init(
  data = cdisc_data(
    cdisc_dataset("ADSL", ADSL, code = "ADSL <- synthetic_cdisc_data(\"latest\")$adsl"),
    cdisc_dataset("ADLB", ADLB, code = "ADLB <- synthetic_cdisc_data(\"latest\")$adlb"),
    cdisc_dataset("ADTTE", ADTTE, code = "ADTTE <- synthetic_cdisc_data(\"latest\")$adtte"),
    check = TRUE
  ),
  modules = modules(
    tm_data_table(
      variables_selected = list(
        ADSL = c("STUDYID", "USUBJID", "SUBJID", "SITEID", "AGE", "SEX"),
        ADLB = c(
          "STUDYID", "USUBJID", "SUBJID", "SITEID",
          "PARAM", "PARAMCD", "AVISIT", "AVISITN", "AVAL", "CHG"
        )
      ),
      datasets_selected = c("ADTTE", "ADLB", "ADSL")
    )
  )
)
\dontrun{
shinyApp(app$ui, app$server)
}

# advanced usage of DT options and extensions
library(scda)

ADSL <- synthetic_cdisc_data("latest")$adsl
ADTTE <- synthetic_cdisc_data("latest")$adtte

app <- init(
  data = cdisc_data(
    cdisc_dataset("ADSL", ADSL, code = "ADSL <- synthetic_cdisc_data(\"latest\")$adsl"),
    cdisc_dataset("ADTTE", ADTTE, code = "ADTTE <- synthetic_cdisc_data(\"latest\")$adtte"),
    check = TRUE
  ),
  modules = modules(
    tm_data_table(
      dt_args = list(extensions = c("Buttons", "ColReorder", "FixedHeader")),
      dt_options = list(
        searching = FALSE,
        pageLength = 30,
        lengthMenu = c(5, 15, 25, 50, 100),
        scrollX = TRUE,
        dom = "lBrtip",
        buttons = c("copy", "csv", "excel", "pdf", "print"),
        colReorder = TRUE,
        fixedHeader = TRUE
      )
    )
  )
)
\dontrun{
shinyApp(app$ui, app$server)
}
}
