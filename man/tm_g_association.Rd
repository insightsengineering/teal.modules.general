% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tm_g_association.R
\name{tm_g_association}
\alias{tm_g_association}
\title{\code{teal} module: Stack plots of variables and show association with reference variable}
\usage{
tm_g_association(
  label = "Association",
  ref,
  vars,
  show_association = TRUE,
  plot_height = c(600, 400, 5000),
  plot_width = NULL,
  distribution_theme = c("gray", "bw", "linedraw", "light", "dark", "minimal", "classic",
    "void"),
  association_theme = c("gray", "bw", "linedraw", "light", "dark", "minimal", "classic",
    "void"),
  pre_output = NULL,
  post_output = NULL,
  ggplot2_args = teal.widgets::ggplot2_args()
)
}
\arguments{
\item{label}{(\code{character(1)}) Label shown in the navigation item for the module or module group.
For \code{modules()} defaults to \code{"root"}. See \code{Details}.}

\item{ref}{(\code{data_extract_spec} or \code{list} of multiple \code{data_extract_spec})
Reference variable, must accepts a \code{data_extract_spec} with \code{select_spec(multiple = FALSE)}
to ensure single selection option.}

\item{vars}{(\code{data_extract_spec} or \code{list} of multiple \code{data_extract_spec})
Variables to be associated with the reference variable.}

\item{show_association}{(\code{logical}) optional, whether show association of \code{vars}
with reference variable. Defaults to \code{TRUE}.}

\item{plot_height}{(\code{numeric}) optional, specifies the plot height as a three-element vector of
\code{value}, \code{min}, and \code{max} intended for use with a slider UI element.}

\item{plot_width}{(\code{numeric}) optional, specifies the plot width as a three-element vector of
\code{value}, \code{min}, and \code{max} for a slider encoding the plot width.}

\item{distribution_theme, association_theme}{(\code{character}) optional, \code{ggplot2} themes to be used by default.
Default to \code{"gray"}.}

\item{pre_output}{(\code{shiny.tag}) optional, text or UI element to be displayed before the module's output,
providing context or a title.
with text placed before the output to put the output into context. For example a title.}

\item{post_output}{(\code{shiny.tag}) optional, text or UI element to be displayed after the module's output,
adding context or further instructions. Elements like \code{shiny::helpText()} are useful.}

\item{ggplot2_args}{(\code{ggplot2_args}) optional, object created by \code{\link[teal.widgets:ggplot2_args]{teal.widgets::ggplot2_args()}}
with settings for all the plots or named list of \code{ggplot2_args} objects for plot-specific settings.
The argument is merged with options variable \code{teal.ggplot2_args} and default module setup.

List names should match the following: \code{c("default", "Bivariate1", "Bivariate2")}.

For more details see the vignette: \code{vignette("custom-ggplot2-arguments", package = "teal.widgets")}.}
}
\value{
Object of class \code{teal_module} to be used in \code{teal} applications.
}
\description{
Module provides functionality for visualizing the distribution of variables and
their association with a reference variable.
It supports configuring the appearance of the plots, including themes and whether to show associations.
}
\note{
For more examples, please see the vignette "Using association plot" via
\code{vignette("using-association-plot", package = "teal.modules.general")}.
}
\examples{
# general data example
data <- teal_data()
data <- within(data, {
  require(nestcolor)
  CO2 <- CO2
  factors <- names(Filter(isTRUE, vapply(CO2, is.factor, logical(1L))))
  CO2[factors] <- lapply(CO2[factors], as.character)
})
datanames(data) <- c("CO2")

app <- init(
  data = data,
  modules = modules(
    tm_g_association(
      ref = data_extract_spec(
        dataname = "CO2",
        select = select_spec(
          label = "Select variable:",
          choices = variable_choices(data[["CO2"]], c("Plant", "Type", "Treatment")),
          selected = "Plant",
          fixed = FALSE
        )
      ),
      vars = data_extract_spec(
        dataname = "CO2",
        select = select_spec(
          label = "Select variables:",
          choices = variable_choices(data[["CO2"]], c("Plant", "Type", "Treatment")),
          selected = "Treatment",
          multiple = TRUE,
          fixed = FALSE
        )
      )
    )
  )
)
if (interactive()) {
  shinyApp(app$ui, app$server)
}

# CDISC data example
data <- teal_data()
data <- within(data, {
  require(nestcolor)
  ADSL <- rADSL
})
datanames(data) <- "ADSL"
join_keys(data) <- default_cdisc_join_keys[datanames(data)]

app <- init(
  data = data,
  modules = modules(
    tm_g_association(
      ref = data_extract_spec(
        dataname = "ADSL",
        select = select_spec(
          label = "Select variable:",
          choices = variable_choices(
            data[["ADSL"]],
            c("SEX", "RACE", "COUNTRY", "ARM", "STRATA1", "STRATA2", "ITTFL", "BMRKR2")
          ),
          selected = "RACE",
          fixed = FALSE
        )
      ),
      vars = data_extract_spec(
        dataname = "ADSL",
        select = select_spec(
          label = "Select variables:",
          choices = variable_choices(
            data[["ADSL"]],
            c("SEX", "RACE", "COUNTRY", "ARM", "STRATA1", "STRATA2", "ITTFL", "BMRKR2")
          ),
          selected = "BMRKR2",
          multiple = TRUE,
          fixed = FALSE
        )
      )
    )
  )
)
if (interactive()) {
  shinyApp(app$ui, app$server)
}

}
\section{Examples in Shinylive}{
\describe{
  \item{example-1}{
    \href{https://shinylive.io/r/app/#code=NobwRAdghgtgpmAXGKAHVA6ASmANGAYwHsIAXOMpMAGwEsAjAJykYE8AKcqajGIgEwCu1OAGcMAcwpxm1AJQAdCLTIyoBUrQBucAAQAeALS6AZoIgbaJdnN0AVLAFUAokqUBiXVIhrqu-lCkULpwAB6wqCJKAUEGxlzUAPoxUDbRgcFGugDutKQAFirsKbi6IEq6uoxwAI6CtNXsPqKkxNREjIoQlQDCAPIATHG6-QMVpuqkHaLD0PCi7ABitNTkjOy0og4upVpokRyjpZsYJpMdpe0StATc7ACMADJyL129g8BnGtMAusPU+2ohw+XymjFEP1KUHEBHyLEmMi6AF8uik5mJihlbFkCOwFGBRviukp9sMVHk8d1-BldABealBXDjPhCEQzeks4QY8aVUgwRISRLQ0REAi0QJWCCUyoyqpwEx0hlQRJhUjMDSJUSoOC4nmypXoxX4wl4PWy0RwEQaRUWq2kTXa3VU-UygH0S1GsAAZUtOtIuj2jHF9BEiHxTOdLt0sKINzEisDwZEiRjcYWKWAwGNg3xP0h0bxYAACgCyOHdPi7KxteXK9VAvAy2AXhGozLbX64PxPSWoE3W23TLRQl3FYsAIKPL2uSOyt76uQD2WB9lKlWhNWTB066VRtGwPT07NjU2z9u+630jsarU7s36t0eo-ei-+xNQENiMOnwfR-Kxgh43pd9PxTf800xIJM2PXN811YtS1IWswCrGs8ArFD6z5CgkObRd73NV9R2fOwsMbXClyjGBhE0SJD3sJxnEol0TGHYjdAnKcZzbec5z1ecui6WgFQ2VR1U0HQbFscoqVEQoIFYcd0HYfYABJ6ihdBVItRgdE6JQkSUMAkR+IA}{Open in Shinylive}
    \if{html}{\out{<script type="text/javascript">$(function() {  var if_pkgdown = [...document.scripts].filter(x => x.src.includes("pkgdown.js")).length > 0;  if (if_pkgdown) {    $("iframe.iframe_shinylive").css("width", "150\%");  }});</script>}}
    \if{html}{\out{<iframe class="iframe_shinylive" src="https://shinylive.io/r/app/#code=NobwRAdghgtgpmAXGKAHVA6ASmANGAYwHsIAXOMpMAGwEsAjAJykYE8AKcqajGIgEwCu1OAGcMAcwpxm1AJQAdCLTIyoBUrQBucAAQAeALS6AZoIgbaJdnN0AVLAFUAokqUBiXVIhrqu-lCkULpwAB6wqCJKAUEGxlzUAPoxUDbRgcFGugDutKQAFirsKbi6IEq6uoxwAI6CtNXsPqKkxNREjIoQlQDCAPIATHG6-QMVpuqkHaLD0PCi7ABitNTkjOy0og4upVpokRyjpZsYJpMdpe0StATc7ACMADJyL129g8BnGtMAusPU+2ohw+XymjFEP1KUHEBHyLEmMi6AF8uik5mJihlbFkCOwFGBRviukp9sMVHk8d1-BldABealBXDjPhCEQzeks4QY8aVUgwRISRLQ0REAi0QJWCCUyoyqpwEx0hlQRJhUjMDSJUSoOC4nmypXoxX4wl4PWy0RwEQaRUWq2kTXa3VU-UygH0S1GsAAZUtOtIuj2jHF9BEiHxTOdLt0sKINzEisDwZEiRjcYWKWAwGNg3xP0h0bxYAACgCyOHdPi7KxteXK9VAvAy2AXhGozLbX64PxPSWoE3W23TLRQl3FYsAIKPL2uSOyt76uQD2WB9lKlWhNWTB066VRtGwPT07NjU2z9u+630jsarU7s36t0eo-ei-+xNQENiMOnwfR-Kxgh43pd9PxTf800xIJM2PXN811YtS1IWswCrGs8ArFD6z5CgkObRd73NV9R2fOwsMbXClyjGBhE0SJD3sJxnEol0TGHYjdAnKcZzbec5z1ecui6WgFQ2VR1U0HQbFscoqVEQoIFYcd0HYfYABJ6ihdBVItRgdE6JQkSUMAkR+IA" style="height: 800px; width: 100\%; border: 1px solid rgba(0,0,0,0.175); border-radius: .375rem; position: relative; z-index: 1"></iframe>}}
  }
  \item{example-2}{
    \href{https://shinylive.io/r/app/#code=NobwRAdghgtgpmAXGKAHVA6ASmANGAYwHsIAXOMpMAGwEsAjAJykYE8AKcqajGIgEwCu1OAGcMAcwpxm1AJQAdCLTIyoBUrQBucAAQAeALS6AZoIgbaJdnN0AVLAFUAokqUBiXQGEAIgEkAZS9dfihSKF04AA9YVBElUPCDYy5qAH1EqBsEsIijXQB3WlIACxV2TNxdECVdXUY4AEdBWgb2CDFSYmoiRkUIOoBBHwCAGWT64bGlAF9+zOh4UQrc23yFMCnRjaUAKyIVNIBrOFZlzLXjfjgTKGFSNIJ+WlECNP3Dk7PgBdgxFfCcgAum5oOgJipiuxaiFcroALyw8K4GF8IQiUQI3Ro4T-GF1UgwNISNJQUSiIgEWhhKwQaEDOqMhomLGZNLRUjMDRpUSoOAEemMoVIqCLPSIjZbDYohnC3SiOAiDRYhVKh68-mCuWM6hQeiKrEbAKK-mkXRaFjU+giRDS-HagglA4EMRYi2MK0iR5O2gu5b27Ui4DASUjbZgIFAmWBoUCo3OAAa0t0Gywgy8rjwKbAXgA8o4AHIOACayclWAAsmWwAEHIM7IMAIzV2tphsAJmrfjsdgAYuGqhsAEIVrAAaSwnbA-Rjujk0ZjqtNcH4hrAaYzdtl2pMtCiK6xvcGowCrm3QpnwvnAfNLExiLZHK56r5cfPjN+8DXUrwN7qS+VREAJfTU-x1PUDQlGsTWVd1PTEW1f3fWMfT9N1LT1L1HWdPFkOFTJg1DaYIyjMDY2hGtE2rDdM0HHN8yLLBSyzcsqxYms6wbZt2NbetBinOjuz7AdsxHcdJw2S9A2vPD-xg8hVygsSJwEsjsXuWg4nFewnGcBdA13fdFN0I8TzPaSbykucYX6fpaBZdgVHIZ9tDgGxbBqBlRDKCBWEGdB2DQVAABIWiqILgoVRgdD6WYlDAGYgSAA}{Open in Shinylive}
    \if{html}{\out{<script type="text/javascript">$(function() {  var if_pkgdown = [...document.scripts].filter(x => x.src.includes("pkgdown.js")).length > 0;  if (if_pkgdown) {    $("iframe.iframe_shinylive").css("width", "150\%");  }});</script>}}
    \if{html}{\out{<iframe class="iframe_shinylive" src="https://shinylive.io/r/app/#code=NobwRAdghgtgpmAXGKAHVA6ASmANGAYwHsIAXOMpMAGwEsAjAJykYE8AKcqajGIgEwCu1OAGcMAcwpxm1AJQAdCLTIyoBUrQBucAAQAeALS6AZoIgbaJdnN0AVLAFUAokqUBiXQGEAIgEkAZS9dfihSKF04AA9YVBElUPCDYy5qAH1EqBsEsIijXQB3WlIACxV2TNxdECVdXUY4AEdBWgb2CDFSYmoiRkUIOoBBHwCAGWT64bGlAF9+zOh4UQrc23yFMCnRjaUAKyIVNIBrOFZlzLXjfjgTKGFSNIJ+WlECNP3Dk7PgBdgxFfCcgAum5oOgJipiuxaiFcroALyw8K4GF8IQiUQI3Ro4T-GF1UgwNISNJQUSiIgEWhhKwQaEDOqMhomLGZNLRUjMDRpUSoOAEemMoVIqCLPSIjZbDYohnC3SiOAiDRYhVKh68-mCuWM6hQeiKrEbAKK-mkXRaFjU+giRDS-HagglA4EMRYi2MK0iR5O2gu5b27Ui4DASUjbZgIFAmWBoUCo3OAAa0t0Gywgy8rjwKbAXgA8o4AHIOACayclWAAsmWwAEHIM7IMAIzV2tphsAJmrfjsdgAYuGqhsAEIVrAAaSwnbA-Rjujk0ZjqtNcH4hrAaYzdtl2pMtCiK6xvcGowCrm3QpnwvnAfNLExiLZHK56r5cfPjN+8DXUrwN7qS+VREAJfTU-x1PUDQlGsTWVd1PTEW1f3fWMfT9N1LT1L1HWdPFkOFTJg1DaYIyjMDY2hGtE2rDdM0HHN8yLLBSyzcsqxYms6wbZt2NbetBinOjuz7AdsxHcdJw2S9A2vPD-xg8hVygsSJwEsjsXuWg4nFewnGcBdA13fdFN0I8TzPaSbykucYX6fpaBZdgVHIZ9tDgGxbBqBlRDKCBWEGdB2DQVAABIWiqILgoVRgdD6WYlDAGYgSAA" style="height: 800px; width: 100\%; border: 1px solid rgba(0,0,0,0.175); border-radius: .375rem; position: relative; z-index: 1"></iframe>}}
  }
}
}

