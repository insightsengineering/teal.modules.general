% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tm_t_crosstable.R
\name{tm_t_crosstable}
\alias{tm_t_crosstable}
\title{\code{teal} module: Cross-table}
\usage{
tm_t_crosstable(
  label = "Cross Table",
  x = teal.transform::picks(teal.transform::datasets(), teal.transform::variables(choices
    = teal.transform::is_categorical(min.len = 2, max.len = 10), selected = 1L, multiple
    = TRUE, ordered = TRUE), teal.transform::values()),
  y,
  show_percentage = TRUE,
  show_total = TRUE,
  remove_zero_columns = FALSE,
  pre_output = NULL,
  post_output = NULL,
  basic_table_args = teal.widgets::basic_table_args(),
  transformators = list(),
  decorators = list()
)
}
\arguments{
\item{label}{(\code{character(1)}) Label shown in the navigation item for the module or module group.
For \code{modules()} defaults to \code{"root"}. See \code{Details}.}

\item{x}{(\code{picks} or \code{list} of \code{picks})
Object with all available choices with pre-selected option for variable X - row values.
In case of \code{picks} use \code{teal.transform::variables(..., ordered = TRUE)} if table elements should be
rendered according to selection order.}

\item{y}{(\code{picks} or \code{list} of multiple \code{picks})
Object with all available choices with pre-selected option for variable Y - column values.

\code{picks} must not allow multiple selection in this case.}

\item{show_percentage}{(\code{logical(1)})
Indicates whether to show percentages (relevant only when \code{x} is a \code{factor}).
Defaults to \code{TRUE}.}

\item{show_total}{(\code{logical(1)})
Indicates whether to show total column.
Defaults to \code{TRUE}.}

\item{remove_zero_columns}{(\code{logical(1)})
Indicates whether to remove columns that contain only zeros from the output table.
Defaults to \code{FALSE}.}

\item{pre_output}{(\code{shiny.tag}) optional, text or UI element to be displayed before the module's output,
providing context or a title.
with text placed before the output to put the output into context. For example a title.}

\item{post_output}{(\code{shiny.tag}) optional, text or UI element to be displayed after the module's output,
adding context or further instructions. Elements like \code{shiny::helpText()} are useful.}

\item{basic_table_args}{(\code{basic_table_args}) object created by \code{\link[teal.widgets:basic_table_args]{teal.widgets::basic_table_args()}}
with settings for the module table.
The argument is merged with options variable \code{teal.basic_table_args} and default module setup.

For more details see the vignette: \code{vignette("custom-basic-table-arguments", package = "teal.widgets")}}

\item{transformators}{(\code{list} of \code{teal_transform_module}) that will be applied to transform module's data input.
To learn more check \code{vignette("transform-input-data", package = "teal")}.}

\item{decorators}{\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}
(named \code{list} of lists of \code{teal_transform_module}) optional,
decorator for tables or plots included in the module output reported.
The decorators are applied to the respective output objects.}
}
\value{
Object of class \code{teal_module} to be used in \code{teal} applications.
}
\description{
Generates a simple cross-table of two variables from a dataset with custom
options for showing percentages and sub-totals.
}
\note{
For more examples, please see the vignette "Using cross table" via
\code{vignette("using-cross-table", package = "teal.modules.general")}.
}
\section{Table Settings}{

The module provides several table settings that can be adjusted:
\itemize{
\item \code{Show column percentage}: Shows column percentages when enabled
\item \code{Show total column}: Shows a total column when enabled
\item \code{Remove zero-only columns}: Removes columns that contain only zeros from the output table
}
}

\section{Decorating Module}{


This module generates the following objects, which can be modified in place using decorators:
\itemize{
\item \code{table} (\code{ElementaryTable} - output of \code{rtables::build_table})
}

A Decorator is applied to the specific output using a named list of \code{teal_transform_module} objects.
The name of this list corresponds to the name of the output to which the decorator is applied.
See code snippet below:

\if{html}{\out{<div class="sourceCode">}}\preformatted{tm_t_crosstable(
   ..., # arguments for module
   decorators = list(
     table = teal_transform_module(...) # applied to the `table` output
   )
)
}\if{html}{\out{</div>}}

For additional details and examples of decorators, refer to the vignette
\code{vignette("decorate-module-output", package = "teal.modules.general")}.

To learn more please refer to the vignette
\code{vignette("transform-module-output", package = "teal")} or the \code{\link[teal:teal_transform_module]{teal::teal_transform_module()}} documentation.
}

\examples{
# general data example
data <- teal_data()
data <- within(data, {
  mtcars <- mtcars
  for (v in c("cyl", "vs", "am", "gear")) {
    mtcars[[v]] <- as.factor(mtcars[[v]])
  }
  mtcars[["primary_key"]] <- seq_len(nrow(mtcars))
})
join_keys(data) <- join_keys(join_key("mtcars", "mtcars", "primary_key"))

app <- init(
  data = data,
  modules = modules(
    tm_t_crosstable(
      label = "Cross Table",
      x = teal.transform::picks(
        datasets("mtcars"),
        teal.transform::variables(
          choices = variable_choices(data[["mtcars"]], c("cyl", "vs", "am", "gear")),
          selected = c("cyl", "gear"),
          multiple = TRUE,
          ordered = TRUE,
          fixed = FALSE
        ),
        teal.transform::values()
      ),
      y = teal.transform::picks(
        datasets("mtcars"),
        teal.transform::variables(
          choices = variable_choices(data[["mtcars"]], c("cyl", "vs", "am", "gear")),
          selected = "vs",
          multiple = FALSE,
          fixed = FALSE
        ),
        teal.transform::values()
      )
    )
  )
)
if (interactive()) {
  shinyApp(app$ui, app$server)
}

# CDISC data example
data <- teal_data()
data <- within(data, {
  ADSL <- teal.data::rADSL
})
join_keys(data) <- default_cdisc_join_keys[names(data)]

app <- init(
  data = data,
  modules = modules(
    tm_t_crosstable(
      label = "Cross Table",
      x = teal.transform::picks(
        datasets("ADSL"),
        teal.transform::variables(
          choices = variable_choices(data[["ADSL"]], subset = function(data) {
            idx <- !vapply(data, inherits, logical(1), c("Date", "POSIXct", "POSIXlt"))
            return(names(data)[idx])
          }),
          selected = "COUNTRY",
          multiple = TRUE,
          ordered = TRUE,
          fixed = FALSE
        ),
        teal.transform::values()
      ),
      y = teal.transform::picks(
        datasets("ADSL"),
        teal.transform::variables(
          choices = variable_choices(data[["ADSL"]], subset = function(data) {
            idx <- vapply(data, is.factor, logical(1))
            return(names(data)[idx])
          }),
          selected = "SEX",
          multiple = FALSE,
          fixed = FALSE
        ),
        teal.transform::values()
      )
    )
  )
)
if (interactive()) {
  shinyApp(app$ui, app$server)
}

}
\section{Examples in Shinylive}{
\describe{
  \item{example-1}{
    \href{https://shinylive.io/r/app/#code=NobwRAdghgtgpmAXGKAHVA6ASmANGAYwHsIAXOMpMAGwEsAjAJykYE8AKcqajGIgEwCu1OAGcMAcwpxm1AJQAdCLTIyoBUrQBucAAQAeALS6AZoIgbaJdnN0AVLAFUAokqUBiXVIhrqu-lCkULpwAB6wqCJKAUEGxlzUAPoxUDbRgcFGugDutKQAFirsKbi6IEq6ujCkBCyicVU1dRWmRIy67Fq6KroE7AqErNQDpQNaoiO6A7CTA1IsA3K25RCVldW1jKLAwFoAunsNUOIm6qRt7Bt1O-t7iqu6AL4tV1s7A6iMtDAsrIkA1nBWAMDg1RHAAI6JEQQdgQRhEbKXJpbJZKR73ABWRBUAKBomKGVsWWxuMBrAJpIgeI4A1eEzwUzA9NmYE+31+NMW9yUaFQDRUeX6DxSugAvP4MrgXgJhGJxVVZSICS1KqQYIlSIkCAjRKIgvQRMK1mtqFB6HA-BKBgBhXX1OzmqJ4VVrUIKhIYUjMCCiExtGCIRCoWgEf4qh4myopcGkFXMlEMuTSyNRz3eqC+-2MQOILQsWhOsTGqMmgj5HEEeUS-NfIvaiuh4spd4JzYMg6lPoDAhDVnjVkzRlzOALMBLFOlk3gkQaOD8BXdwbDYdgeaMRaTqfrYSaSJ6CUOFxb7dtfgyecKo-OE9Tky0UKXiUAMQAggAZADKrlTJuTrpNdMfT9AMg3zahBGLe5S3-X9dFYD1Rx4DMs1A4NQ3DEtSxjOA436NtmnHW9AKQr1gOzXNa0LQ1iwAqNy0ratdCo+sGKbAkW2AOlExBPYu3w3sV1GMAB1XIdhPXbliKjGc4DnBdrREhlpJNGBd1ofcFTfL8bzok170fBTdG0789N0WDtyAzMQJzMDuEggloKjJzKic+57loEwOhUchmEsHQbGWFpREKCBWFfdB2D5AASQRaFKGLwUYHRGHuZ4IDAR49iAA}{Open in Shinylive}
    \if{html}{\out{<iframe class="iframe_shinylive" src="https://shinylive.io/r/app/#code=NobwRAdghgtgpmAXGKAHVA6ASmANGAYwHsIAXOMpMAGwEsAjAJykYE8AKcqajGIgEwCu1OAGcMAcwpxm1AJQAdCLTIyoBUrQBucAAQAeALS6AZoIgbaJdnN0AVLAFUAokqUBiXVIhrqu-lCkULpwAB6wqCJKAUEGxlzUAPoxUDbRgcFGugDutKQAFirsKbi6IEq6ujCkBCyicVU1dRWmRIy67Fq6KroE7AqErNQDpQNaoiO6A7CTA1IsA3K25RCVldW1jKLAwFoAunsNUOIm6qRt7Bt1O-t7iqu6AL4tV1s7A6iMtDAsrIkA1nBWAMDg1RHAAI6JEQQdgQRhEbKXJpbJZKR73ABWRBUAKBomKGVsWWxuMBrAJpIgeI4A1eEzwUzA9NmYE+31+NMW9yUaFQDRUeX6DxSugAvP4MrgXgJhGJxVVZSICS1KqQYIlSIkCAjRKIgvQRMK1mtqFB6HA-BKBgBhXX1OzmqJ4VVrUIKhIYUjMCCiExtGCIRCoWgEf4qh4myopcGkFXMlEMuTSyNRz3eqC+-2MQOILQsWhOsTGqMmgj5HEEeUS-NfIvaiuh4spd4JzYMg6lPoDAhDVnjVkzRlzOALMBLFOlk3gkQaOD8BXdwbDYdgeaMRaTqfrYSaSJ6CUOFxb7dtfgyecKo-OE9Tky0UKXiUAMQAggAZADKrlTJuTrpNdMfT9AMg3zahBGLe5S3-X9dFYD1Rx4DMs1A4NQ3DEtSxjOA436NtmnHW9AKQr1gOzXNa0LQ1iwAqNy0ratdCo+sGKbAkW2AOlExBPYu3w3sV1GMAB1XIdhPXbliKjGc4DnBdrREhlpJNGBd1ofcFTfL8bzok170fBTdG0789N0WDtyAzMQJzMDuEggloKjJzKic+57loEwOhUchmEsHQbGWFpREKCBWFfdB2D5AASQRaFKGLwUYHRGHuZ4IDAR49iAA" style="height: 800px; width: 100vw; max-width: 1400px; border: 1px solid rgba(0,0,0,0.175); border-radius: .375rem; position: absolute; left: 50\%; margin-top: 30px; transform: translateX(-50\%); z-index: 1"></iframe>}}
    \if{html}{\out{<a style='height: 800px; display: block;'></a>}}
  }
  \item{example-2}{
    \href{https://shinylive.io/r/app/#code=NobwRAdghgtgpmAXGKAHVA6ASmANGAYwHsIAXOMpMAGwEsAjAJykYE8AKcqajGIgEwCu1OAGcMAcwpxm1AJQAdCLTIyoBUrQBucAAQAeALS6AZoIgbaJdnN0AVLAFUAokqUBiXQGEAIgEkAZS9dfihSKF04AA9YVBElUPCDYy5qAH1EqBsEsIijXQB3WlIACxV2TNxdECVdXQBBHwCAGWTdVIxMxERGRpalAF9FCAArIhU0gGs4VlEK3Nt8-jgTKGFSNIJ+WlECNLGJ6dngaHg5zLkAXTdodDaVYvZakNzdAF4X8NxnviERUXeul+wjETwgdTqpBgaQ2BEYRFEonC9BEYIhEOoUHocGogIUYC88MR9ix8Twz3RUUBHVIzAgohMREYMG6qFoBEmcwp6M+UFEcFIXLAfWa+Lk33BPMhcG4GFpUHpjOZ3S0LFopNB3KlBBK4wIYkBqsY6pRcE2uvZoMywGA+JF+MulyqokE9H5pEBZgsmmsF2qWqlulo-Cp+QAhKr0NQOJUgxASjJiqIqtQiBJ2dx2ABGcW6AhPMA+MJwfFVfEABQA8gE-AANDSl3QV6t16ikMXDQM8xgCwSMCDsU5WhbAYNRS6dru6IYSqe6fkiDRwfh4gmVxwAOQcAE1SwH0TB1rQ4noPg4XLOp0zlj2V2enM5L12TLQosvAQAxerNAKuSVS8V93aGUeHlRUmRZRBVWoQRQUndFAP-CFWGpEC5TpBkINZdlOTRQNMndIV7TARCuxpDClUgo0TX+PCux1PUDQ+aiNXNRjzlyG07SaUUwEdZ1XXdT1zEsX0Fn9JCuzHNpIziGNciqHYMFWDQmRTNMM2obM5Hgqce1IPsByHDjwjkUcQwnIC6hnKz5xxOAlzvJswF-Ws90knlDzbY8RE-b9fyfQMXzfJyvx-P8u1IwNyIVTDlSg7hYLmXS6l0ydhmGWgTF0dgVHIZhLB0GxbBqSVRDKCBWHqdB2DQVAABJBFoKo6vq-lGB0RhhgGJQwAGS4gA}{Open in Shinylive}
    \if{html}{\out{<iframe class="iframe_shinylive" src="https://shinylive.io/r/app/#code=NobwRAdghgtgpmAXGKAHVA6ASmANGAYwHsIAXOMpMAGwEsAjAJykYE8AKcqajGIgEwCu1OAGcMAcwpxm1AJQAdCLTIyoBUrQBucAAQAeALS6AZoIgbaJdnN0AVLAFUAokqUBiXQGEAIgEkAZS9dfihSKF04AA9YVBElUPCDYy5qAH1EqBsEsIijXQB3WlIACxV2TNxdECVdXQBBHwCAGWTdVIxMxERGRpalAF9FCAArIhU0gGs4VlEK3Nt8-jgTKGFSNIJ+WlECNLGJ6dngaHg5zLkAXTdodDaVYvZakNzdAF4X8NxnviERUXeul+wjETwgdTqpBgaQ2BEYRFEonC9BEYIhEOoUHocGogIUYC88MR9ix8Twz3RUUBHVIzAgohMREYMG6qFoBEmcwp6M+UFEcFIXLAfWa+Lk33BPMhcG4GFpUHpjOZ3S0LFopNB3KlBBK4wIYkBqsY6pRcE2uvZoMywGA+JF+MulyqokE9H5pEBZgsmmsF2qWqlulo-Cp+QAhKr0NQOJUgxASjJiqIqtQiBJ2dx2ABGcW6AhPMA+MJwfFVfEABQA8gE-AANDSl3QV6t16ikMXDQM8xgCwSMCDsU5WhbAYNRS6dru6IYSqe6fkiDRwfh4gmVxwAOQcAE1SwH0TB1rQ4noPg4XLOp0zlj2V2enM5L12TLQosvAQAxerNAKuSVS8V93aGUeHlRUmRZRBVWoQRQUndFAP-CFWGpEC5TpBkINZdlOTRQNMndIV7TARCuxpDClUgo0TX+PCux1PUDQ+aiNXNRjzlyG07SaUUwEdZ1XXdT1zEsX0Fn9JCuzHNpIziGNciqHYMFWDQmRTNMM2obM5Hgqce1IPsByHDjwjkUcQwnIC6hnKz5xxOAlzvJswF-Ws90knlDzbY8RE-b9fyfQMXzfJyvx-P8u1IwNyIVTDlSg7hYLmXS6l0ydhmGWgTF0dgVHIZhLB0GxbBqSVRDKCBWHqdB2DQVAABJBFoKo6vq-lGB0RhhgGJQwAGS4gA" style="height: 800px; width: 100vw; max-width: 1400px; border: 1px solid rgba(0,0,0,0.175); border-radius: .375rem; position: absolute; left: 50\%; margin-top: 30px; transform: translateX(-50\%); z-index: 1"></iframe>}}
    \if{html}{\out{<a style='height: 800px; display: block;'></a>}}
  }
}
}

