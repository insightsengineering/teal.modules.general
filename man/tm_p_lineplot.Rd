% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tm_p_lineplot.R
\name{tm_p_lineplot}
\alias{tm_p_lineplot}
\title{Line Plot Module}
\usage{
tm_p_lineplot(
  label = "Line Plot",
  plot_dataname,
  x_var,
  y_var,
  color_var,
  group_var,
  colors = NULL,
  tooltip_vars = NULL,
  transformators = list(),
  reference_lines = NULL,
  activate_on_brushing = FALSE
)
}
\arguments{
\item{label}{(\code{character(1)}) Label shown in the navigation item for the module or module group.
For \code{modules()} defaults to \code{"root"}. See \code{Details}.}

\item{plot_dataname}{(\code{character(1)}) Name of the dataset to be used for plotting.}

\item{x_var}{(\code{character(1)}) Name of the variable to be used for x-axis (typically time).}

\item{y_var}{(\code{character(1)}) Name of the variable to be used for y-axis (typically a measurement).}

\item{color_var}{(\code{character(1)}) Name of the variable to be used for coloring points and lines.}

\item{group_var}{(\code{character(1)}) Name of the grouping variable that defines which points to connect with lines.}

\item{colors}{(\verb{named character} or \code{NULL}) Valid color names or hex-colors named by levels of \code{color_var} column.
If \code{NULL}, default colors will be used.}

\item{tooltip_vars}{(\code{character} or \code{NULL}) A vector of column names to be displayed in the tooltip.
If \code{NULL}, default tooltip is created showing group, x, y, and color variables.}

\item{transformators}{(\code{list}) Named list of transformator functions.}

\item{reference_lines}{(\code{list} or \code{NULL}) Reference lines specification for adding horizontal reference lines.}

\item{activate_on_brushing}{(\code{logical(1)}) Whether to activate the plot only when brushing occurs in another plot.}
}
\value{
Object of class \code{teal_module} to be used in \code{teal} applications.
}
\description{
This module creates an interactive line plot visualization that connects data points
within groups to show trends over time. The plot displays both line segments connecting
points and individual markers, with support for customizable tooltips and color coding.
Optional reference lines can be added to highlight specific values. The plot can be
activated by brushing events from other plots when used in combination modules.
}
\examples{
data <- teal_data() |>
  within({
    df <- data.frame(
      subject_id = rep(paste0("S", 1:8), each = 5),
      time_week = rep(c(0, 2, 4, 6, 8), 8),
      measurement = rnorm(40, 20, 4) + rep(c(0, 1, 2, 3, 4), 8),
      treatment = rep(c("Active", "Placebo"), each = 20),
      baseline = rep(rnorm(8, 18, 2), each = 5)
    )

    # Add labels
    attr(df$subject_id, "label") <- "Subject ID"
    attr(df$time_week, "label") <- "Time (weeks)"
    attr(df$measurement, "label") <- "Measurement Value"
    attr(df$treatment, "label") <- "Treatment Group"
    attr(df$baseline, "label") <- "Baseline Value"
  })

# Basic line plot example
app <- init(
  data = data,
  modules = modules(
    tm_p_lineplot(
      label = "Line Plot",
      plot_dataname = "df",
      x_var = "time_week",
      y_var = "measurement",
      color_var = "treatment",
      group_var = "subject_id",
      tooltip_vars = c("subject_id", "time_week")
    )
  )
)

if (interactive()) {
  shinyApp(app$ui, app$server)
}

}
