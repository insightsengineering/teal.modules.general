% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tm_g_scatterplotmatrix.R
\name{tm_g_scatterplotmatrix}
\alias{tm_g_scatterplotmatrix}
\title{\code{teal} module: Scatterplot matrix}
\usage{
tm_g_scatterplotmatrix(
  label = "Scatterplot Matrix",
  variables,
  plot_height = c(600, 200, 2000),
  plot_width = NULL,
  pre_output = NULL,
  post_output = NULL
)
}
\arguments{
\item{label}{(\code{character(1)}) Label shown in the navigation item for the module or module group.
For \code{modules()} defaults to \code{"root"}. See \code{Details}.}

\item{variables}{(\code{data_extract_spec} or \code{list} of multiple \code{data_extract_spec})
Specifies plotting variables from an incoming dataset with filtering and selecting. In case of
\code{data_extract_spec} use \code{select_spec(..., ordered = TRUE)} if plot elements should be
rendered according to selection order.}

\item{plot_height}{(\code{numeric}) optional, specifies the plot height as a three-element vector of
\code{value}, \code{min}, and \code{max} intended for use with a slider UI element.}

\item{plot_width}{(\code{numeric}) optional, specifies the plot width as a three-element vector of
\code{value}, \code{min}, and \code{max} for a slider encoding the plot width.}

\item{pre_output}{(\code{shiny.tag}) optional, text or UI element to be displayed before the module's output,
providing context or a title.
with text placed before the output to put the output into context. For example a title.}

\item{post_output}{(\code{shiny.tag}) optional, text or UI element to be displayed after the module's output,
adding context or further instructions. Elements like \code{shiny::helpText()} are useful.}
}
\value{
Object of class \code{teal_module} to be used in \code{teal} applications.
}
\description{
Generates a scatterplot matrix from selected \code{variables} from datasets.
Each plot within the matrix represents the relationship between two variables,
providing the overview of correlations and distributions across selected data.
}
\note{
For more examples, please see the vignette "Using scatterplot matrix" via
\code{vignette("using-scatterplot-matrix", package = "teal.modules.general")}.
}
\examples{
\dontshow{if (require("lattice", quietly = TRUE)) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
# general data example
data <- teal_data()
data <- within(data, {
  countries <- data.frame(
    id = c("DE", "FR", "IT", "ES", "PT", "GR", "NL", "BE", "LU", "AT"),
    government = factor(
      c(2, 2, 2, 1, 2, 2, 1, 1, 1, 2),
      labels = c("Monarchy", "Republic")
    ),
    language_family = factor(
      c(1, 3, 3, 3, 3, 2, 1, 1, 3, 1),
      labels = c("Germanic", "Hellenic", "Romance")
    ),
    population = c(83, 67, 60, 47, 10, 11, 17, 11, 0.6, 9),
    area = c(357, 551, 301, 505, 92, 132, 41, 30, 2.6, 83),
    gdp = c(3.4, 2.7, 2.1, 1.4, 0.3, 0.2, 0.7, 0.5, 0.1, 0.4),
    debt = c(2.1, 2.3, 2.4, 2.6, 2.3, 2.4, 2.3, 2.4, 2.3, 2.4)
  )
  sales <- data.frame(
    id = 1:50,
    country_id = sample(
      c("DE", "FR", "IT", "ES", "PT", "GR", "NL", "BE", "LU", "AT"),
      size = 50,
      replace = TRUE
    ),
    year = sort(sample(2010:2020, 50, replace = TRUE)),
    venue = sample(c("small", "medium", "large", "online"), 50, replace = TRUE),
    cancelled = sample(c(TRUE, FALSE), 50, replace = TRUE),
    quantity = rnorm(50, 100, 20),
    costs = rnorm(50, 80, 20),
    profit = rnorm(50, 20, 10)
  )
})
datanames(data) <- c("countries", "sales")
join_keys(data) <- join_keys(
  join_key("countries", "countries", "id"),
  join_key("sales", "sales", "id"),
  join_key("countries", "sales", c("id" = "country_id"))
)

app <- init(
  data = data,
  modules = modules(
    tm_g_scatterplotmatrix(
      label = "Scatterplot matrix",
      variables = list(
        data_extract_spec(
          dataname = "countries",
          select = select_spec(
            label = "Select variables:",
            choices = variable_choices(data[["countries"]]),
            selected = c("area", "gdp", "debt"),
            multiple = TRUE,
            ordered = TRUE,
            fixed = FALSE
          )
        ),
        data_extract_spec(
          dataname = "sales",
          filter = filter_spec(
            label = "Select variable:",
            vars = "country_id",
            choices = value_choices(data[["sales"]], "country_id"),
            selected = c("DE", "FR", "IT", "ES", "PT", "GR", "NL", "BE", "LU", "AT"),
            multiple = TRUE
          ),
          select = select_spec(
            label = "Select variables:",
            choices = variable_choices(data[["sales"]], c("quantity", "costs", "profit")),
            selected = c("quantity", "costs", "profit"),
            multiple = TRUE,
            ordered = TRUE,
            fixed = FALSE
          )
        )
      )
    )
  )
)
if (interactive()) {
  shinyApp(app$ui, app$server)
}
\dontshow{\}) # examplesIf}
\dontshow{if (require("lattice", quietly = TRUE)) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
# CDISC data example
data <- teal_data()
data <- within(data, {
  ADSL <- rADSL
  ADRS <- rADRS
})
datanames(data) <- c("ADSL", "ADRS")
join_keys(data) <- default_cdisc_join_keys[datanames(data)]

app <- init(
  data = data,
  modules = modules(
    tm_g_scatterplotmatrix(
      label = "Scatterplot matrix",
      variables = list(
        data_extract_spec(
          dataname = "ADSL",
          select = select_spec(
            label = "Select variables:",
            choices = variable_choices(data[["ADSL"]]),
            selected = c("AGE", "RACE", "SEX"),
            multiple = TRUE,
            ordered = TRUE,
            fixed = FALSE
          )
        ),
        data_extract_spec(
          dataname = "ADRS",
          filter = filter_spec(
            label = "Select endpoints:",
            vars = c("PARAMCD", "AVISIT"),
            choices = value_choices(data[["ADRS"]], c("PARAMCD", "AVISIT"), c("PARAM", "AVISIT")),
            selected = "INVET - END OF INDUCTION",
            multiple = TRUE
          ),
          select = select_spec(
            label = "Select variables:",
            choices = variable_choices(data[["ADRS"]]),
            selected = c("AGE", "AVAL", "ADY"),
            multiple = TRUE,
            ordered = TRUE,
            fixed = FALSE
          )
        )
      )
    )
  )
)
if (interactive()) {
  shinyApp(app$ui, app$server)
}
\dontshow{\}) # examplesIf}
}
\section{Examples in Shinylive}{
\describe{
  \item{example-1}{
    \href{https://shinylive.io/r/app/#code=NobwRAdghgtgpmAXGKAHVA6ASmANGAYwHsIAXOMpMAGwEsAjAJykYE8AKcqajGIgEwCu1OAGcMAcwpxm1AJQAdCLTIyoBUrQBucAAQAeALS6AZoIgbaJdnN0AVLAFUAoksZwAjoNrv2CmlCkmgRw-ri6XrRwpNSsugC89k7OihAAxLpSEGrUuvyBULpwAB6wqCJK+aSFRrpc1AD6VVA2lQUGxgDutKQAFirszeEgSrq6xOakjFGiHXkFGCbM8H4QY2O0-AnjfmAAIq54uv4AYlhhx2AAknYX-s4AyndgAAq3R-4A4ucfYAByABlngAhQ7hfwAxzPACC7zkuFG6wkRB0jAg8DI2xM6lIREYq3W6wI7AATOEyboKQBGcm03Q0+nhBkk+GIwnUKD0ODUWaJYn+ACyJBYBF6rGeWDgqEE9DoBH8qUJrLW6w5EAkgigUga2JgtFiWJxeIJhJ2DIAzOFLbprdbqUyrUzlabdByuTztvywJ8ZDAoMp5b8ABLckQBiVEP0WUJgRXrZ3rVBEaUczQkT3sAAc1oAbAB2cI5gAM4QALAX6SX6QyqRWqQyixgc+EAJwJsYsOCFPnsc0AVgrfb7FqLDL7Rb7rep5oppZH5Kb4Wz7cy-FQGfNGFLC4rJIwNa34Ub1sbFMbFcbk90jYbW5X-Dg9FIGb3zIwdsPlMXX4-25-C7-PdfzjONRG4MQ5maRZljgE0Ni2RIqUQccERVMYJjINgGk2bYwJgcpYLZIldgOZ4zmeG5nkeZ43meb5nkBEEwUuSEYThVCXVEWgAC89ESFCiLGdxynUPikhcIiV1YLtGFwvFSHYPCCNJUci0QEkiw08IUN0YSORCbYHBcOQVx0CBBDEpSRHYL1RD9ahqGeeB+FoQQYGeDlGCkZ4SDobIFW0qs9NEwzkhXAh-RCBy4AQ3QrNg4kjOccITmhAEHhSQLwmCgzEiSlcvH9TRSDiRI0TxGB2B0qkiyrDTwqIURSF5XSIAqqqq0zOqixXVBGCIEwem2crGEqnStMrEClAAX1SZpoHgURBgKWxai9DCphmZ4wJEUQFSUAArIgVAaABrOBWCW5pVuMI6TvOy6TTuiAzou3YNumMRng+rbfk2ALEWe16OH8Havt+MG9r+-gAZVIGHveohJk+qHwTASGLi9f6wG2fwPtYbCYdjVJUiUNB11qFQehNZptiGRE+CEXbtkZ4QxDguoYAaCQGlECKghkcoiFIP1NuKDmxjdblcbAB5+fIRghefUXpmKMJBN0LQWFoTlmcSOgmol9ZmgaEophxXnUDgfk0JdeZqgWsS8aRzDfo4u2xlEblrefRIvZEDRLeto2XSl3JEn8B5vY0TXtd1sREHV22PdFY6QharXpnjhpU9odPluqYBgGd5HfoAXTLlcPf9n2YozfxOygZ4JDXZ4HyfWGPcJGBhE0AjQpcd2u90PEH3cWKkqHrvBuKOvElS9LXGT004xdKvjYKU3inNwPRCtm3h-m2AnfR8DUY1wlBuoBWsX1BWg4P4fXU5aWI9l6Pn0znXZTgRO8Av00mcWol0wgTbGU8U69DThBRIWtqAWRzlAvO7NmhF1BmffwFc0b40Jp3J+NcNBzx2P4UivxyK-Eor8aivxaK-Hor8RivxQTPFYr8WEeDh492vrQfueVkgALGOvQkBDfZxQ-g-EOpow4yyjgHT+ccf6iD-hAu2ud07bC-tnNRKCChoNPrtTBZdwhekKmQHo4pfjECaqjS4fUBo9AVEI00IiiEmM1GYkq31GrNWeHYwapAOFdy4X3EQA9koCPWKPGQRDJ4RLGDPIhC8MoRNXivDWqSpoQFSLQEwuh2AqAVjibQsETK6BGCqUQ-QICsGhOgdg5MAAk3hwiNK9owVEqRppKDANNMuQA}{Open in Shinylive}
    \if{html}{\out{<script type="text/javascript">$(function() {  var if_pkgdown = [...document.scripts].filter(x => x.src.includes("pkgdown.js")).length > 0;  if (if_pkgdown) {    $("iframe.iframe_shinylive").css("width", "150\%");  }});</script>}}
    \if{html}{\out{<iframe class="iframe_shinylive" src="https://shinylive.io/r/app/#code=NobwRAdghgtgpmAXGKAHVA6ASmANGAYwHsIAXOMpMAGwEsAjAJykYE8AKcqajGIgEwCu1OAGcMAcwpxm1AJQAdCLTIyoBUrQBucAAQAeALS6AZoIgbaJdnN0AVLAFUAoksZwAjoNrv2CmlCkmgRw-ri6XrRwpNSsugC89k7OihAAxLpSEGrUuvyBULpwAB6wqCJK+aSFRrpc1AD6VVA2lQUGxgDutKQAFirszeEgSrq6xOakjFGiHXkFGCbM8H4QY2O0-AnjfmAAIq54uv4AYlhhx2AAknYX-s4AyndgAAq3R-4A4ucfYAByABlngAhQ7hfwAxzPACC7zkuFG6wkRB0jAg8DI2xM6lIREYq3W6wI7AATOEyboKQBGcm03Q0+nhBkk+GIwnUKD0ODUWaJYn+ACyJBYBF6rGeWDgqEE9DoBH8qUJrLW6w5EAkgigUga2JgtFiWJxeIJhJ2DIAzOFLbprdbqUyrUzlabdByuTztvywJ8ZDAoMp5b8ABLckQBiVEP0WUJgRXrZ3rVBEaUczQkT3sAAc1oAbAB2cI5gAM4QALAX6SX6QyqRWqQyixgc+EAJwJsYsOCFPnsc0AVgrfb7FqLDL7Rb7rep5oppZH5Kb4Wz7cy-FQGfNGFLC4rJIwNa34Ub1sbFMbFcbk90jYbW5X-Dg9FIGb3zIwdsPlMXX4-25-C7-PdfzjONRG4MQ5maRZljgE0Ni2RIqUQccERVMYJjINgGk2bYwJgcpYLZIldgOZ4zmeG5nkeZ43meb5nkBEEwUuSEYThVCXVEWgAC89ESFCiLGdxynUPikhcIiV1YLtGFwvFSHYPCCNJUci0QEkiw08IUN0YSORCbYHBcOQVx0CBBDEpSRHYL1RD9ahqGeeB+FoQQYGeDlGCkZ4SDobIFW0qs9NEwzkhXAh-RCBy4AQ3QrNg4kjOccITmhAEHhSQLwmCgzEiSlcvH9TRSDiRI0TxGB2B0qkiyrDTwqIURSF5XSIAqqqq0zOqixXVBGCIEwem2crGEqnStMrEClAAX1SZpoHgURBgKWxai9DCphmZ4wJEUQFSUAArIgVAaABrOBWCW5pVuMI6TvOy6TTuiAzou3YNumMRng+rbfk2ALEWe16OH8Havt+MG9r+-gAZVIGHveohJk+qHwTASGLi9f6wG2fwPtYbCYdjVJUiUNB11qFQehNZptiGRE+CEXbtkZ4QxDguoYAaCQGlECKghkcoiFIP1NuKDmxjdblcbAB5+fIRghefUXpmKMJBN0LQWFoTlmcSOgmol9ZmgaEophxXnUDgfk0JdeZqgWsS8aRzDfo4u2xlEblrefRIvZEDRLeto2XSl3JEn8B5vY0TXtd1sREHV22PdFY6QharXpnjhpU9odPluqYBgGd5HfoAXTLlcPf9n2YozfxOygZ4JDXZ4HyfWGPcJGBhE0AjQpcd2u90PEH3cWKkqHrvBuKOvElS9LXGT004xdKvjYKU3inNwPRCtm3h-m2AnfR8DUY1wlBuoBWsX1BWg4P4fXU5aWI9l6Pn0znXZTgRO8Av00mcWol0wgTbGU8U69DThBRIWtqAWRzlAvO7NmhF1BmffwFc0b40Jp3J+NcNBzx2P4UivxyK-Eor8aivxaK-Hor8RivxQTPFYr8WEeDh492vrQfueVkgALGOvQkBDfZxQ-g-EOpow4yyjgHT+ccf6iD-hAu2ud07bC-tnNRKCChoNPrtTBZdwhekKmQHo4pfjECaqjS4fUBo9AVEI00IiiEmM1GYkq31GrNWeHYwapAOFdy4X3EQA9koCPWKPGQRDJ4RLGDPIhC8MoRNXivDWqSpoQFSLQEwuh2AqAVjibQsETK6BGCqUQ-QICsGhOgdg5MAAk3hwiNK9owVEqRppKDANNMuQA" style="height: 800px; width: 100\%; border: 1px solid rgba(0,0,0,0.175); border-radius: .375rem; position: relative; z-index: 1"></iframe>}}
  }
  \item{example-2}{
    \href{https://shinylive.io/r/app/#code=NobwRAdghgtgpmAXGKAHVA6ASmANGAYwHsIAXOMpMAGwEsAjAJykYE8AKcqajGIgEwCu1OAGcMAcwpxm1AJQAdCLTIyoBUrQBucAAQAeALS6AZoIgbaJdnN0AVLAFUAoksZwAjoNrv2CmlCkmgRw-ri6XrRwpNSsugC89k7OihAAxLoAwgAiAJIAypm6-IFQunAAHrCoIkolpGVGulzUAPr1UDZ1pQbGAO60pAAWKuwd4SBKuroAgtn5ADK9uoxzi1Oz2Vj5y6tb+UoAvqkd0PCiY6W2TQR+YGsLYbr+c9v+qQBWRCqtANZwrAuHWuxn4cBMUGEpFaBH4tFEBFaXx+-0BwFOsDElwacgAukolGhUMsVIM-BBph0EsVSrgNnwhCJRNSGcIsRtpqQYK0JK0EYFyIwakQuYFGLQKuTptLdNQoPQ4NRqf58gQBTJhaRdDAxRKwhzpVoWLR5UzqXRRKQpTLpR1WpVSMwNHzUHBbgabTSGmc9IkXvNHngPTbRIq3VrEqGRM7RK73RTPTa5QqlX6wPkwxpdEbxaaxIh9QnE9KCENviFmYkcyb6CIYWXaBXsVBgMB-eswLjcXI6UXi7oo+G4Pxqe77gBxVx4Z5gLAzTJT8Iq5wADXevf70pgUNoNV9SRcG83uiIjDB7hHiQch+DnpMEuH1IAYjMFvlXH3Paliz3b16oPaFSOuo0Kxm61rFhi8DKvc+yFpu97UIK1KIYKLrgX+MrJoqMEZtGWoUPwqDfGQogFkGn6Jjmla6GOAAKMxzgAsjkTwvAAagUuR2OumElg2FbUka1CCHA9blliHStv6bydri4T0YxMwsdkbH3Jx+TceutF3AxzFqTMGlaWAci-pRnqDhoj5prkABy7HOHYujGM4tnZLoADyT66HZ2SOJkdi5B5tnwce25IbuIjUteH6bmZm6WRGA6ZqBcYQf22GpjOeHhtmxp5mRoWbqWEk0dWebiY2kmlNJsGyV28XHol1k6S8k4Gexr4GdkACavHmTa4WaHu0XJEem6nueLUxeN-b3hULUvm+sX9t+iZrTKG26GtqSpLQJi6OwKiCiB2hwDYtiTAmogjBArAzOg7BEgAJN44QvaGjA6IwqSHEoYCHLiQA}{Open in Shinylive}
    \if{html}{\out{<script type="text/javascript">$(function() {  var if_pkgdown = [...document.scripts].filter(x => x.src.includes("pkgdown.js")).length > 0;  if (if_pkgdown) {    $("iframe.iframe_shinylive").css("width", "150\%");  }});</script>}}
    \if{html}{\out{<iframe class="iframe_shinylive" src="https://shinylive.io/r/app/#code=NobwRAdghgtgpmAXGKAHVA6ASmANGAYwHsIAXOMpMAGwEsAjAJykYE8AKcqajGIgEwCu1OAGcMAcwpxm1AJQAdCLTIyoBUrQBucAAQAeALS6AZoIgbaJdnN0AVLAFUAoksZwAjoNrv2CmlCkmgRw-ri6XrRwpNSsugC89k7OihAAxLoAwgAiAJIAypm6-IFQunAAHrCoIkolpGVGulzUAPr1UDZ1pQbGAO60pAAWKuwd4SBKuroAgtn5ADK9uoxzi1Oz2Vj5y6tb+UoAvqkd0PCiY6W2TQR+YGsLYbr+c9v+qQBWRCqtANZwrAuHWuxn4cBMUGEpFaBH4tFEBFaXx+-0BwFOsDElwacgAukolGhUMsVIM-BBph0EsVSrgNnwhCJRNSGcIsRtpqQYK0JK0EYFyIwakQuYFGLQKuTptLdNQoPQ4NRqf58gQBTJhaRdDAxRKwhzpVoWLR5UzqXRRKQpTLpR1WpVSMwNHzUHBbgabTSGmc9IkXvNHngPTbRIq3VrEqGRM7RK73RTPTa5QqlX6wPkwxpdEbxaaxIh9QnE9KCENviFmYkcyb6CIYWXaBXsVBgMB-eswLjcXI6UXi7oo+G4Pxqe77gBxVx4Z5gLAzTJT8Iq5wADXevf70pgUNoNV9SRcG83uiIjDB7hHiQch+DnpMEuH1IAYjMFvlXH3Paliz3b16oPaFSOuo0Kxm61rFhi8DKvc+yFpu97UIK1KIYKLrgX+MrJoqMEZtGWoUPwqDfGQogFkGn6Jjmla6GOAAKMxzgAsjkTwvAAagUuR2OumElg2FbUka1CCHA9blliHStv6bydri4T0YxMwsdkbH3Jx+TceutF3AxzFqTMGlaWAci-pRnqDhoj5prkABy7HOHYujGM4tnZLoADyT66HZ2SOJkdi5B5tnwce25IbuIjUteH6bmZm6WRGA6ZqBcYQf22GpjOeHhtmxp5mRoWbqWEk0dWebiY2kmlNJsGyV28XHol1k6S8k4Gexr4GdkACavHmTa4WaHu0XJEem6nueLUxeN-b3hULUvm+sX9t+iZrTKG26GtqSpLQJi6OwKiCiB2hwDYtiTAmogjBArAzOg7BEgAJN44QvaGjA6IwqSHEoYCHLiQA" style="height: 800px; width: 100\%; border: 1px solid rgba(0,0,0,0.175); border-radius: .375rem; position: relative; z-index: 1"></iframe>}}
  }
}
}

