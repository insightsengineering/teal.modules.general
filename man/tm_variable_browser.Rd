% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tm_variable_browser.R
\name{tm_variable_browser}
\alias{tm_variable_browser}
\title{Variable Browser Teal Module}
\usage{
tm_variable_browser(
  label = "Variable Browser",
  datasets_selected = character(0),
  pre_output = NULL,
  post_output = NULL,
  ggplot2_args = teal.devel::ggplot2_args()
)
}
\arguments{
\item{label}{(\code{character}) Label shown in the navigation item for the module.}

\item{datasets_selected}{(`character`) A vector of datasets which should be
shown and in what order. Names in the vector have to correspond with datasets names.
If vector of length zero (default) then all datasets are shown.}

\item{pre_output}{optional, \code{shiny.tag} with text placed before the
output to put the output into context. For example a title.}

\item{post_output}{optional, \code{shiny.tag} with text placed after the
output to put the output into context. For example the
\code{\link[shiny]{helpText}} elements are useful.}

\item{ggplot2_args}{(`ggplot2_args`) object created by [teal.devel::ggplot2_args()]
with settings for the module plot.
For more details see the help vignette:
`vignette("Custom ggplot2_args arguments module", package = "teal.devel")`
The argument is merged with options variable `teal.ggplot2_args` and default module setup.}
}
\description{
The variable browser provides a table with variable names and labels and a
plot that visualizes the content of a particular variable.
}
\details{
Numeric columns with fewer than 30 distinct values can be treated as either factors
or numbers with a checkbox allowing users to switch how they are treated (if < 6 unique values
then the default is categorical, otherwise it is numeric).
}
\examples{
library(scda)

ADSL <- synthetic_cdisc_data("latest")$adsl
ADTTE <- synthetic_cdisc_data("latest")$adtte

app <- init(
  data = cdisc_data(
    cdisc_dataset("ADSL", ADSL, code = "ADSL <- synthetic_cdisc_data(\"latest\")$adsl"),
    cdisc_dataset("ADTTE", ADTTE, code = "ADTTE <- synthetic_cdisc_data(\"latest\")$adtte"),
    check = TRUE
  ),
  root_modules(
    tm_variable_browser(label = "Variable browser")
  )
)
\dontrun{
shinyApp(app$ui, app$server)
}
}
